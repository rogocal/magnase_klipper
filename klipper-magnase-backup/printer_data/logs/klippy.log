===== Config file =====
[gcode_shell_command hello_world]
command = echo hello world
timeout = 2.
verbose = True

[gcode_macro HELLO_WORLD]
gcode = 
	RUN_SHELL_COMMAND CMD=hello_world

[virtual_sdcard]
path = /home/admin/printer_data/gcodes
on_error_gcode = CANCEL_PRINT

[pause_resume]

[display_status]

[respond]

[gcode_macro CANCEL_PRINT]
description = Cancel the actual running print
rename_existing = CANCEL_PRINT_BASE
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set allow_park = client.park_at_cancel|default(false)|lower == 'true' %}
	{% set retract = client.cancel_retract|default(5.0)|abs %}
	
	{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)
	else "X=" ~ client.park_at_cancel_x %}
	{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)
	else "Y=" ~ client.park_at_cancel_y %}
	{% set custom_park = park_x|length > 0 or park_y|length > 0 %}
	
	
	{% if printer['gcode_macro RESUME'].restore_idle_timeout > 0 %}
	SET_IDLE_TIMEOUT TIMEOUT={printer['gcode_macro RESUME'].restore_idle_timeout}
	{% endif %}
	{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}
	_CLIENT_RETRACT LENGTH={retract}
	TURN_OFF_HEATERS
	M106 S0
	{client.user_cancel_macro|default("")}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False
	
	SET_PAUSE_NEXT_LAYER ENABLE=0
	SET_PAUSE_AT_LAYER ENABLE=0 LAYER=0
	CANCEL_PRINT_BASE

[gcode_macro PAUSE]
description = Pause the actual running print
rename_existing = PAUSE_BASE
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set idle_timeout = client.idle_timeout|default(0) %}
	{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != '' else 0 %}
	{% set restore = False if printer.toolhead.extruder == ''
	else True  if params.RESTORE|default(1)|int == 1 else False %}
	
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{'restore': restore, 'temp': temp}}"
	
	{% if idle_timeout > 0 %}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}
	SET_IDLE_TIMEOUT TIMEOUT={idle_timeout}
	{% endif %}
	PAUSE_BASE
	{client.user_pause_macro|default("")}
	_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}

[gcode_macro RESUME]
description = Resume the actual running print
rename_existing = RESUME_BASE
variable_last_extruder_temp = {'restore': False, 'temp': 0}
variable_restore_idle_timeout = 0
variable_idle_state = False
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
	{% set sp_move = client.speed_move|default(velocity) %}
	{% set runout_resume = True if client.runout_sensor|default("") == ""
	else True if not printer[client.runout_sensor].enabled
	else printer[client.runout_sensor].filament_detected %}
	{% set can_extrude = True if printer.toolhead.extruder == ''
	else printer[printer.toolhead.extruder].can_extrude %}
	{% set do_resume = False %}
	
	
	{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False
	{% if last_extruder_temp.restore %}
	
	RESPOND TYPE=echo MSG='{"Restoring \"%s\" temperature to %3.1f\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }'
	M109 S{last_extruder_temp.temp}
	{% set do_resume = True %}
	{% elif can_extrude %}
	{% set do_resume = True %}
	{% else %}
	RESPOND TYPE=error MSG='{"Resume aborted !!! \"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}'
	{% endif %}
	
	{% elif can_extrude %}
	{% set do_resume = True %}
	{% else %}
	RESPOND TYPE=error MSG='{"Resume aborted !!! \"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}'
	{% endif %}
	{% if runout_resume %}
	{% if do_resume %}
	{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}
	{client.user_resume_macro|default("")}
	_CLIENT_EXTRUDE
	RESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}
	{% endif %}
	{% else %}
	RESPOND TYPE=error MSG='{"Resume aborted !!! \"%s\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}'
	{% endif %}

[gcode_macro SET_PAUSE_NEXT_LAYER]
description = Enable a pause if the next layer is reached
gcode = 
	{% set pause_next_layer = printer['gcode_macro SET_PRINT_STATS_INFO'].pause_next_layer %}
	{% set ENABLE = params.ENABLE|default(1)|int != 0 %}
	{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}
	SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ 'enable': ENABLE, 'call': MACRO }}"

[gcode_macro SET_PAUSE_AT_LAYER]
description = Enable/disable a pause if a given layer number is reached
gcode = 
	{% set pause_at_layer = printer['gcode_macro SET_PRINT_STATS_INFO'].pause_at_layer %}
	{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined
	else params.LAYER is defined %}
	{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}
	{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}
	SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ 'enable': ENABLE, 'layer': LAYER, 'call': MACRO }}"

[gcode_macro SET_PRINT_STATS_INFO]
rename_existing = SET_PRINT_STATS_INFO_BASE
description = Overwrite, to get pause_next_layer and pause_at_layer feature
variable_pause_next_layer = { 'enable': False, 'call': "PAUSE" }
variable_pause_at_layer = { 'enable': False, 'layer': 0, 'call': "PAUSE" }
gcode = 
	{% if pause_next_layer.enable %}
	RESPOND TYPE=echo MSG='{"%s, forced by pause_next_layer" % pause_next_layer.call}'
	{pause_next_layer.call}
	SET_PAUSE_NEXT_LAYER ENABLE=0
	{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}
	RESPOND TYPE=echo MSG='{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}'
	{pause_at_layer.call}
	SET_PAUSE_AT_LAYER ENABLE=0
	{% endif %}
	SET_PRINT_STATS_INFO_BASE {rawparams}

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description = Helper: park toolhead used in PAUSE and CANCEL_PRINT
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
	{% set use_custom     = client.use_custom_pos|default(false)|lower == 'true' %}
	{% set custom_park_x  = client.custom_park_x|default(0.0) %}
	{% set custom_park_y  = client.custom_park_y|default(0.0) %}
	{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}
	{% set sp_hop         = client.speed_hop|default(15) * 60 %}
	{% set sp_move        = client.speed_move|default(velocity) * 60 %}
	
	{% set origin    = printer.gcode_move.homing_origin %}
	{% set act       = printer.gcode_move.gcode_position %}
	{% set max       = printer.toolhead.axis_maximum %}
	{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}
	{% set round_bed = True if printer.configfile.settings.printer.kinematics is in ['delta','polar','rotary_delta','winch']
	else False %}
	
	{% set z_min = params.Z_MIN|default(0)|float %}
	{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}
	{% set x_park = params.X       if params.X is defined
	else custom_park_x  if use_custom
	else 0.0            if round_bed
	else (max.x - 5.0) %}
	{% set y_park = params.Y       if params.Y is defined
	else custom_park_y  if use_custom
	else (max.y - 5.0)  if round_bed and z_park < cone
	else 0.0            if round_bed
	else (max.y - 5.0) %}
	
	_CLIENT_RETRACT
	{% if "xyz" in printer.toolhead.homed_axes %}
	G90
	G1 Z{z_park} F{sp_hop}
	G1 X{x_park} Y{y_park} F{sp_move}
	{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}
	{% else %}
	RESPOND TYPE=echo MSG='Printer not homed'
	{% endif %}

[gcode_macro _CLIENT_EXTRUDE]
description = Extrudes, if the extruder is hot enough
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == 'true') and (printer.firmware_retraction is defined) %}
	{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}
	{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}
	{% set absolute_extrude = printer.gcode_move.absolute_extrude %}
	
	{% if printer.toolhead.extruder != '' %}
	{% if printer[printer.toolhead.extruder].can_extrude %}
	{% if use_fw_retract %}
	{% if length < 0 %}
	G10
	{% else %}
	G11
	{% endif %}
	{% else %}
	M83
	G1 E{length} F{(speed|float|abs) * 60}
	{% if absolute_extrude %}
	M82
	{% endif %}
	{% endif %}
	{% else %}
	RESPOND TYPE=echo MSG='{"\"%s\" not hot enough" % printer.toolhead.extruder}'
	{% endif %}
	{% endif %}

[gcode_macro _CLIENT_RETRACT]
description = Retracts, if the extruder is hot enough
gcode = 
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}
	{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}
	
	_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}

[gcode_macro BED_MESH_CALIBRATE]
rename_existing = _BED_MESH_CALIBRATE
gcode = 
	
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set bed_mesh_min = printer.configfile.settings.bed_mesh.mesh_min %}
	{% set bed_mesh_max = printer.configfile.settings.bed_mesh.mesh_max %}
	{% set probe_count = printer.configfile.settings.bed_mesh.probe_count %}
	{% set kamp_settings = printer["gcode_macro _KAMP_Settings"] %}
	{% set verbose_enable = kamp_settings.verbose_enable | abs %}
	{% set probe_dock_enable = kamp_settings.probe_dock_enable | abs %}
	{% set attach_macro = kamp_settings.attach_macro | string %}
	{% set detach_macro = kamp_settings.detach_macro | string %}
	{% set mesh_margin = kamp_settings.mesh_margin | float %}
	{% set fuzz_amount = kamp_settings.fuzz_amount | float %}
	{% set probe_count = probe_count if probe_count|length > 1 else probe_count * 2  %}
	{% set max_probe_point_distance_x = ( bed_mesh_max[0] - bed_mesh_min[0] ) / (probe_count[0] - 1)  %}
	{% set max_probe_point_distance_y = ( bed_mesh_max[1] - bed_mesh_min[1] ) / (probe_count[1] - 1)  %}
	{% set x_min = all_points | map(attribute=0) | min | default(bed_mesh_min[0]) %}
	{% set y_min = all_points | map(attribute=1) | min | default(bed_mesh_min[1]) %}
	{% set x_max = all_points | map(attribute=0) | max | default(bed_mesh_max[0]) %}
	{% set y_max = all_points | map(attribute=1) | max | default(bed_mesh_max[1]) %}
	
	{% set fuzz_range = range((0) | int, (fuzz_amount * 100) | int + 1) %}
	{% set adapted_x_min = x_min - mesh_margin - (fuzz_range | random / 100.0) %}
	{% set adapted_y_min = y_min - mesh_margin - (fuzz_range | random / 100.0) %}
	{% set adapted_x_max = x_max + mesh_margin + (fuzz_range | random / 100.0) %}
	{% set adapted_y_max = y_max + mesh_margin + (fuzz_range | random / 100.0) %}
	
	{% set adapted_x_min = [adapted_x_min , bed_mesh_min[0]] | max %}
	{% set adapted_y_min = [adapted_y_min , bed_mesh_min[1]] | max %}
	{% set adapted_x_max = [adapted_x_max , bed_mesh_max[0]] | min %}
	{% set adapted_y_max = [adapted_y_max , bed_mesh_max[1]] | min %}
	
	{% set points_x = (((adapted_x_max - adapted_x_min) / max_probe_point_distance_x) | round(method='ceil') | int) + 1 %}
	{% set points_y = (((adapted_y_max - adapted_y_min) / max_probe_point_distance_y) | round(method='ceil') | int) + 1 %}
	
	{% if (([points_x, points_y]|max) > 6) %}
	{% set algorithm = "bicubic" %}
	{% set min_points = 4 %}
	{% else %}
	{% set algorithm = "lagrange" %}
	{% set min_points = 3 %}
	{% endif %}
	
	{% set points_x = [points_x , min_points]|max %}
	{% set points_y = [points_y , min_points]|max %}
	{% set points_x = [points_x , probe_count[0]]|min %}
	{% set points_y = [points_y , probe_count[1]]|min %}
	
	{% if verbose_enable == True %}
	{% if printer.exclude_object.objects != [] %}
	
	{ action_respond_info( "Algorithm: {}.".format(
	(algorithm),
	)) }
	
	{ action_respond_info("Default probe count: {},{}.".format(
	(probe_count[0]),
	(probe_count[1]),
	)) }
	
	{ action_respond_info("Adapted probe count: {},{}.".format(
	(points_x),
	(points_y),
	)) }
	
	{action_respond_info("Default mesh bounds: {}, {}.".format(
	(bed_mesh_min[0],bed_mesh_min[1]),
	(bed_mesh_max[0],bed_mesh_max[1]),
	)) }
	
	{% if mesh_margin > 0 %}
	{action_respond_info("Mesh margin is {}, mesh bounds extended by {}mm.".format(
	(mesh_margin),
	(mesh_margin),
	)) }
	{% else %}
	{action_respond_info("Mesh margin is 0, margin not increased.")}
	{% endif %}
	
	{% if fuzz_amount > 0 %}
	{action_respond_info("Mesh point fuzzing enabled, points fuzzed up to {}mm.".format(
	(fuzz_amount),
	)) }
	{% else %}
	{action_respond_info("Fuzz amount is 0, mesh points not fuzzed.")}
	{% endif %}
	
	{ action_respond_info("Adapted mesh bounds: {}, {}.".format(
	(adapted_x_min, adapted_y_min),
	(adapted_x_max, adapted_y_max),
	)) }
	
	{action_respond_info("KAMP adjustments successful. Happy KAMPing!")}
	
	{% else %}
	
	{action_respond_info("No objects detected! Check your gcode and make sure that EXCLUDE_OBJECT_DEFINE is happening before BED_MESH_CALIBRATE is called. Defaulting to regular meshing.")}
	G4 P5000
	{% endif %}
	
	{% endif %}
	
	{% if probe_dock_enable == True %}
	{attach_macro}
	{% endif %}
	
	_BED_MESH_CALIBRATE mesh_min={adapted_x_min},{adapted_y_min} mesh_max={adapted_x_max},{adapted_y_max} ALGORITHM={algorithm} PROBE_COUNT={points_x},{points_y}
	
	{% if probe_dock_enable == True %}
	{detach_macro}
	{% endif %}

[gcode_macro LINE_PURGE]
description = A purge macro that adapts to be near your actual printed objects
gcode = 
	
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	{% set cross_section = printer.configfile.settings.extruder.max_extrude_cross_section | float %}
	
	
	{% if printer.firmware_retraction is defined %}
	{% set RETRACT = G10 | string %}
	{% set UNRETRACT = G11 | string %}
	{% else %}
	{% set RETRACT = 'G1 E-.5 F2100' | string %}
	{% set UNRETRACT = 'G1 E.5 F2100' | string %}
	{% endif %}
	
	
	{% set verbose_enable = printer["gcode_macro _KAMP_Settings"].verbose_enable | abs %}
	{% set purge_height = printer["gcode_macro _KAMP_Settings"].purge_height | float %}
	{% set tip_distance = printer["gcode_macro _KAMP_Settings"].tip_distance | float %}
	{% set purge_margin = printer["gcode_macro _KAMP_Settings"].purge_margin | float %}
	{% set purge_amount = printer["gcode_macro _KAMP_Settings"].purge_amount | float %}
	{% set flow_rate = printer["gcode_macro _KAMP_Settings"].flow_rate | float %}
	
	
	
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set purge_x_min = (all_points | map(attribute=0) | min | default(0)) %}
	{% set purge_x_max = (all_points | map(attribute=0) | max | default(0)) %}
	{% set purge_y_min = (all_points | map(attribute=1) | min | default(0)) %}
	{% set purge_y_max = (all_points | map(attribute=1) | max | default(0)) %}
	
	{% set purge_x_center = ([((purge_x_max + purge_x_min) / 2) - (purge_amount / 2), 0] | max) %}
	{% set purge_y_center = ([((purge_y_max + purge_y_min) / 2) - (purge_amount / 2), 0] | max) %}
	
	{% set purge_x_origin = ([purge_x_min - purge_margin, 0] | max) %}
	{% set purge_y_origin = ([purge_y_min - purge_margin, 0] | max) %}
	
	
	{% set purge_move_speed = (flow_rate / 5.0) * 60 | float %}
	
	{% if cross_section < 5 %}
	
	{action_respond_info("[Extruder] max_extrude_cross_section is insufficient for purge, please set it to 5 or greater. Purge skipped.")}
	
	{% else %}
	
	{% if verbose_enable == True %}
	
	{action_respond_info("Moving filament tip {}mms".format(
	(tip_distance),
	)) }
	{% endif %}
	
	{% if printer.firmware_retraction is defined %}
	{action_respond_info("KAMP purge is using firmware retraction.")}
	{% else %}
	{action_respond_info("KAMP purge is not using firmware retraction, it is recommended to configure it.")}
	{% endif %}
	
	{% if purge_y_origin > 0 %}
	
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm/s3.".format(
	(purge_x_center),
	(purge_y_origin),
	(purge_amount),
	(flow_rate),
	)) }
	
	{% else %}
	
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm/s3.".format(
	(purge_x_origin),
	(purge_y_center),
	(purge_amount),
	(flow_rate),
	)) }
	
	{% endif %}
	
	SAVE_GCODE_STATE NAME=Prepurge_State
	
	{% if purge_y_origin > 0 %}
	
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_center} Y{purge_y_origin}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 X{purge_x_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 X{purge_x_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	
	{% else %}
	
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_origin} Y{purge_y_center}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 Y{purge_y_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 Y{purge_y_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	
	{% endif %}
	
	RESTORE_GCODE_STATE NAME=Prepurge_State
	
	{% endif %}

[gcode_macro SMART_PARK]
description = Parks your printhead near the print area for pre-print hotend heating.
gcode = 
	
	{% set kamp_settings = printer["gcode_macro _KAMP_Settings"] %}
	{% set z_height = kamp_settings.smart_park_height | float %}
	{% set purge_margin = kamp_settings.purge_margin | float %}
	{% set verbose_enable = kamp_settings.verbose_enable | abs %}
	{% set center_x = printer.toolhead.axis_maximum.x / 2 | float %}
	{% set center_y = printer.toolhead.axis_maximum.y / 2 | float %}
	{% set axis_minimum_x = printer.toolhead.axis_minimum.x | float %}
	{% set axis_minimum_y = printer.toolhead.axis_minimum.y | float %}
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set x_min = all_points | map(attribute=0) | min | default(center_x) %}
	{% set y_min = all_points | map(attribute=1) | min | default(center_y) %}
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	
	{% if purge_margin > 0 and x_min != center_x and y_min != center_y %}
	{% set x_min = [ x_min - purge_margin , x_min ] | min %}
	{% set y_min = [ y_min - purge_margin , y_min ] | min %}
	{% set x_min = [ x_min , axis_minimum_x ] | max %}
	{% set y_min = [ y_min , axis_minimum_y ] | max %}
	{% endif %}
	
	
	{% if verbose_enable == True %}
	
	{ action_respond_info("Smart Park location: {},{}.".format(
	(x_min),
	(y_min),
	)) }
	
	{% endif %}
	
	{% if printer.toolhead.position.z < z_height %}
	G0 Z{z_height}
	{% endif %}
	G0 X{x_min} Y{y_min} F{travel_speed}
	G0 Z{z_height}

[gcode_macro _KAMP_Settings]
description = This macro contains all adjustable settings for KAMP
variable_verbose_enable = True
variable_mesh_margin = 0
variable_fuzz_amount = 0
variable_probe_dock_enable = False
variable_attach_macro = 'Attach_Probe'
variable_detach_macro = 'Dock_Probe'
variable_purge_height = 0.8
variable_tip_distance = 0
variable_purge_margin = 10
variable_purge_amount = 30
variable_flow_rate = 12
variable_smart_park_height = 10
gcode = 
	
	{action_respond_info(" Running the KAMP_Settings macro does nothing, it is only used for storing KAMP settings. ")}

[mcu]
serial = /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method = command
baud = 115200

[exclude_object]

[stepper_x]
step_pin = PB12
dir_pin = PB10
enable_pin = !PB1
microsteps = 32
rotation_distance = 80
full_steps_per_rotation = 400
endstop_pin = !PA13
position_endstop = 0
position_min = 0
position_max = 235
homing_speed = 40

[stepper_y]
step_pin = PB0
dir_pin = PC5
enable_pin = !PB1
microsteps = 32
rotation_distance = 80
full_steps_per_rotation = 400
endstop_pin = !PB9
position_endstop = 0
position_max = 235
homing_speed = 40

[stepper_z]
step_pin = PA1
dir_pin = !PA0
enable_pin = !PC4
microsteps = 32
rotation_distance = 16
full_steps_per_rotation = 400
endstop_pin = probe:z_virtual_endstop
position_max = 250
position_min = -10
homing_speed = 5

[extruder]
step_pin = !PC3
dir_pin = !PC2
enable_pin = !PB1
microsteps = 32
rotation_distance = 31.38
full_steps_per_rotation = 400
nozzle_diameter = 0.400
filament_diameter = 1.750
heater_pin = PC8
sensor_type = EPCOS 100K B57560G104F
sensor_pin = PC1
min_temp = 0
max_temp = 260
pressure_advance = 0
max_extrude_only_distance = 500.0
control = pid
pid_kp = 19.198
pid_ki = 0.556
pid_kd = 165.579

[heater_bed]
heater_pin = PC9
sensor_type = EPCOS 100K B57560G104F
sensor_pin = PC0
control = pid
pid_kp = 20.7074
pid_ki = 3.5872
pid_kd = 79.6889
min_temp = 5
max_temp = 100

[fan]
pin = PC6

[heater_fan hotend_fan]
pin = PC7
max_power = 1.0
fan_speed = 1
shutdown_speed = 0.0
kick_start_time = 0
heater = extruder
heater_temp = 50.0

[printer]
kinematics = cartesian
max_velocity = 180
max_accel = 2500
max_accel_to_decel = 1250
max_z_velocity = 12
max_z_accel = 50
square_corner_velocity = 2

[bed_mesh]
speed = 100
horizontal_move_z = 20
mesh_min = 30, 15
mesh_max = 200, 215
probe_count = 10, 10
mesh_pps = 2, 2
fade_start = 1
fade_end = 10
fade_target = 0
algorithm = bicubic
bicubic_tension = 0.2
move_check_distance = 3
split_delta_z = .025

[bed_screws]
screw1 = 17, 20
screw2 = 217, 20
screw3 = 17, 220
screw4 = 217, 220

[filament_switch_sensor my_sensor]
pause_on_runout = True
runout_gcode = [pause_resume]
event_delay = 3.0
pause_delay = 0.5
switch_pin = PC14

[firmware_retraction]
retract_length = 2.2
retract_speed = 60

[idle_timeout]
gcode = 
	TURN_OFF_HEATERS
	M84
timeout = 28800

[bltouch]
sensor_pin = !PC13
control_pin = PA8
x_offset = -42
y_offset = -5
pin_up_touch_mode_reports_triggered = False
stow_on_each_sample = False
pin_up_reports_not_triggered = False
probe_with_touch_mode = True
pin_move_time = 0.4
speed = 20
z_offset = 0.590

[safe_z_home]
home_xy_position = 115, 115
speed = 50
z_hop = 5
z_hop_speed = 5

[gcode_macro update_git]
gcode = 
	RUN_SHELL_COMMAND CMD=update_git_script

[gcode_shell_command update_git_script]
command = bash /home/admin/klipper-backup/script.sh
timeout = 90.0
verbose = True

[gcode_macro START_PRINT]
gcode = 
	{% set BED_TEMP = params.BED_TEMP|default(60)|float %}
	{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
	
	M140 S{BED_TEMP}
	
	G90
	
	SET_GCODE_OFFSET Z=0.0
	
	G28
	
	BED_MESH_CALIBRATE
	
	G1 Z5 F3000
	
	G1 Z0.15 F300
	
	M190 S{BED_TEMP}
	
	M109 S{EXTRUDER_TEMP}
	
	SMART_PARK
	
	LINE_PURGE

[gcode_macro END_PRINT]
gcode = 
	
	M140 S0
	M104 S0
	M106 S0
	
	G91
	G1 X-2 Y-2 E-3 F300
	
	G1 Z10 F3000
	G90
	
	M84

[gcode_macro M300]
gcode = 
	
	{% set S = params.S|default(1000)|int %}
	
	{% set P = params.P|default(100)|int %}
	SET_PIN PIN=BEEPER_pin VALUE=0.5 CYCLE_TIME={ 1.0/S if S > 0 else 1 }
	G4 P{P}
	SET_PIN PIN=BEEPER_pin VALUE=0

[gcode_macro M600]
gcode = 
	{% set X = params.X|default(50)|float %}
	{% set Y = params.Y|default(0)|float %}
	{% set Z = params.Z|default(10)|float %}
	SAVE_GCODE_STATE NAME=M600_state
	PAUSE
	G91
	G1 E-.8 F2700
	G1 Z{Z}
	G90
	G1 X{X} Y{Y} F3000
	G91
	G1 E-50 F1000
	RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro QUERY_BME280]
gcode = 
	{% set sensor = printer["bme280 my_sensor"] %}
	{action_respond_info(
	"Temperature: %.2f C\n"
	"Pressure: %.2f hPa\n"
	"Humidity: %.2f%%" % (
	sensor.temperature,
	sensor.pressure,
	sensor.humidity))}

[gcode_macro QUERY_HTU21D]
gcode = 
	{% set sensor = printer["htu21d my_sensor"] %}
	{action_respond_info(
	"Temperature: %.2f C\n"
	"Humidity: %.2f%%" % (
	sensor.temperature,
	sensor.humidity))}

[gcode_macro M117]
rename_existing = M117.1
gcode = 
	{% if rawparams %}
	{% set escaped_msg = rawparams.split(';', 1)[0].split('\x23', 1)[0]|replace('"', '\\"') %}
	SET_DISPLAY_TEXT MSG="{escaped_msg}"
	RESPOND TYPE=command MSG="{escaped_msg}"
	{% else %}
	SET_DISPLAY_TEXT
	{% endif %}

[sdcard_loop]

[gcode_macro M808]
gcode = 
	{% if params.K is not defined and params.L is defined %}SDCARD_LOOP_BEGIN COUNT={params.L|int}{% endif %}
	{% if params.K is not defined and params.L is not defined %}SDCARD_LOOP_END{% endif %}
	{% if params.K is defined and params.L is not defined %}SDCARD_LOOP_DESIST{% endif %}

[gcode_macro M486]
gcode = 
	
	
	
	
	
	
	
	
	
	
	
	{% if 'exclude_object' not in printer %}
	{action_raise_error("[exclude_object] is not enabled")}
	{% endif %}
	
	{% if 'T' in params %}
	EXCLUDE_OBJECT RESET=1
	
	{% for i in range(params.T | int) %}
	EXCLUDE_OBJECT_DEFINE NAME={i}
	{% endfor %}
	{% endif %}
	
	{% if 'C' in params %}
	EXCLUDE_OBJECT CURRENT=1
	{% endif %}
	
	{% if 'P' in params %}
	EXCLUDE_OBJECT NAME={params.P}
	{% endif %}
	
	{% if 'S' in params %}
	{% if params.S == '-1' %}
	{% if printer.exclude_object.current_object %}
	EXCLUDE_OBJECT_END NAME={printer.exclude_object.current_object}
	{% endif %}
	{% else %}
	EXCLUDE_OBJECT_START NAME={params.S}
	{% endif %}
	{% endif %}
	
	{% if 'U' in params %}
	EXCLUDE_OBJECT RESET=1 NAME={params.U}
	{% endif %}

[gcode_macro G130]
gcode = 
	M400
	{% if ('X' in params) and ('mcp4018 x_axis_pot' in printer.configfile.config) %}
	{% set x_value = params['X']|float %}
	{% set x_axis_pot_scale = printer.configfile.config["mcp4018 x_axis_pot"].scale|float %}
	SET_DIGIPOT DIGIPOT=x_axis_pot WIPER={ x_axis_pot_scale * (x_value / 127.0)}
	{% endif %}
	{% if ('Y' in params) and ('mcp4018 y_axis_pot' in printer.configfile.config) %}
	{% set y_value = params['Y']|float %}
	{% set y_axis_pot_scale = printer.configfile.config["mcp4018 y_axis_pot"].scale|float %}
	SET_DIGIPOT DIGIPOT=y_axis_pot WIPER={ y_axis_pot_scale * (y_value / 127.0)}
	{% endif %}
	{% if ('Z' in params) and ('mcp4018 z_axis_pot' in printer.configfile.config) %}
	{% set z_value = params['Z']|float %}
	{% set z_axis_pot_scale = printer.configfile.config["mcp4018 z_axis_pot"].scale|float %}
	SET_DIGIPOT DIGIPOT=z_axis_pot WIPER={ z_axis_pot_scale * (z_value / 127.0)}
	{% endif %}
	{% if ('A' in params) and ('mcp4018 a_axis_pot' in printer.configfile.config) %}
	{% set a_value = params['A']|float %}
	{% set a_axis_pot_scale = printer.configfile.config["mcp4018 a_axis_pot"].scale|float %}
	SET_DIGIPOT DIGIPOT=a_axis_pot WIPER={ a_axis_pot_scale * (a_value / 127.0)}
	{% endif %}
	{% if ('B' in params) and ('mcp4018 b_axis_pot' in printer.configfile.config) %}
	{% set b_value = params['B']|float %}
	{% set b_axis_pot_scale = printer.configfile.config["mcp4018 b_axis_pot"].scale|float %}
	SET_DIGIPOT DIGIPOT=b_axis_pot WIPER={ b_axis_pot_scale * (b_value / 127.0)}
	{% endif %}

[gcode_macro G29]
gcode = 
	BED_MESH_CLEAR
	BED_MESH_CALIBRATE
	BED_MESH_PROFILE SAVE=default
	BED_MESH_PROFILE LOAD=default

[bed_mesh default]
version = 1
points = 
	-0.002500, 0.013750, 0.021250
	0.013750, 0.022500, 0.025000
	0.012500, 0.022500, 0.028750
x_count = 3
y_count = 3
mesh_x_pps = 2
mesh_y_pps = 2
algo = lagrange
tension = 0.2
min_x = 102.69999999999999
max_x = 127.28
min_y = 102.7
max_y = 127.28
=======================
Loaded MCU 'mcu' 107 commands (v0.11.0-257-ged66982b / gcc: (15:8-2019-q3-1+b1) 8.3.1 20190703 (release) [gcc-8-branch revision 273027] binutils: (2.35.2-2+14+b2) 2.35.2)
MCU 'mcu' config: ADC_MAX=4095 BUS_PINS_i2c1=PB6,PB7 BUS_PINS_i2c1a=PB8,PB9 BUS_PINS_i2c2=PB10,PB11 BUS_PINS_spi1=PA6,PA7,PA5 BUS_PINS_spi1a=PB4,PB5,PB3 BUS_PINS_spi2=PB14,PB15,PB13 BUS_PINS_spi3=PB4,PB5,PB3 CLOCK_FREQ=72000000 INITIAL_PINS=!PC6,!PD13 MCU=stm32f103xe PWM_MAX=255 RECEIVE_WINDOW=192 RESERVE_PINS_serial=PA10,PA9 SERIAL_BAUD=115200 STATS_SUMSQ_BASE=256 STEPPER_BOTH_EDGE=1
Configured MCU 'mcu' (1024 moves)
Args: ['/home/admin/klipper/klippy/klippy.py', '/home/admin/printer_data/config/printer.cfg', '-I', '/home/admin/printer_data/comms/klippy.serial', '-l', '/home/admin/printer_data/logs/klippy.log', '-a', '/home/admin/printer_data/comms/klippy.sock']
Git version: 'v0.12.0-8-g187cc2f1-dirty'
Untracked files: klippy/extras/gcode_shell_command.py
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper
CPU: 2 core Intel(R) Atom(TM) CPU N450   @ 1.66GHz
Python: '3.9.2 (default, Feb 28 2021, 17:03:44) \n[GCC 10.2.1 20210110]'
webhooks client 4128452344: {'program': 'Moonraker', 'version': 'v0.8.0-202-gdddd968'}
=============== Log rollover at Tue Nov 21 01:44:00 2023 ===============
Stats 278015.2: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000008 bytes_write=183345 bytes_read=3419990 bytes_retransmit=9 bytes_invalid=0 send_seq=29796 receive_seq=29796 retransmit_seq=2 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004201  heater_bed: target=0 temp=25.8 pwm=0.000 sysload=0.20 cputime=521.861 memavail=1471604 print_time=28839.131 buffer_time=0.000 print_stall=0 extruder: target=0 temp=29.1 pwm=0.000
Stats 278016.2: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000008 bytes_write=183351 bytes_read=3420096 bytes_retransmit=9 bytes_invalid=0 send_seq=29797 receive_seq=29797 retransmit_seq=2 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004199  heater_bed: target=0 temp=25.9 pwm=0.000 sysload=0.20 cputime=521.882 memavail=1471712 print_time=28839.131 buffer_time=0.000 print_stall=0 extruder: target=0 temp=29.3 pwm=0.000
Stats 278017.2: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000008 bytes_write=183357 bytes_read=3420217 bytes_retransmit=9 bytes_invalid=0 send_seq=29798 receive_seq=29798 retransmit_seq=2 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004198  heater_bed: target=0 temp=26.2 pwm=0.000 sysload=0.20 cputime=521.896 memavail=1471712 print_time=28839.131 buffer_time=0.000 print_stall=0 extruder: target=0 temp=29.4 pwm=0.000
Stats 278018.2: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000008 bytes_write=183363 bytes_read=3420338 bytes_retransmit=9 bytes_invalid=0 send_seq=29799 receive_seq=29799 retransmit_seq=2 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004197  heater_bed: target=0 temp=26.3 pwm=0.000 sysload=0.18 cputime=521.909 memavail=1471712 print_time=28839.131 buffer_time=0.000 print_stall=0 extruder: target=0 temp=29.2 pwm=0.000
Stats 278019.2: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000008 bytes_write=183369 bytes_read=3420457 bytes_retransmit=9 bytes_invalid=0 send_seq=29800 receive_seq=29800 retransmit_seq=2 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004196  heater_bed: target=0 temp=26.1 pwm=0.000 sysload=0.18 cputime=521.922 memavail=1471712 print_time=28839.131 buffer_time=0.000 print_stall=0 extruder: target=0 temp=29.1 pwm=0.000
Stats 278020.2: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000008 bytes_write=183375 bytes_read=3420578 bytes_retransmit=9 bytes_invalid=0 send_seq=29801 receive_seq=29801 retransmit_seq=2 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004194  heater_bed: target=0 temp=25.9 pwm=0.000 sysload=0.18 cputime=521.935 memavail=1472028 print_time=28839.131 buffer_time=0.000 print_stall=0 extruder: target=0 temp=28.9 pwm=0.000
Stats 278021.2: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000008 bytes_write=183381 bytes_read=3420699 bytes_retransmit=9 bytes_invalid=0 send_seq=29802 receive_seq=29802 retransmit_seq=2 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004196  heater_bed: target=0 temp=26.3 pwm=0.000 sysload=0.18 cputime=521.950 memavail=1471740 print_time=28839.131 buffer_time=0.000 print_stall=0 extruder: target=0 temp=29.4 pwm=0.000
Stats 278022.2: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000008 bytes_write=183387 bytes_read=3420805 bytes_retransmit=9 bytes_invalid=0 send_seq=29803 receive_seq=29803 retransmit_seq=2 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004197  heater_bed: target=0 temp=26.0 pwm=0.000 sysload=0.18 cputime=521.969 memavail=1471740 print_time=28839.131 buffer_time=0.000 print_stall=0 extruder: target=0 temp=29.3 pwm=0.000
Stats 278023.2: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000008 bytes_write=183393 bytes_read=3420926 bytes_retransmit=9 bytes_invalid=0 send_seq=29804 receive_seq=29804 retransmit_seq=2 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004197  heater_bed: target=0 temp=25.9 pwm=0.000 sysload=0.16 cputime=521.988 memavail=1471772 print_time=28839.131 buffer_time=0.000 print_stall=0 extruder: target=0 temp=29.0 pwm=0.000
Stats 278024.2: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000008 bytes_write=183399 bytes_read=3421060 bytes_retransmit=9 bytes_invalid=0 send_seq=29805 receive_seq=29805 retransmit_seq=2 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004199  heater_bed: target=0 temp=25.9 pwm=0.000 sysload=0.16 cputime=522.007 memavail=1471744 print_time=28839.131 buffer_time=0.000 print_stall=0 extruder: target=0 temp=29.2 pwm=0.000
Stats 278025.2: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000008 bytes_write=183405 bytes_read=3421166 bytes_retransmit=9 bytes_invalid=0 send_seq=29806 receive_seq=29806 retransmit_seq=2 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004200  heater_bed: target=0 temp=26.0 pwm=0.000 sysload=0.16 cputime=522.026 memavail=1471036 print_time=28839.131 buffer_time=0.000 print_stall=0 extruder: target=0 temp=29.4 pwm=0.000
Stats 278026.2: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000008 bytes_write=183411 bytes_read=3421287 bytes_retransmit=9 bytes_invalid=0 send_seq=29807 receive_seq=29807 retransmit_seq=2 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004200  heater_bed: target=0 temp=26.2 pwm=0.000 sysload=0.16 cputime=522.044 memavail=1471004 print_time=28839.131 buffer_time=0.000 print_stall=0 extruder: target=0 temp=29.4 pwm=0.000
Stats 278027.2: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000008 bytes_write=183417 bytes_read=3421408 bytes_retransmit=9 bytes_invalid=0 send_seq=29808 receive_seq=29808 retransmit_seq=2 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004201  heater_bed: target=0 temp=26.4 pwm=0.000 sysload=0.16 cputime=522.063 memavail=1471036 print_time=28839.131 buffer_time=0.000 print_stall=0 extruder: target=0 temp=29.0 pwm=0.000
Stats 278028.2: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000008 bytes_write=183423 bytes_read=3421514 bytes_retransmit=9 bytes_invalid=0 send_seq=29809 receive_seq=29809 retransmit_seq=2 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004201  heater_bed: target=0 temp=26.1 pwm=0.000 sysload=0.15 cputime=522.082 memavail=1471044 print_time=28839.131 buffer_time=0.000 print_stall=0 extruder: target=0 temp=29.1 pwm=0.000
Stats 278029.2: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000008 bytes_write=183429 bytes_read=3421648 bytes_retransmit=9 bytes_invalid=0 send_seq=29810 receive_seq=29810 retransmit_seq=2 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004201  heater_bed: target=0 temp=26.1 pwm=0.000 sysload=0.15 cputime=522.103 memavail=1471108 print_time=28839.131 buffer_time=0.000 print_stall=0 extruder: target=0 temp=28.9 pwm=0.000
Stats 278030.2: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000008 bytes_write=183435 bytes_read=3421769 bytes_retransmit=9 bytes_invalid=0 send_seq=29811 receive_seq=29811 retransmit_seq=2 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004199  heater_bed: target=0 temp=26.1 pwm=0.000 sysload=0.15 cputime=522.121 memavail=1471328 print_time=28839.131 buffer_time=0.000 print_stall=0 extruder: target=0 temp=29.4 pwm=0.000
Stats 278031.2: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000008 bytes_write=183441 bytes_read=3421875 bytes_retransmit=9 bytes_invalid=0 send_seq=29812 receive_seq=29812 retransmit_seq=2 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004201  heater_bed: target=0 temp=26.1 pwm=0.000 sysload=0.15 cputime=522.140 memavail=1471328 print_time=28839.131 buffer_time=0.000 print_stall=0 extruder: target=0 temp=29.2 pwm=0.000
Stats 278032.2: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000008 bytes_write=183447 bytes_read=3421996 bytes_retransmit=9 bytes_invalid=0 send_seq=29813 receive_seq=29813 retransmit_seq=2 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004201  heater_bed: target=0 temp=25.9 pwm=0.000 sysload=0.15 cputime=522.158 memavail=1471328 print_time=28839.131 buffer_time=0.000 print_stall=0 extruder: target=0 temp=29.1 pwm=0.000
Stats 278033.2: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000008 bytes_write=183453 bytes_read=3422117 bytes_retransmit=9 bytes_invalid=0 send_seq=29814 receive_seq=29814 retransmit_seq=2 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004200  heater_bed: target=0 temp=25.8 pwm=0.000 sysload=0.14 cputime=522.177 memavail=1471360 print_time=28839.131 buffer_time=0.000 print_stall=0 extruder: target=0 temp=29.4 pwm=0.000
Stats 278034.2: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000008 bytes_write=183459 bytes_read=3422236 bytes_retransmit=9 bytes_invalid=0 send_seq=29815 receive_seq=29815 retransmit_seq=2 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004200  heater_bed: target=0 temp=25.9 pwm=0.000 sysload=0.14 cputime=522.195 memavail=1471328 print_time=28839.131 buffer_time=0.000 print_stall=0 extruder: target=0 temp=29.4 pwm=0.000
Stats 278035.2: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000008 bytes_write=183465 bytes_read=3422357 bytes_retransmit=9 bytes_invalid=0 send_seq=29816 receive_seq=29816 retransmit_seq=2 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004200  heater_bed: target=0 temp=26.3 pwm=0.000 sysload=0.14 cputime=522.215 memavail=1471328 print_time=28839.131 buffer_time=0.000 print_stall=0 extruder: target=0 temp=29.5 pwm=0.000
Stats 278036.2: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000008 bytes_write=183471 bytes_read=3422478 bytes_retransmit=9 bytes_invalid=0 send_seq=29817 receive_seq=29817 retransmit_seq=2 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004201  heater_bed: target=0 temp=26.1 pwm=0.000 sysload=0.14 cputime=522.234 memavail=1471328 print_time=28839.131 buffer_time=0.000 print_stall=0 extruder: target=0 temp=29.0 pwm=0.000
Stats 278037.2: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000008 bytes_write=183477 bytes_read=3422584 bytes_retransmit=9 bytes_invalid=0 send_seq=29818 receive_seq=29818 retransmit_seq=2 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004202  heater_bed: target=0 temp=25.9 pwm=0.000 sysload=0.14 cputime=522.252 memavail=1471328 print_time=28839.131 buffer_time=0.000 print_stall=0 extruder: target=0 temp=29.1 pwm=0.000
Stats 278038.2: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000008 bytes_write=183483 bytes_read=3422705 bytes_retransmit=9 bytes_invalid=0 send_seq=29819 receive_seq=29819 retransmit_seq=2 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004203  heater_bed: target=0 temp=26.1 pwm=0.000 sysload=0.13 cputime=522.270 memavail=1471296 print_time=28839.131 buffer_time=0.000 print_stall=0 extruder: target=0 temp=29.3 pwm=0.000
Stats 278039.2: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000008 bytes_write=183489 bytes_read=3422839 bytes_retransmit=9 bytes_invalid=0 send_seq=29820 receive_seq=29820 retransmit_seq=2 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004202  heater_bed: target=0 temp=26.1 pwm=0.000 sysload=0.13 cputime=522.289 memavail=1471264 print_time=28839.131 buffer_time=0.000 print_stall=0 extruder: target=0 temp=28.9 pwm=0.000
Stats 278040.2: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000008 bytes_write=183495 bytes_read=3422945 bytes_retransmit=9 bytes_invalid=0 send_seq=29821 receive_seq=29821 retransmit_seq=2 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004202  heater_bed: target=0 temp=26.2 pwm=0.000 sysload=0.13 cputime=522.306 memavail=1471052 print_time=28839.131 buffer_time=0.000 print_stall=0 extruder: target=0 temp=29.0 pwm=0.000
Stats 278041.2: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000008 bytes_write=183501 bytes_read=3423066 bytes_retransmit=9 bytes_invalid=0 send_seq=29822 receive_seq=29822 retransmit_seq=2 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004200  heater_bed: target=0 temp=25.9 pwm=0.000 sysload=0.13 cputime=522.319 memavail=1471028 print_time=28839.131 buffer_time=0.000 print_stall=0 extruder: target=0 temp=29.0 pwm=0.000
Stats 278042.2: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000008 bytes_write=183507 bytes_read=3423187 bytes_retransmit=9 bytes_invalid=0 send_seq=29823 receive_seq=29823 retransmit_seq=2 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004198  heater_bed: target=0 temp=25.9 pwm=0.000 sysload=0.13 cputime=522.332 memavail=1471092 print_time=28839.131 buffer_time=0.000 print_stall=0 extruder: target=0 temp=29.3 pwm=0.000
Stats 278043.2: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000008 bytes_write=183513 bytes_read=3423293 bytes_retransmit=9 bytes_invalid=0 send_seq=29824 receive_seq=29824 retransmit_seq=2 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004198  heater_bed: target=0 temp=26.3 pwm=0.000 sysload=0.12 cputime=522.345 memavail=1471060 print_time=28839.131 buffer_time=0.000 print_stall=0 extruder: target=0 temp=29.3 pwm=0.000
Stats 278044.2: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000008 bytes_write=183519 bytes_read=3423427 bytes_retransmit=9 bytes_invalid=0 send_seq=29825 receive_seq=29825 retransmit_seq=2 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004197  heater_bed: target=0 temp=25.8 pwm=0.000 sysload=0.12 cputime=522.358 memavail=1471060 print_time=28839.131 buffer_time=0.000 print_stall=0 extruder: target=0 temp=29.2 pwm=0.000
Stats 278045.2: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000008 bytes_write=183525 bytes_read=3423548 bytes_retransmit=9 bytes_invalid=0 send_seq=29826 receive_seq=29826 retransmit_seq=2 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004196  heater_bed: target=0 temp=26.0 pwm=0.000 sysload=0.12 cputime=522.373 memavail=1471092 print_time=28839.131 buffer_time=0.000 print_stall=0 extruder: target=0 temp=29.0 pwm=0.000
Stats 278046.2: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000008 bytes_write=183531 bytes_read=3423654 bytes_retransmit=9 bytes_invalid=0 send_seq=29827 receive_seq=29827 retransmit_seq=2 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004198  heater_bed: target=0 temp=25.9 pwm=0.000 sysload=0.12 cputime=522.393 memavail=1471124 print_time=28839.131 buffer_time=0.000 print_stall=0 extruder: target=0 temp=29.2 pwm=0.000
Stats 278047.2: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000008 bytes_write=183537 bytes_read=3423769 bytes_retransmit=9 bytes_invalid=0 send_seq=29828 receive_seq=29828 retransmit_seq=2 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004199  heater_bed: target=0 temp=26.2 pwm=0.000 sysload=0.12 cputime=522.414 memavail=1471124 print_time=28839.131 buffer_time=0.000 print_stall=0 extruder: target=0 temp=29.4 pwm=0.000
Stats 278048.2: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000008 bytes_write=183543 bytes_read=3423882 bytes_retransmit=9 bytes_invalid=0 send_seq=29829 receive_seq=29829 retransmit_seq=2 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004199  heater_bed: target=0 temp=26.1 pwm=0.000 sysload=0.11 cputime=522.433 memavail=1471124 print_time=28839.131 buffer_time=0.000 print_stall=0 extruder: target=0 temp=29.0 pwm=0.000
Stats 278049.2: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000008 bytes_write=183549 bytes_read=3423981 bytes_retransmit=9 bytes_invalid=0 send_seq=29830 receive_seq=29830 retransmit_seq=2 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004199  heater_bed: target=0 temp=26.2 pwm=0.000 sysload=0.11 cputime=522.452 memavail=1471092 print_time=28839.131 buffer_time=0.000 print_stall=0 extruder: target=0 temp=29.0 pwm=0.000
Stats 278050.2: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000007 bytes_write=183555 bytes_read=3424108 bytes_retransmit=9 bytes_invalid=0 send_seq=29831 receive_seq=29831 retransmit_seq=2 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004202  heater_bed: target=0 temp=25.9 pwm=0.000 sysload=0.11 cputime=522.472 memavail=1471392 print_time=28839.131 buffer_time=0.000 print_stall=0 extruder: target=0 temp=29.1 pwm=0.000
Stats 278051.2: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000007 bytes_write=183561 bytes_read=3424229 bytes_retransmit=9 bytes_invalid=0 send_seq=29832 receive_seq=29832 retransmit_seq=2 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004202  heater_bed: target=0 temp=26.2 pwm=0.000 sysload=0.11 cputime=522.492 memavail=1471400 print_time=28839.131 buffer_time=0.000 print_stall=0 extruder: target=0 temp=29.3 pwm=0.000
Stats 278052.2: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000007 bytes_write=183567 bytes_read=3424335 bytes_retransmit=9 bytes_invalid=0 send_seq=29833 receive_seq=29833 retransmit_seq=2 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004202  heater_bed: target=0 temp=26.5 pwm=0.000 sysload=0.11 cputime=522.510 memavail=1471400 print_time=28839.131 buffer_time=0.000 print_stall=0 extruder: target=0 temp=29.6 pwm=0.000
Stats 278053.2: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000007 bytes_write=183573 bytes_read=3424456 bytes_retransmit=9 bytes_invalid=0 send_seq=29834 receive_seq=29834 retransmit_seq=2 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004202  heater_bed: target=0 temp=26.0 pwm=0.000 sysload=0.10 cputime=522.530 memavail=1471400 print_time=28839.131 buffer_time=0.000 print_stall=0 extruder: target=0 temp=29.1 pwm=0.000
Stats 278054.2: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000007 bytes_write=183579 bytes_read=3424577 bytes_retransmit=9 bytes_invalid=0 send_seq=29835 receive_seq=29835 retransmit_seq=2 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004202  heater_bed: target=0 temp=25.9 pwm=0.000 sysload=0.10 cputime=522.549 memavail=1471400 print_time=28839.131 buffer_time=0.000 print_stall=0 extruder: target=0 temp=29.2 pwm=0.000
Stats 278055.2: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000008 bytes_write=183585 bytes_read=3424696 bytes_retransmit=9 bytes_invalid=0 send_seq=29836 receive_seq=29836 retransmit_seq=2 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004203  heater_bed: target=0 temp=25.8 pwm=0.000 sysload=0.10 cputime=522.568 memavail=1471400 print_time=28839.131 buffer_time=0.000 print_stall=0 extruder: target=0 temp=29.2 pwm=0.000
Stats 278056.2: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000008 bytes_write=183591 bytes_read=3424817 bytes_retransmit=9 bytes_invalid=0 send_seq=29837 receive_seq=29837 retransmit_seq=2 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004203  heater_bed: target=0 temp=26.1 pwm=0.000 sysload=0.10 cputime=522.587 memavail=1471400 print_time=28839.131 buffer_time=0.000 print_stall=0 extruder: target=0 temp=29.2 pwm=0.000
Stats 278057.2: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000008 bytes_write=183597 bytes_read=3424938 bytes_retransmit=9 bytes_invalid=0 send_seq=29838 receive_seq=29838 retransmit_seq=2 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004204  heater_bed: target=0 temp=26.1 pwm=0.000 sysload=0.10 cputime=522.608 memavail=1471400 print_time=28839.131 buffer_time=0.000 print_stall=0 extruder: target=0 temp=28.9 pwm=0.000
Stats 278058.2: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000008 bytes_write=183603 bytes_read=3425044 bytes_retransmit=9 bytes_invalid=0 send_seq=29839 receive_seq=29839 retransmit_seq=2 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004204  heater_bed: target=0 temp=26.0 pwm=0.000 sysload=0.09 cputime=522.628 memavail=1471400 print_time=28839.131 buffer_time=0.000 print_stall=0 extruder: target=0 temp=29.1 pwm=0.000
Stats 278059.2: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000008 bytes_write=183609 bytes_read=3425165 bytes_retransmit=9 bytes_invalid=0 send_seq=29840 receive_seq=29840 retransmit_seq=2 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004204  heater_bed: target=0 temp=25.8 pwm=0.000 sysload=0.09 cputime=522.648 memavail=1471432 print_time=28839.131 buffer_time=0.000 print_stall=0 extruder: target=0 temp=29.1 pwm=0.000
Stats 278060.2: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000008 bytes_write=183615 bytes_read=3425299 bytes_retransmit=9 bytes_invalid=0 send_seq=29841 receive_seq=29841 retransmit_seq=2 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004204  heater_bed: target=0 temp=26.2 pwm=0.000 sysload=0.09 cputime=522.666 memavail=1471908 print_time=28839.131 buffer_time=0.000 print_stall=0 extruder: target=0 temp=29.2 pwm=0.000
Stats 278061.2: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000008 bytes_write=183621 bytes_read=3425405 bytes_retransmit=9 bytes_invalid=0 send_seq=29842 receive_seq=29842 retransmit_seq=2 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004204  heater_bed: target=0 temp=26.3 pwm=0.000 sysload=0.09 cputime=522.685 memavail=1471912 print_time=28839.131 buffer_time=0.000 print_stall=0 extruder: target=0 temp=29.2 pwm=0.000
Stats 278062.2: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000008 bytes_write=183627 bytes_read=3425526 bytes_retransmit=9 bytes_invalid=0 send_seq=29843 receive_seq=29843 retransmit_seq=2 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004204  heater_bed: target=0 temp=26.0 pwm=0.000 sysload=0.09 cputime=522.705 memavail=1471920 print_time=28839.131 buffer_time=0.000 print_stall=0 extruder: target=0 temp=29.0 pwm=0.000
Stats 278063.2: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000008 bytes_write=183633 bytes_read=3425647 bytes_retransmit=9 bytes_invalid=0 send_seq=29844 receive_seq=29844 retransmit_seq=2 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004204  heater_bed: target=0 temp=26.0 pwm=0.000 sysload=0.08 cputime=522.724 memavail=1471888 print_time=28839.131 buffer_time=0.000 print_stall=0 extruder: target=0 temp=29.2 pwm=0.000
Stats 278064.2: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000008 bytes_write=183639 bytes_read=3425753 bytes_retransmit=9 bytes_invalid=0 send_seq=29845 receive_seq=29845 retransmit_seq=2 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004207  heater_bed: target=0 temp=25.9 pwm=0.000 sysload=0.08 cputime=522.743 memavail=1471888 print_time=28839.131 buffer_time=0.000 print_stall=0 extruder: target=0 temp=29.3 pwm=0.000
Stats 278065.2: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000007 bytes_write=183645 bytes_read=3425887 bytes_retransmit=9 bytes_invalid=0 send_seq=29846 receive_seq=29846 retransmit_seq=2 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004207  heater_bed: target=0 temp=26.2 pwm=0.000 sysload=0.08 cputime=522.762 memavail=1471888 print_time=28839.131 buffer_time=0.000 print_stall=0 extruder: target=0 temp=29.4 pwm=0.000
Stats 278066.2: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000007 bytes_write=183651 bytes_read=3426008 bytes_retransmit=9 bytes_invalid=0 send_seq=29847 receive_seq=29847 retransmit_seq=2 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004208  heater_bed: target=0 temp=26.1 pwm=0.000 sysload=0.08 cputime=522.780 memavail=1471888 print_time=28839.131 buffer_time=0.000 print_stall=0 extruder: target=0 temp=29.0 pwm=0.000
Stats 278067.2: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000007 bytes_write=183657 bytes_read=3426114 bytes_retransmit=9 bytes_invalid=0 send_seq=29848 receive_seq=29848 retransmit_seq=2 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004212  heater_bed: target=0 temp=25.9 pwm=0.000 sysload=0.08 cputime=522.799 memavail=1471888 print_time=28839.131 buffer_time=0.000 print_stall=0 extruder: target=0 temp=29.2 pwm=0.000
Stats 278068.2: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000007 bytes_write=183663 bytes_read=3426235 bytes_retransmit=9 bytes_invalid=0 send_seq=29849 receive_seq=29849 retransmit_seq=2 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004213  heater_bed: target=0 temp=26.1 pwm=0.000 sysload=0.08 cputime=522.818 memavail=1471920 print_time=28839.131 buffer_time=0.000 print_stall=0 extruder: target=0 temp=29.2 pwm=0.000
Stats 278069.2: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000007 bytes_write=183669 bytes_read=3426356 bytes_retransmit=9 bytes_invalid=0 send_seq=29850 receive_seq=29850 retransmit_seq=2 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004212  heater_bed: target=0 temp=26.2 pwm=0.000 sysload=0.08 cputime=522.838 memavail=1471952 print_time=28839.131 buffer_time=0.000 print_stall=0 extruder: target=0 temp=29.3 pwm=0.000
Stats 278070.2: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000008 bytes_write=183675 bytes_read=3426475 bytes_retransmit=9 bytes_invalid=0 send_seq=29851 receive_seq=29851 retransmit_seq=2 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004212  heater_bed: target=0 temp=26.2 pwm=0.000 sysload=0.08 cputime=522.857 memavail=1472156 print_time=28839.131 buffer_time=0.000 print_stall=0 extruder: target=0 temp=29.2 pwm=0.000
Stats 278071.2: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000008 bytes_write=183681 bytes_read=3426596 bytes_retransmit=9 bytes_invalid=0 send_seq=29852 receive_seq=29852 retransmit_seq=2 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004212  heater_bed: target=0 temp=25.9 pwm=0.000 sysload=0.08 cputime=522.876 memavail=1472176 print_time=28839.131 buffer_time=0.000 print_stall=0 extruder: target=0 temp=29.0 pwm=0.000
Stats 278072.2: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000008 bytes_write=183687 bytes_read=3426717 bytes_retransmit=9 bytes_invalid=0 send_seq=29853 receive_seq=29853 retransmit_seq=2 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004211  heater_bed: target=0 temp=25.7 pwm=0.000 sysload=0.08 cputime=522.896 memavail=1472208 print_time=28839.131 buffer_time=0.000 print_stall=0 extruder: target=0 temp=29.1 pwm=0.000
Stats 278073.2: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000008 bytes_write=183699 bytes_read=3426823 bytes_retransmit=9 bytes_invalid=0 send_seq=29855 receive_seq=29854 retransmit_seq=2 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004210  heater_bed: target=0 temp=25.9 pwm=0.000 sysload=0.07 cputime=522.916 memavail=1472176 print_time=28839.131 buffer_time=0.000 print_stall=0 extruder: target=0 temp=29.3 pwm=0.000
Stats 278074.2: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000008 bytes_write=183705 bytes_read=3426975 bytes_retransmit=9 bytes_invalid=0 send_seq=29856 receive_seq=29856 retransmit_seq=2 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004210  heater_bed: target=0 temp=26.1 pwm=0.000 sysload=0.07 cputime=522.937 memavail=1472144 print_time=28839.131 buffer_time=0.000 print_stall=0 extruder: target=0 temp=29.1 pwm=0.000
Starting Klippy...
Args: ['/home/admin/klipper/klippy/klippy.py', '/home/admin/printer_data/config/printer.cfg', '-I', '/home/admin/printer_data/comms/klippy.serial', '-l', '/home/admin/printer_data/logs/klippy.log', '-a', '/home/admin/printer_data/comms/klippy.sock']
Git version: 'v0.12.0-8-g187cc2f1-dirty'
Untracked files: klippy/extras/gcode_shell_command.py
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper
CPU: 2 core Intel(R) Atom(TM) CPU N450   @ 1.66GHz
Python: '3.9.2 (default, Feb 28 2021, 17:03:44) \n[GCC 10.2.1 20210110]'
Start printer at Tue Nov 21 13:09:15 2023 (1700582955.2 319130.1)
===== Config file =====
[gcode_shell_command hello_world]
command = echo hello world
timeout = 2.
verbose = True

[gcode_macro HELLO_WORLD]
gcode = 
	RUN_SHELL_COMMAND CMD=hello_world

[virtual_sdcard]
path = /home/admin/printer_data/gcodes
on_error_gcode = CANCEL_PRINT

[pause_resume]

[display_status]

[respond]

[gcode_macro CANCEL_PRINT]
description = Cancel the actual running print
rename_existing = CANCEL_PRINT_BASE
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set allow_park = client.park_at_cancel|default(false)|lower == 'true' %}
	{% set retract = client.cancel_retract|default(5.0)|abs %}
	
	{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)
	else "X=" ~ client.park_at_cancel_x %}
	{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)
	else "Y=" ~ client.park_at_cancel_y %}
	{% set custom_park = park_x|length > 0 or park_y|length > 0 %}
	
	
	{% if printer['gcode_macro RESUME'].restore_idle_timeout > 0 %}
	SET_IDLE_TIMEOUT TIMEOUT={printer['gcode_macro RESUME'].restore_idle_timeout}
	{% endif %}
	{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}
	_CLIENT_RETRACT LENGTH={retract}
	TURN_OFF_HEATERS
	M106 S0
	{client.user_cancel_macro|default("")}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False
	
	SET_PAUSE_NEXT_LAYER ENABLE=0
	SET_PAUSE_AT_LAYER ENABLE=0 LAYER=0
	CANCEL_PRINT_BASE

[gcode_macro PAUSE]
description = Pause the actual running print
rename_existing = PAUSE_BASE
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set idle_timeout = client.idle_timeout|default(0) %}
	{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != '' else 0 %}
	{% set restore = False if printer.toolhead.extruder == ''
	else True  if params.RESTORE|default(1)|int == 1 else False %}
	
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{'restore': restore, 'temp': temp}}"
	
	{% if idle_timeout > 0 %}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}
	SET_IDLE_TIMEOUT TIMEOUT={idle_timeout}
	{% endif %}
	PAUSE_BASE
	{client.user_pause_macro|default("")}
	_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}

[gcode_macro RESUME]
description = Resume the actual running print
rename_existing = RESUME_BASE
variable_last_extruder_temp = {'restore': False, 'temp': 0}
variable_restore_idle_timeout = 0
variable_idle_state = False
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
	{% set sp_move = client.speed_move|default(velocity) %}
	{% set runout_resume = True if client.runout_sensor|default("") == ""
	else True if not printer[client.runout_sensor].enabled
	else printer[client.runout_sensor].filament_detected %}
	{% set can_extrude = True if printer.toolhead.extruder == ''
	else printer[printer.toolhead.extruder].can_extrude %}
	{% set do_resume = False %}
	
	
	{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False
	{% if last_extruder_temp.restore %}
	
	RESPOND TYPE=echo MSG='{"Restoring \"%s\" temperature to %3.1f\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }'
	M109 S{last_extruder_temp.temp}
	{% set do_resume = True %}
	{% elif can_extrude %}
	{% set do_resume = True %}
	{% else %}
	RESPOND TYPE=error MSG='{"Resume aborted !!! \"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}'
	{% endif %}
	
	{% elif can_extrude %}
	{% set do_resume = True %}
	{% else %}
	RESPOND TYPE=error MSG='{"Resume aborted !!! \"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}'
	{% endif %}
	{% if runout_resume %}
	{% if do_resume %}
	{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}
	{client.user_resume_macro|default("")}
	_CLIENT_EXTRUDE
	RESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}
	{% endif %}
	{% else %}
	RESPOND TYPE=error MSG='{"Resume aborted !!! \"%s\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}'
	{% endif %}

[gcode_macro SET_PAUSE_NEXT_LAYER]
description = Enable a pause if the next layer is reached
gcode = 
	{% set pause_next_layer = printer['gcode_macro SET_PRINT_STATS_INFO'].pause_next_layer %}
	{% set ENABLE = params.ENABLE|default(1)|int != 0 %}
	{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}
	SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ 'enable': ENABLE, 'call': MACRO }}"

[gcode_macro SET_PAUSE_AT_LAYER]
description = Enable/disable a pause if a given layer number is reached
gcode = 
	{% set pause_at_layer = printer['gcode_macro SET_PRINT_STATS_INFO'].pause_at_layer %}
	{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined
	else params.LAYER is defined %}
	{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}
	{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}
	SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ 'enable': ENABLE, 'layer': LAYER, 'call': MACRO }}"

[gcode_macro SET_PRINT_STATS_INFO]
rename_existing = SET_PRINT_STATS_INFO_BASE
description = Overwrite, to get pause_next_layer and pause_at_layer feature
variable_pause_next_layer = { 'enable': False, 'call': "PAUSE" }
variable_pause_at_layer = { 'enable': False, 'layer': 0, 'call': "PAUSE" }
gcode = 
	{% if pause_next_layer.enable %}
	RESPOND TYPE=echo MSG='{"%s, forced by pause_next_layer" % pause_next_layer.call}'
	{pause_next_layer.call}
	SET_PAUSE_NEXT_LAYER ENABLE=0
	{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}
	RESPOND TYPE=echo MSG='{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}'
	{pause_at_layer.call}
	SET_PAUSE_AT_LAYER ENABLE=0
	{% endif %}
	SET_PRINT_STATS_INFO_BASE {rawparams}

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description = Helper: park toolhead used in PAUSE and CANCEL_PRINT
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
	{% set use_custom     = client.use_custom_pos|default(false)|lower == 'true' %}
	{% set custom_park_x  = client.custom_park_x|default(0.0) %}
	{% set custom_park_y  = client.custom_park_y|default(0.0) %}
	{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}
	{% set sp_hop         = client.speed_hop|default(15) * 60 %}
	{% set sp_move        = client.speed_move|default(velocity) * 60 %}
	
	{% set origin    = printer.gcode_move.homing_origin %}
	{% set act       = printer.gcode_move.gcode_position %}
	{% set max       = printer.toolhead.axis_maximum %}
	{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}
	{% set round_bed = True if printer.configfile.settings.printer.kinematics is in ['delta','polar','rotary_delta','winch']
	else False %}
	
	{% set z_min = params.Z_MIN|default(0)|float %}
	{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}
	{% set x_park = params.X       if params.X is defined
	else custom_park_x  if use_custom
	else 0.0            if round_bed
	else (max.x - 5.0) %}
	{% set y_park = params.Y       if params.Y is defined
	else custom_park_y  if use_custom
	else (max.y - 5.0)  if round_bed and z_park < cone
	else 0.0            if round_bed
	else (max.y - 5.0) %}
	
	_CLIENT_RETRACT
	{% if "xyz" in printer.toolhead.homed_axes %}
	G90
	G1 Z{z_park} F{sp_hop}
	G1 X{x_park} Y{y_park} F{sp_move}
	{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}
	{% else %}
	RESPOND TYPE=echo MSG='Printer not homed'
	{% endif %}

[gcode_macro _CLIENT_EXTRUDE]
description = Extrudes, if the extruder is hot enough
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == 'true') and (printer.firmware_retraction is defined) %}
	{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}
	{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}
	{% set absolute_extrude = printer.gcode_move.absolute_extrude %}
	
	{% if printer.toolhead.extruder != '' %}
	{% if printer[printer.toolhead.extruder].can_extrude %}
	{% if use_fw_retract %}
	{% if length < 0 %}
	G10
	{% else %}
	G11
	{% endif %}
	{% else %}
	M83
	G1 E{length} F{(speed|float|abs) * 60}
	{% if absolute_extrude %}
	M82
	{% endif %}
	{% endif %}
	{% else %}
	RESPOND TYPE=echo MSG='{"\"%s\" not hot enough" % printer.toolhead.extruder}'
	{% endif %}
	{% endif %}

[gcode_macro _CLIENT_RETRACT]
description = Retracts, if the extruder is hot enough
gcode = 
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}
	{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}
	
	_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}

[gcode_macro BED_MESH_CALIBRATE]
rename_existing = _BED_MESH_CALIBRATE
gcode = 
	
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set bed_mesh_min = printer.configfile.settings.bed_mesh.mesh_min %}
	{% set bed_mesh_max = printer.configfile.settings.bed_mesh.mesh_max %}
	{% set probe_count = printer.configfile.settings.bed_mesh.probe_count %}
	{% set kamp_settings = printer["gcode_macro _KAMP_Settings"] %}
	{% set verbose_enable = kamp_settings.verbose_enable | abs %}
	{% set probe_dock_enable = kamp_settings.probe_dock_enable | abs %}
	{% set attach_macro = kamp_settings.attach_macro | string %}
	{% set detach_macro = kamp_settings.detach_macro | string %}
	{% set mesh_margin = kamp_settings.mesh_margin | float %}
	{% set fuzz_amount = kamp_settings.fuzz_amount | float %}
	{% set probe_count = probe_count if probe_count|length > 1 else probe_count * 2  %}
	{% set max_probe_point_distance_x = ( bed_mesh_max[0] - bed_mesh_min[0] ) / (probe_count[0] - 1)  %}
	{% set max_probe_point_distance_y = ( bed_mesh_max[1] - bed_mesh_min[1] ) / (probe_count[1] - 1)  %}
	{% set x_min = all_points | map(attribute=0) | min | default(bed_mesh_min[0]) %}
	{% set y_min = all_points | map(attribute=1) | min | default(bed_mesh_min[1]) %}
	{% set x_max = all_points | map(attribute=0) | max | default(bed_mesh_max[0]) %}
	{% set y_max = all_points | map(attribute=1) | max | default(bed_mesh_max[1]) %}
	
	{% set fuzz_range = range((0) | int, (fuzz_amount * 100) | int + 1) %}
	{% set adapted_x_min = x_min - mesh_margin - (fuzz_range | random / 100.0) %}
	{% set adapted_y_min = y_min - mesh_margin - (fuzz_range | random / 100.0) %}
	{% set adapted_x_max = x_max + mesh_margin + (fuzz_range | random / 100.0) %}
	{% set adapted_y_max = y_max + mesh_margin + (fuzz_range | random / 100.0) %}
	
	{% set adapted_x_min = [adapted_x_min , bed_mesh_min[0]] | max %}
	{% set adapted_y_min = [adapted_y_min , bed_mesh_min[1]] | max %}
	{% set adapted_x_max = [adapted_x_max , bed_mesh_max[0]] | min %}
	{% set adapted_y_max = [adapted_y_max , bed_mesh_max[1]] | min %}
	
	{% set points_x = (((adapted_x_max - adapted_x_min) / max_probe_point_distance_x) | round(method='ceil') | int) + 1 %}
	{% set points_y = (((adapted_y_max - adapted_y_min) / max_probe_point_distance_y) | round(method='ceil') | int) + 1 %}
	
	{% if (([points_x, points_y]|max) > 6) %}
	{% set algorithm = "bicubic" %}
	{% set min_points = 4 %}
	{% else %}
	{% set algorithm = "lagrange" %}
	{% set min_points = 3 %}
	{% endif %}
	
	{% set points_x = [points_x , min_points]|max %}
	{% set points_y = [points_y , min_points]|max %}
	{% set points_x = [points_x , probe_count[0]]|min %}
	{% set points_y = [points_y , probe_count[1]]|min %}
	
	{% if verbose_enable == True %}
	{% if printer.exclude_object.objects != [] %}
	
	{ action_respond_info( "Algorithm: {}.".format(
	(algorithm),
	)) }
	
	{ action_respond_info("Default probe count: {},{}.".format(
	(probe_count[0]),
	(probe_count[1]),
	)) }
	
	{ action_respond_info("Adapted probe count: {},{}.".format(
	(points_x),
	(points_y),
	)) }
	
	{action_respond_info("Default mesh bounds: {}, {}.".format(
	(bed_mesh_min[0],bed_mesh_min[1]),
	(bed_mesh_max[0],bed_mesh_max[1]),
	)) }
	
	{% if mesh_margin > 0 %}
	{action_respond_info("Mesh margin is {}, mesh bounds extended by {}mm.".format(
	(mesh_margin),
	(mesh_margin),
	)) }
	{% else %}
	{action_respond_info("Mesh margin is 0, margin not increased.")}
	{% endif %}
	
	{% if fuzz_amount > 0 %}
	{action_respond_info("Mesh point fuzzing enabled, points fuzzed up to {}mm.".format(
	(fuzz_amount),
	)) }
	{% else %}
	{action_respond_info("Fuzz amount is 0, mesh points not fuzzed.")}
	{% endif %}
	
	{ action_respond_info("Adapted mesh bounds: {}, {}.".format(
	(adapted_x_min, adapted_y_min),
	(adapted_x_max, adapted_y_max),
	)) }
	
	{action_respond_info("KAMP adjustments successful. Happy KAMPing!")}
	
	{% else %}
	
	{action_respond_info("No objects detected! Check your gcode and make sure that EXCLUDE_OBJECT_DEFINE is happening before BED_MESH_CALIBRATE is called. Defaulting to regular meshing.")}
	G4 P5000
	{% endif %}
	
	{% endif %}
	
	{% if probe_dock_enable == True %}
	{attach_macro}
	{% endif %}
	
	_BED_MESH_CALIBRATE mesh_min={adapted_x_min},{adapted_y_min} mesh_max={adapted_x_max},{adapted_y_max} ALGORITHM={algorithm} PROBE_COUNT={points_x},{points_y}
	
	{% if probe_dock_enable == True %}
	{detach_macro}
	{% endif %}

[gcode_macro LINE_PURGE]
description = A purge macro that adapts to be near your actual printed objects
gcode = 
	
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	{% set cross_section = printer.configfile.settings.extruder.max_extrude_cross_section | float %}
	
	
	{% if printer.firmware_retraction is defined %}
	{% set RETRACT = G10 | string %}
	{% set UNRETRACT = G11 | string %}
	{% else %}
	{% set RETRACT = 'G1 E-.5 F2100' | string %}
	{% set UNRETRACT = 'G1 E.5 F2100' | string %}
	{% endif %}
	
	
	{% set verbose_enable = printer["gcode_macro _KAMP_Settings"].verbose_enable | abs %}
	{% set purge_height = printer["gcode_macro _KAMP_Settings"].purge_height | float %}
	{% set tip_distance = printer["gcode_macro _KAMP_Settings"].tip_distance | float %}
	{% set purge_margin = printer["gcode_macro _KAMP_Settings"].purge_margin | float %}
	{% set purge_amount = printer["gcode_macro _KAMP_Settings"].purge_amount | float %}
	{% set flow_rate = printer["gcode_macro _KAMP_Settings"].flow_rate | float %}
	
	
	
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set purge_x_min = (all_points | map(attribute=0) | min | default(0)) %}
	{% set purge_x_max = (all_points | map(attribute=0) | max | default(0)) %}
	{% set purge_y_min = (all_points | map(attribute=1) | min | default(0)) %}
	{% set purge_y_max = (all_points | map(attribute=1) | max | default(0)) %}
	
	{% set purge_x_center = ([((purge_x_max + purge_x_min) / 2) - (purge_amount / 2), 0] | max) %}
	{% set purge_y_center = ([((purge_y_max + purge_y_min) / 2) - (purge_amount / 2), 0] | max) %}
	
	{% set purge_x_origin = ([purge_x_min - purge_margin, 0] | max) %}
	{% set purge_y_origin = ([purge_y_min - purge_margin, 0] | max) %}
	
	
	{% set purge_move_speed = (flow_rate / 5.0) * 60 | float %}
	
	{% if cross_section < 5 %}
	
	{action_respond_info("[Extruder] max_extrude_cross_section is insufficient for purge, please set it to 5 or greater. Purge skipped.")}
	
	{% else %}
	
	{% if verbose_enable == True %}
	
	{action_respond_info("Moving filament tip {}mms".format(
	(tip_distance),
	)) }
	{% endif %}
	
	{% if printer.firmware_retraction is defined %}
	{action_respond_info("KAMP purge is using firmware retraction.")}
	{% else %}
	{action_respond_info("KAMP purge is not using firmware retraction, it is recommended to configure it.")}
	{% endif %}
	
	{% if purge_y_origin > 0 %}
	
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm/s3.".format(
	(purge_x_center),
	(purge_y_origin),
	(purge_amount),
	(flow_rate),
	)) }
	
	{% else %}
	
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm/s3.".format(
	(purge_x_origin),
	(purge_y_center),
	(purge_amount),
	(flow_rate),
	)) }
	
	{% endif %}
	
	SAVE_GCODE_STATE NAME=Prepurge_State
	
	{% if purge_y_origin > 0 %}
	
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_center} Y{purge_y_origin}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 X{purge_x_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 X{purge_x_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	
	{% else %}
	
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_origin} Y{purge_y_center}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 Y{purge_y_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 Y{purge_y_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	
	{% endif %}
	
	RESTORE_GCODE_STATE NAME=Prepurge_State
	
	{% endif %}

[gcode_macro SMART_PARK]
description = Parks your printhead near the print area for pre-print hotend heating.
gcode = 
	
	{% set kamp_settings = printer["gcode_macro _KAMP_Settings"] %}
	{% set z_height = kamp_settings.smart_park_height | float %}
	{% set purge_margin = kamp_settings.purge_margin | float %}
	{% set verbose_enable = kamp_settings.verbose_enable | abs %}
	{% set center_x = printer.toolhead.axis_maximum.x / 2 | float %}
	{% set center_y = printer.toolhead.axis_maximum.y / 2 | float %}
	{% set axis_minimum_x = printer.toolhead.axis_minimum.x | float %}
	{% set axis_minimum_y = printer.toolhead.axis_minimum.y | float %}
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set x_min = all_points | map(attribute=0) | min | default(center_x) %}
	{% set y_min = all_points | map(attribute=1) | min | default(center_y) %}
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	
	{% if purge_margin > 0 and x_min != center_x and y_min != center_y %}
	{% set x_min = [ x_min - purge_margin , x_min ] | min %}
	{% set y_min = [ y_min - purge_margin , y_min ] | min %}
	{% set x_min = [ x_min , axis_minimum_x ] | max %}
	{% set y_min = [ y_min , axis_minimum_y ] | max %}
	{% endif %}
	
	
	{% if verbose_enable == True %}
	
	{ action_respond_info("Smart Park location: {},{}.".format(
	(x_min),
	(y_min),
	)) }
	
	{% endif %}
	
	{% if printer.toolhead.position.z < z_height %}
	G0 Z{z_height}
	{% endif %}
	G0 X{x_min} Y{y_min} F{travel_speed}
	G0 Z{z_height}

[gcode_macro _KAMP_Settings]
description = This macro contains all adjustable settings for KAMP
variable_verbose_enable = True
variable_mesh_margin = 0
variable_fuzz_amount = 0
variable_probe_dock_enable = False
variable_attach_macro = 'Attach_Probe'
variable_detach_macro = 'Dock_Probe'
variable_purge_height = 0.8
variable_tip_distance = 0
variable_purge_margin = 10
variable_purge_amount = 30
variable_flow_rate = 12
variable_smart_park_height = 10
gcode = 
	
	{action_respond_info(" Running the KAMP_Settings macro does nothing, it is only used for storing KAMP settings. ")}

[mcu]
serial = /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method = command
baud = 115200

[exclude_object]

[stepper_x]
step_pin = PB12
dir_pin = PB10
enable_pin = !PB1
microsteps = 32
rotation_distance = 80
full_steps_per_rotation = 400
endstop_pin = !PA13
position_endstop = 0
position_min = 0
position_max = 235
homing_speed = 40

[stepper_y]
step_pin = PB0
dir_pin = PC5
enable_pin = !PB1
microsteps = 32
rotation_distance = 80
full_steps_per_rotation = 400
endstop_pin = !PB9
position_endstop = 0
position_max = 235
homing_speed = 40

[stepper_z]
step_pin = PA1
dir_pin = !PA0
enable_pin = !PC4
microsteps = 32
rotation_distance = 16
full_steps_per_rotation = 400
endstop_pin = probe:z_virtual_endstop
position_max = 250
position_min = -10
homing_speed = 5

[extruder]
step_pin = !PC3
dir_pin = !PC2
enable_pin = !PB1
microsteps = 32
rotation_distance = 31.38
full_steps_per_rotation = 400
nozzle_diameter = 0.400
filament_diameter = 1.750
heater_pin = PC8
sensor_type = EPCOS 100K B57560G104F
sensor_pin = PC1
min_temp = 0
max_temp = 260
pressure_advance = 0
max_extrude_only_distance = 500.0
control = pid
pid_kp = 19.198
pid_ki = 0.556
pid_kd = 165.579

[heater_bed]
heater_pin = PC9
sensor_type = EPCOS 100K B57560G104F
sensor_pin = PC0
control = pid
pid_kp = 20.7074
pid_ki = 3.5872
pid_kd = 79.6889
min_temp = 5
max_temp = 100

[fan]
pin = PC6

[heater_fan hotend_fan]
pin = PC7
max_power = 1.0
fan_speed = 1
shutdown_speed = 0.0
kick_start_time = 0
heater = extruder
heater_temp = 50.0

[printer]
kinematics = cartesian
max_velocity = 180
max_accel = 2500
max_accel_to_decel = 1250
max_z_velocity = 12
max_z_accel = 50
square_corner_velocity = 2

[bed_mesh]
speed = 100
horizontal_move_z = 20
mesh_min = 30, 15
mesh_max = 200, 215
probe_count = 10, 10
mesh_pps = 2, 2
fade_start = 1
fade_end = 10
fade_target = 0
algorithm = bicubic
bicubic_tension = 0.2
move_check_distance = 3
split_delta_z = .025

[bed_screws]
screw1 = 17, 20
screw2 = 217, 20
screw3 = 17, 220
screw4 = 217, 220

[filament_switch_sensor my_sensor]
pause_on_runout = True
runout_gcode = [pause_resume]
event_delay = 3.0
pause_delay = 0.5
switch_pin = PC14

[firmware_retraction]
retract_length = 2.2
retract_speed = 60

[idle_timeout]
gcode = 
	TURN_OFF_HEATERS
	M84
timeout = 28800

[bltouch]
sensor_pin = !PC13
control_pin = PA8
x_offset = -42
y_offset = -5
pin_up_touch_mode_reports_triggered = False
stow_on_each_sample = False
pin_up_reports_not_triggered = False
probe_with_touch_mode = True
pin_move_time = 0.4
speed = 20
z_offset = 0.590

[safe_z_home]
home_xy_position = 115, 115
speed = 50
z_hop = 5
z_hop_speed = 5

[gcode_macro update_git]
gcode = 
	RUN_SHELL_COMMAND CMD=update_git_script

[gcode_shell_command update_git_script]
command = bash /home/admin/klipper-backup/script.sh
timeout = 90.0
verbose = True

[gcode_macro START_PRINT]
gcode = 
	{% set BED_TEMP = params.BED_TEMP|default(60)|float %}
	{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
	
	M140 S{BED_TEMP}
	
	G90
	
	SET_GCODE_OFFSET Z=0.0
	
	G28
	
	BED_MESH_CALIBRATE
	
	G1 Z5 F3000
	
	G1 Z0.15 F300
	
	M190 S{BED_TEMP}
	
	M109 S{EXTRUDER_TEMP}
	
	SMART_PARK
	
	LINE_PURGE

[gcode_macro END_PRINT]
gcode = 
	
	M140 S0
	M104 S0
	M106 S0
	
	G91
	G1 X-2 Y-2 E-3 F300
	
	G1 Z10 F3000
	G90
	
	M84

[gcode_macro M300]
gcode = 
	
	{% set S = params.S|default(1000)|int %}
	
	{% set P = params.P|default(100)|int %}
	SET_PIN PIN=BEEPER_pin VALUE=0.5 CYCLE_TIME={ 1.0/S if S > 0 else 1 }
	G4 P{P}
	SET_PIN PIN=BEEPER_pin VALUE=0

[gcode_macro M600]
gcode = 
	{% set X = params.X|default(50)|float %}
	{% set Y = params.Y|default(0)|float %}
	{% set Z = params.Z|default(10)|float %}
	SAVE_GCODE_STATE NAME=M600_state
	PAUSE
	G91
	G1 E-.8 F2700
	G1 Z{Z}
	G90
	G1 X{X} Y{Y} F3000
	G91
	G1 E-50 F1000
	RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro QUERY_BME280]
gcode = 
	{% set sensor = printer["bme280 my_sensor"] %}
	{action_respond_info(
	"Temperature: %.2f C\n"
	"Pressure: %.2f hPa\n"
	"Humidity: %.2f%%" % (
	sensor.temperature,
	sensor.pressure,
	sensor.humidity))}

[gcode_macro QUERY_HTU21D]
gcode = 
	{% set sensor = printer["htu21d my_sensor"] %}
	{action_respond_info(
	"Temperature: %.2f C\n"
	"Humidity: %.2f%%" % (
	sensor.temperature,
	sensor.humidity))}

[gcode_macro M117]
rename_existing = M117.1
gcode = 
	{% if rawparams %}
	{% set escaped_msg = rawparams.split(';', 1)[0].split('\x23', 1)[0]|replace('"', '\\"') %}
	SET_DISPLAY_TEXT MSG="{escaped_msg}"
	RESPOND TYPE=command MSG="{escaped_msg}"
	{% else %}
	SET_DISPLAY_TEXT
	{% endif %}

[sdcard_loop]

[gcode_macro M808]
gcode = 
	{% if params.K is not defined and params.L is defined %}SDCARD_LOOP_BEGIN COUNT={params.L|int}{% endif %}
	{% if params.K is not defined and params.L is not defined %}SDCARD_LOOP_END{% endif %}
	{% if params.K is defined and params.L is not defined %}SDCARD_LOOP_DESIST{% endif %}

[gcode_macro M486]
gcode = 
	
	
	
	
	
	
	
	
	
	
	
	{% if 'exclude_object' not in printer %}
	{action_raise_error("[exclude_object] is not enabled")}
	{% endif %}
	
	{% if 'T' in params %}
	EXCLUDE_OBJECT RESET=1
	
	{% for i in range(params.T | int) %}
	EXCLUDE_OBJECT_DEFINE NAME={i}
	{% endfor %}
	{% endif %}
	
	{% if 'C' in params %}
	EXCLUDE_OBJECT CURRENT=1
	{% endif %}
	
	{% if 'P' in params %}
	EXCLUDE_OBJECT NAME={params.P}
	{% endif %}
	
	{% if 'S' in params %}
	{% if params.S == '-1' %}
	{% if printer.exclude_object.current_object %}
	EXCLUDE_OBJECT_END NAME={printer.exclude_object.current_object}
	{% endif %}
	{% else %}
	EXCLUDE_OBJECT_START NAME={params.S}
	{% endif %}
	{% endif %}
	
	{% if 'U' in params %}
	EXCLUDE_OBJECT RESET=1 NAME={params.U}
	{% endif %}

[gcode_macro G130]
gcode = 
	M400
	{% if ('X' in params) and ('mcp4018 x_axis_pot' in printer.configfile.config) %}
	{% set x_value = params['X']|float %}
	{% set x_axis_pot_scale = printer.configfile.config["mcp4018 x_axis_pot"].scale|float %}
	SET_DIGIPOT DIGIPOT=x_axis_pot WIPER={ x_axis_pot_scale * (x_value / 127.0)}
	{% endif %}
	{% if ('Y' in params) and ('mcp4018 y_axis_pot' in printer.configfile.config) %}
	{% set y_value = params['Y']|float %}
	{% set y_axis_pot_scale = printer.configfile.config["mcp4018 y_axis_pot"].scale|float %}
	SET_DIGIPOT DIGIPOT=y_axis_pot WIPER={ y_axis_pot_scale * (y_value / 127.0)}
	{% endif %}
	{% if ('Z' in params) and ('mcp4018 z_axis_pot' in printer.configfile.config) %}
	{% set z_value = params['Z']|float %}
	{% set z_axis_pot_scale = printer.configfile.config["mcp4018 z_axis_pot"].scale|float %}
	SET_DIGIPOT DIGIPOT=z_axis_pot WIPER={ z_axis_pot_scale * (z_value / 127.0)}
	{% endif %}
	{% if ('A' in params) and ('mcp4018 a_axis_pot' in printer.configfile.config) %}
	{% set a_value = params['A']|float %}
	{% set a_axis_pot_scale = printer.configfile.config["mcp4018 a_axis_pot"].scale|float %}
	SET_DIGIPOT DIGIPOT=a_axis_pot WIPER={ a_axis_pot_scale * (a_value / 127.0)}
	{% endif %}
	{% if ('B' in params) and ('mcp4018 b_axis_pot' in printer.configfile.config) %}
	{% set b_value = params['B']|float %}
	{% set b_axis_pot_scale = printer.configfile.config["mcp4018 b_axis_pot"].scale|float %}
	SET_DIGIPOT DIGIPOT=b_axis_pot WIPER={ b_axis_pot_scale * (b_value / 127.0)}
	{% endif %}

[gcode_macro G29]
gcode = 
	BED_MESH_CLEAR
	BED_MESH_CALIBRATE
	BED_MESH_PROFILE SAVE=default
	BED_MESH_PROFILE LOAD=default

[bed_mesh default]
version = 1
points = 
	-0.002500, 0.013750, 0.021250
	0.013750, 0.022500, 0.025000
	0.012500, 0.022500, 0.028750
x_count = 3
y_count = 3
mesh_x_pps = 2
mesh_y_pps = 2
algo = lagrange
tension = 0.2
min_x = 102.69999999999999
max_x = 127.28
min_y = 102.7
max_y = 127.28
=======================
Extruder max_extrude_ratio=0.266081
mcu 'mcu': Starting serial connect
webhooks client 4127780528: New connection
webhooks client 4127780528: Client info {'program': 'Moonraker', 'version': 'v0.8.0-202-gdddd968'}
mcu 'mcu': got {'oid': 10, 'next_clock': 3411129088, 'value': 31294, '#name': 'analog_in_state', '#sent_time': 319132.74108711036, '#receive_time': 319132.75899847667}
mcu 'mcu': got {'oid': 18, 'next_clock': 3416889088, 'value': 31318, '#name': 'analog_in_state', '#sent_time': 319132.7965116164, '#receive_time': 319132.83900222566}
mcu 'mcu': got {'oid': 10, 'next_clock': 3432729088, 'value': 31301, '#name': 'analog_in_state', '#sent_time': 319133.01308601437, '#receive_time': 319133.05900967267}
Loaded MCU 'mcu' 107 commands (v0.11.0-257-ged66982b / gcc: (15:8-2019-q3-1+b1) 8.3.1 20190703 (release) [gcc-8-branch revision 273027] binutils: (2.35.2-2+14+b2) 2.35.2)
MCU 'mcu' config: ADC_MAX=4095 BUS_PINS_i2c1=PB6,PB7 BUS_PINS_i2c1a=PB8,PB9 BUS_PINS_i2c2=PB10,PB11 BUS_PINS_spi1=PA6,PA7,PA5 BUS_PINS_spi1a=PB4,PB5,PB3 BUS_PINS_spi2=PB14,PB15,PB13 BUS_PINS_spi3=PB4,PB5,PB3 CLOCK_FREQ=72000000 INITIAL_PINS=!PC6,!PD13 MCU=stm32f103xe PWM_MAX=255 RECEIVE_WINDOW=192 RESERVE_PINS_serial=PA10,PA9 SERIAL_BAUD=115200 STATS_SUMSQ_BASE=256 STEPPER_BOTH_EDGE=1
Configured MCU 'mcu' (1024 moves)
Starting heater checks for heater_bed
bed_mesh: generated points
Index |  Tool Adjusted  |   Probe
  0   | (72.0, 20.0)    | (30.0, 15.0)
  1   | (90.9, 20.0)    | (48.9, 15.0)
  2   | (109.8, 20.0)   | (67.8, 15.0)
  3   | (128.6, 20.0)   | (86.6, 15.0)
  4   | (147.5, 20.0)   | (105.5, 15.0)
  5   | (166.4, 20.0)   | (124.4, 15.0)
  6   | (185.3, 20.0)   | (143.3, 15.0)
  7   | (204.2, 20.0)   | (162.2, 15.0)
  8   | (223.0, 20.0)   | (181.0, 15.0)
  9   | (241.9, 20.0)   | (199.9, 15.0)
  10  | (241.9, 42.2)   | (199.9, 37.2)
  11  | (223.0, 42.2)   | (181.0, 37.2)
  12  | (204.2, 42.2)   | (162.2, 37.2)
  13  | (185.3, 42.2)   | (143.3, 37.2)
  14  | (166.4, 42.2)   | (124.4, 37.2)
  15  | (147.5, 42.2)   | (105.5, 37.2)
  16  | (128.6, 42.2)   | (86.6, 37.2)
  17  | (109.8, 42.2)   | (67.8, 37.2)
  18  | (90.9, 42.2)    | (48.9, 37.2)
  19  | (72.0, 42.2)    | (30.0, 37.2)
  20  | (72.0, 64.4)    | (30.0, 59.4)
  21  | (90.9, 64.4)    | (48.9, 59.4)
  22  | (109.8, 64.4)   | (67.8, 59.4)
  23  | (128.6, 64.4)   | (86.6, 59.4)
  24  | (147.5, 64.4)   | (105.5, 59.4)
  25  | (166.4, 64.4)   | (124.4, 59.4)
  26  | (185.3, 64.4)   | (143.3, 59.4)
  27  | (204.2, 64.4)   | (162.2, 59.4)
  28  | (223.0, 64.4)   | (181.0, 59.4)
  29  | (241.9, 64.4)   | (199.9, 59.4)
  30  | (241.9, 86.7)   | (199.9, 81.7)
  31  | (223.0, 86.7)   | (181.0, 81.7)
  32  | (204.2, 86.7)   | (162.2, 81.7)
  33  | (185.3, 86.7)   | (143.3, 81.7)
  34  | (166.4, 86.7)   | (124.4, 81.7)
  35  | (147.5, 86.7)   | (105.5, 81.7)
  36  | (128.6, 86.7)   | (86.6, 81.7)
  37  | (109.8, 86.7)   | (67.8, 81.7)
  38  | (90.9, 86.7)    | (48.9, 81.7)
  39  | (72.0, 86.7)    | (30.0, 81.7)
  40  | (72.0, 108.9)   | (30.0, 103.9)
  41  | (90.9, 108.9)   | (48.9, 103.9)
  42  | (109.8, 108.9)  | (67.8, 103.9)
  43  | (128.6, 108.9)  | (86.6, 103.9)
  44  | (147.5, 108.9)  | (105.5, 103.9)
  45  | (166.4, 108.9)  | (124.4, 103.9)
  46  | (185.3, 108.9)  | (143.3, 103.9)
  47  | (204.2, 108.9)  | (162.2, 103.9)
  48  | (223.0, 108.9)  | (181.0, 103.9)
  49  | (241.9, 108.9)  | (199.9, 103.9)
  50  | (241.9, 131.1)  | (199.9, 126.1)
  51  | (223.0, 131.1)  | (181.0, 126.1)
  52  | (204.2, 131.1)  | (162.2, 126.1)
  53  | (185.3, 131.1)  | (143.3, 126.1)
  54  | (166.4, 131.1)  | (124.4, 126.1)
  55  | (147.5, 131.1)  | (105.5, 126.1)
  56  | (128.6, 131.1)  | (86.6, 126.1)
  57  | (109.8, 131.1)  | (67.8, 126.1)
  58  | (90.9, 131.1)   | (48.9, 126.1)
  59  | (72.0, 131.1)   | (30.0, 126.1)
  60  | (72.0, 153.3)   | (30.0, 148.3)
  61  | (90.9, 153.3)   | (48.9, 148.3)
  62  | (109.8, 153.3)  | (67.8, 148.3)
  63  | (128.6, 153.3)  | (86.6, 148.3)
  64  | (147.5, 153.3)  | (105.5, 148.3)
  65  | (166.4, 153.3)  | (124.4, 148.3)
  66  | (185.3, 153.3)  | (143.3, 148.3)
  67  | (204.2, 153.3)  | (162.2, 148.3)
  68  | (223.0, 153.3)  | (181.0, 148.3)
  69  | (241.9, 153.3)  | (199.9, 148.3)
  70  | (241.9, 175.5)  | (199.9, 170.5)
  71  | (223.0, 175.5)  | (181.0, 170.5)
  72  | (204.2, 175.5)  | (162.2, 170.5)
  73  | (185.3, 175.5)  | (143.3, 170.5)
  74  | (166.4, 175.5)  | (124.4, 170.5)
  75  | (147.5, 175.5)  | (105.5, 170.5)
  76  | (128.6, 175.5)  | (86.6, 170.5)
  77  | (109.8, 175.5)  | (67.8, 170.5)
  78  | (90.9, 175.5)   | (48.9, 170.5)
  79  | (72.0, 175.5)   | (30.0, 170.5)
  80  | (72.0, 197.8)   | (30.0, 192.8)
  81  | (90.9, 197.8)   | (48.9, 192.8)
  82  | (109.8, 197.8)  | (67.8, 192.8)
  83  | (128.6, 197.8)  | (86.6, 192.8)
  84  | (147.5, 197.8)  | (105.5, 192.8)
  85  | (166.4, 197.8)  | (124.4, 192.8)
  86  | (185.3, 197.8)  | (143.3, 192.8)
  87  | (204.2, 197.8)  | (162.2, 192.8)
  88  | (223.0, 197.8)  | (181.0, 192.8)
  89  | (241.9, 197.8)  | (199.9, 192.8)
  90  | (241.9, 220.0)  | (199.9, 215.0)
  91  | (223.0, 220.0)  | (181.0, 215.0)
  92  | (204.2, 220.0)  | (162.2, 215.0)
  93  | (185.3, 220.0)  | (143.3, 215.0)
  94  | (166.4, 220.0)  | (124.4, 215.0)
  95  | (147.5, 220.0)  | (105.5, 215.0)
  96  | (128.6, 220.0)  | (86.6, 215.0)
  97  | (109.8, 220.0)  | (67.8, 215.0)
  98  | (90.9, 220.0)   | (48.9, 215.0)
  99  | (72.0, 220.0)   | (30.0, 215.0)
Starting heater checks for extruder
webhooks: registering remote method 'shutdown_machine' for connection id: 4127780528
webhooks: registering remote method 'reboot_machine' for connection id: 4127780528
webhooks: registering remote method 'pause_job_queue' for connection id: 4127780528
webhooks: registering remote method 'start_job_queue' for connection id: 4127780528
Starting Klippy...
Args: ['/home/admin/klipper/klippy/klippy.py', '/home/admin/printer_data/config/printer.cfg', '-I', '/home/admin/printer_data/comms/klippy.serial', '-l', '/home/admin/printer_data/logs/klippy.log', '-a', '/home/admin/printer_data/comms/klippy.sock']
Git version: 'v0.12.0-8-g187cc2f1-dirty'
Untracked files: klippy/extras/gcode_shell_command.py
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper
CPU: 2 core Intel(R) Atom(TM) CPU N450   @ 1.66GHz
Python: '3.9.2 (default, Feb 28 2021, 17:03:44) \n[GCC 10.2.1 20210110]'
Start printer at Tue Nov 21 13:22:37 2023 (1700583757.6 319932.5)
===== Config file =====
[gcode_shell_command hello_world]
command = echo hello world
timeout = 2.
verbose = True

[gcode_macro HELLO_WORLD]
gcode = 
	RUN_SHELL_COMMAND CMD=hello_world

[virtual_sdcard]
path = /home/admin/printer_data/gcodes
on_error_gcode = CANCEL_PRINT

[pause_resume]

[display_status]

[respond]

[gcode_macro CANCEL_PRINT]
description = Cancel the actual running print
rename_existing = CANCEL_PRINT_BASE
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set allow_park = client.park_at_cancel|default(false)|lower == 'true' %}
	{% set retract = client.cancel_retract|default(5.0)|abs %}
	
	{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)
	else "X=" ~ client.park_at_cancel_x %}
	{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)
	else "Y=" ~ client.park_at_cancel_y %}
	{% set custom_park = park_x|length > 0 or park_y|length > 0 %}
	
	
	{% if printer['gcode_macro RESUME'].restore_idle_timeout > 0 %}
	SET_IDLE_TIMEOUT TIMEOUT={printer['gcode_macro RESUME'].restore_idle_timeout}
	{% endif %}
	{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}
	_CLIENT_RETRACT LENGTH={retract}
	TURN_OFF_HEATERS
	M106 S0
	{client.user_cancel_macro|default("")}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False
	
	SET_PAUSE_NEXT_LAYER ENABLE=0
	SET_PAUSE_AT_LAYER ENABLE=0 LAYER=0
	CANCEL_PRINT_BASE

[gcode_macro PAUSE]
description = Pause the actual running print
rename_existing = PAUSE_BASE
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set idle_timeout = client.idle_timeout|default(0) %}
	{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != '' else 0 %}
	{% set restore = False if printer.toolhead.extruder == ''
	else True  if params.RESTORE|default(1)|int == 1 else False %}
	
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{'restore': restore, 'temp': temp}}"
	
	{% if idle_timeout > 0 %}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}
	SET_IDLE_TIMEOUT TIMEOUT={idle_timeout}
	{% endif %}
	PAUSE_BASE
	{client.user_pause_macro|default("")}
	_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}

[gcode_macro RESUME]
description = Resume the actual running print
rename_existing = RESUME_BASE
variable_last_extruder_temp = {'restore': False, 'temp': 0}
variable_restore_idle_timeout = 0
variable_idle_state = False
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
	{% set sp_move = client.speed_move|default(velocity) %}
	{% set runout_resume = True if client.runout_sensor|default("") == ""
	else True if not printer[client.runout_sensor].enabled
	else printer[client.runout_sensor].filament_detected %}
	{% set can_extrude = True if printer.toolhead.extruder == ''
	else printer[printer.toolhead.extruder].can_extrude %}
	{% set do_resume = False %}
	
	
	{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False
	{% if last_extruder_temp.restore %}
	
	RESPOND TYPE=echo MSG='{"Restoring \"%s\" temperature to %3.1f\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }'
	M109 S{last_extruder_temp.temp}
	{% set do_resume = True %}
	{% elif can_extrude %}
	{% set do_resume = True %}
	{% else %}
	RESPOND TYPE=error MSG='{"Resume aborted !!! \"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}'
	{% endif %}
	
	{% elif can_extrude %}
	{% set do_resume = True %}
	{% else %}
	RESPOND TYPE=error MSG='{"Resume aborted !!! \"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}'
	{% endif %}
	{% if runout_resume %}
	{% if do_resume %}
	{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}
	{client.user_resume_macro|default("")}
	_CLIENT_EXTRUDE
	RESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}
	{% endif %}
	{% else %}
	RESPOND TYPE=error MSG='{"Resume aborted !!! \"%s\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}'
	{% endif %}

[gcode_macro SET_PAUSE_NEXT_LAYER]
description = Enable a pause if the next layer is reached
gcode = 
	{% set pause_next_layer = printer['gcode_macro SET_PRINT_STATS_INFO'].pause_next_layer %}
	{% set ENABLE = params.ENABLE|default(1)|int != 0 %}
	{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}
	SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ 'enable': ENABLE, 'call': MACRO }}"

[gcode_macro SET_PAUSE_AT_LAYER]
description = Enable/disable a pause if a given layer number is reached
gcode = 
	{% set pause_at_layer = printer['gcode_macro SET_PRINT_STATS_INFO'].pause_at_layer %}
	{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined
	else params.LAYER is defined %}
	{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}
	{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}
	SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ 'enable': ENABLE, 'layer': LAYER, 'call': MACRO }}"

[gcode_macro SET_PRINT_STATS_INFO]
rename_existing = SET_PRINT_STATS_INFO_BASE
description = Overwrite, to get pause_next_layer and pause_at_layer feature
variable_pause_next_layer = { 'enable': False, 'call': "PAUSE" }
variable_pause_at_layer = { 'enable': False, 'layer': 0, 'call': "PAUSE" }
gcode = 
	{% if pause_next_layer.enable %}
	RESPOND TYPE=echo MSG='{"%s, forced by pause_next_layer" % pause_next_layer.call}'
	{pause_next_layer.call}
	SET_PAUSE_NEXT_LAYER ENABLE=0
	{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}
	RESPOND TYPE=echo MSG='{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}'
	{pause_at_layer.call}
	SET_PAUSE_AT_LAYER ENABLE=0
	{% endif %}
	SET_PRINT_STATS_INFO_BASE {rawparams}

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description = Helper: park toolhead used in PAUSE and CANCEL_PRINT
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
	{% set use_custom     = client.use_custom_pos|default(false)|lower == 'true' %}
	{% set custom_park_x  = client.custom_park_x|default(0.0) %}
	{% set custom_park_y  = client.custom_park_y|default(0.0) %}
	{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}
	{% set sp_hop         = client.speed_hop|default(15) * 60 %}
	{% set sp_move        = client.speed_move|default(velocity) * 60 %}
	
	{% set origin    = printer.gcode_move.homing_origin %}
	{% set act       = printer.gcode_move.gcode_position %}
	{% set max       = printer.toolhead.axis_maximum %}
	{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}
	{% set round_bed = True if printer.configfile.settings.printer.kinematics is in ['delta','polar','rotary_delta','winch']
	else False %}
	
	{% set z_min = params.Z_MIN|default(0)|float %}
	{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}
	{% set x_park = params.X       if params.X is defined
	else custom_park_x  if use_custom
	else 0.0            if round_bed
	else (max.x - 5.0) %}
	{% set y_park = params.Y       if params.Y is defined
	else custom_park_y  if use_custom
	else (max.y - 5.0)  if round_bed and z_park < cone
	else 0.0            if round_bed
	else (max.y - 5.0) %}
	
	_CLIENT_RETRACT
	{% if "xyz" in printer.toolhead.homed_axes %}
	G90
	G1 Z{z_park} F{sp_hop}
	G1 X{x_park} Y{y_park} F{sp_move}
	{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}
	{% else %}
	RESPOND TYPE=echo MSG='Printer not homed'
	{% endif %}

[gcode_macro _CLIENT_EXTRUDE]
description = Extrudes, if the extruder is hot enough
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == 'true') and (printer.firmware_retraction is defined) %}
	{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}
	{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}
	{% set absolute_extrude = printer.gcode_move.absolute_extrude %}
	
	{% if printer.toolhead.extruder != '' %}
	{% if printer[printer.toolhead.extruder].can_extrude %}
	{% if use_fw_retract %}
	{% if length < 0 %}
	G10
	{% else %}
	G11
	{% endif %}
	{% else %}
	M83
	G1 E{length} F{(speed|float|abs) * 60}
	{% if absolute_extrude %}
	M82
	{% endif %}
	{% endif %}
	{% else %}
	RESPOND TYPE=echo MSG='{"\"%s\" not hot enough" % printer.toolhead.extruder}'
	{% endif %}
	{% endif %}

[gcode_macro _CLIENT_RETRACT]
description = Retracts, if the extruder is hot enough
gcode = 
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}
	{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}
	
	_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}

[gcode_macro BED_MESH_CALIBRATE]
rename_existing = _BED_MESH_CALIBRATE
gcode = 
	
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set bed_mesh_min = printer.configfile.settings.bed_mesh.mesh_min %}
	{% set bed_mesh_max = printer.configfile.settings.bed_mesh.mesh_max %}
	{% set probe_count = printer.configfile.settings.bed_mesh.probe_count %}
	{% set kamp_settings = printer["gcode_macro _KAMP_Settings"] %}
	{% set verbose_enable = kamp_settings.verbose_enable | abs %}
	{% set probe_dock_enable = kamp_settings.probe_dock_enable | abs %}
	{% set attach_macro = kamp_settings.attach_macro | string %}
	{% set detach_macro = kamp_settings.detach_macro | string %}
	{% set mesh_margin = kamp_settings.mesh_margin | float %}
	{% set fuzz_amount = kamp_settings.fuzz_amount | float %}
	{% set probe_count = probe_count if probe_count|length > 1 else probe_count * 2  %}
	{% set max_probe_point_distance_x = ( bed_mesh_max[0] - bed_mesh_min[0] ) / (probe_count[0] - 1)  %}
	{% set max_probe_point_distance_y = ( bed_mesh_max[1] - bed_mesh_min[1] ) / (probe_count[1] - 1)  %}
	{% set x_min = all_points | map(attribute=0) | min | default(bed_mesh_min[0]) %}
	{% set y_min = all_points | map(attribute=1) | min | default(bed_mesh_min[1]) %}
	{% set x_max = all_points | map(attribute=0) | max | default(bed_mesh_max[0]) %}
	{% set y_max = all_points | map(attribute=1) | max | default(bed_mesh_max[1]) %}
	
	{% set fuzz_range = range((0) | int, (fuzz_amount * 100) | int + 1) %}
	{% set adapted_x_min = x_min - mesh_margin - (fuzz_range | random / 100.0) %}
	{% set adapted_y_min = y_min - mesh_margin - (fuzz_range | random / 100.0) %}
	{% set adapted_x_max = x_max + mesh_margin + (fuzz_range | random / 100.0) %}
	{% set adapted_y_max = y_max + mesh_margin + (fuzz_range | random / 100.0) %}
	
	{% set adapted_x_min = [adapted_x_min , bed_mesh_min[0]] | max %}
	{% set adapted_y_min = [adapted_y_min , bed_mesh_min[1]] | max %}
	{% set adapted_x_max = [adapted_x_max , bed_mesh_max[0]] | min %}
	{% set adapted_y_max = [adapted_y_max , bed_mesh_max[1]] | min %}
	
	{% set points_x = (((adapted_x_max - adapted_x_min) / max_probe_point_distance_x) | round(method='ceil') | int) + 1 %}
	{% set points_y = (((adapted_y_max - adapted_y_min) / max_probe_point_distance_y) | round(method='ceil') | int) + 1 %}
	
	{% if (([points_x, points_y]|max) > 6) %}
	{% set algorithm = "bicubic" %}
	{% set min_points = 4 %}
	{% else %}
	{% set algorithm = "lagrange" %}
	{% set min_points = 3 %}
	{% endif %}
	
	{% set points_x = [points_x , min_points]|max %}
	{% set points_y = [points_y , min_points]|max %}
	{% set points_x = [points_x , probe_count[0]]|min %}
	{% set points_y = [points_y , probe_count[1]]|min %}
	
	{% if verbose_enable == True %}
	{% if printer.exclude_object.objects != [] %}
	
	{ action_respond_info( "Algorithm: {}.".format(
	(algorithm),
	)) }
	
	{ action_respond_info("Default probe count: {},{}.".format(
	(probe_count[0]),
	(probe_count[1]),
	)) }
	
	{ action_respond_info("Adapted probe count: {},{}.".format(
	(points_x),
	(points_y),
	)) }
	
	{action_respond_info("Default mesh bounds: {}, {}.".format(
	(bed_mesh_min[0],bed_mesh_min[1]),
	(bed_mesh_max[0],bed_mesh_max[1]),
	)) }
	
	{% if mesh_margin > 0 %}
	{action_respond_info("Mesh margin is {}, mesh bounds extended by {}mm.".format(
	(mesh_margin),
	(mesh_margin),
	)) }
	{% else %}
	{action_respond_info("Mesh margin is 0, margin not increased.")}
	{% endif %}
	
	{% if fuzz_amount > 0 %}
	{action_respond_info("Mesh point fuzzing enabled, points fuzzed up to {}mm.".format(
	(fuzz_amount),
	)) }
	{% else %}
	{action_respond_info("Fuzz amount is 0, mesh points not fuzzed.")}
	{% endif %}
	
	{ action_respond_info("Adapted mesh bounds: {}, {}.".format(
	(adapted_x_min, adapted_y_min),
	(adapted_x_max, adapted_y_max),
	)) }
	
	{action_respond_info("KAMP adjustments successful. Happy KAMPing!")}
	
	{% else %}
	
	{action_respond_info("No objects detected! Check your gcode and make sure that EXCLUDE_OBJECT_DEFINE is happening before BED_MESH_CALIBRATE is called. Defaulting to regular meshing.")}
	G4 P5000
	{% endif %}
	
	{% endif %}
	
	{% if probe_dock_enable == True %}
	{attach_macro}
	{% endif %}
	
	_BED_MESH_CALIBRATE mesh_min={adapted_x_min},{adapted_y_min} mesh_max={adapted_x_max},{adapted_y_max} ALGORITHM={algorithm} PROBE_COUNT={points_x},{points_y}
	
	{% if probe_dock_enable == True %}
	{detach_macro}
	{% endif %}

[gcode_macro LINE_PURGE]
description = A purge macro that adapts to be near your actual printed objects
gcode = 
	
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	{% set cross_section = printer.configfile.settings.extruder.max_extrude_cross_section | float %}
	
	
	{% if printer.firmware_retraction is defined %}
	{% set RETRACT = G10 | string %}
	{% set UNRETRACT = G11 | string %}
	{% else %}
	{% set RETRACT = 'G1 E-.5 F2100' | string %}
	{% set UNRETRACT = 'G1 E.5 F2100' | string %}
	{% endif %}
	
	
	{% set verbose_enable = printer["gcode_macro _KAMP_Settings"].verbose_enable | abs %}
	{% set purge_height = printer["gcode_macro _KAMP_Settings"].purge_height | float %}
	{% set tip_distance = printer["gcode_macro _KAMP_Settings"].tip_distance | float %}
	{% set purge_margin = printer["gcode_macro _KAMP_Settings"].purge_margin | float %}
	{% set purge_amount = printer["gcode_macro _KAMP_Settings"].purge_amount | float %}
	{% set flow_rate = printer["gcode_macro _KAMP_Settings"].flow_rate | float %}
	
	
	
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set purge_x_min = (all_points | map(attribute=0) | min | default(0)) %}
	{% set purge_x_max = (all_points | map(attribute=0) | max | default(0)) %}
	{% set purge_y_min = (all_points | map(attribute=1) | min | default(0)) %}
	{% set purge_y_max = (all_points | map(attribute=1) | max | default(0)) %}
	
	{% set purge_x_center = ([((purge_x_max + purge_x_min) / 2) - (purge_amount / 2), 0] | max) %}
	{% set purge_y_center = ([((purge_y_max + purge_y_min) / 2) - (purge_amount / 2), 0] | max) %}
	
	{% set purge_x_origin = ([purge_x_min - purge_margin, 0] | max) %}
	{% set purge_y_origin = ([purge_y_min - purge_margin, 0] | max) %}
	
	
	{% set purge_move_speed = (flow_rate / 5.0) * 60 | float %}
	
	{% if cross_section < 5 %}
	
	{action_respond_info("[Extruder] max_extrude_cross_section is insufficient for purge, please set it to 5 or greater. Purge skipped.")}
	
	{% else %}
	
	{% if verbose_enable == True %}
	
	{action_respond_info("Moving filament tip {}mms".format(
	(tip_distance),
	)) }
	{% endif %}
	
	{% if printer.firmware_retraction is defined %}
	{action_respond_info("KAMP purge is using firmware retraction.")}
	{% else %}
	{action_respond_info("KAMP purge is not using firmware retraction, it is recommended to configure it.")}
	{% endif %}
	
	{% if purge_y_origin > 0 %}
	
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm/s3.".format(
	(purge_x_center),
	(purge_y_origin),
	(purge_amount),
	(flow_rate),
	)) }
	
	{% else %}
	
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm/s3.".format(
	(purge_x_origin),
	(purge_y_center),
	(purge_amount),
	(flow_rate),
	)) }
	
	{% endif %}
	
	SAVE_GCODE_STATE NAME=Prepurge_State
	
	{% if purge_y_origin > 0 %}
	
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_center} Y{purge_y_origin}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 X{purge_x_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 X{purge_x_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	
	{% else %}
	
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_origin} Y{purge_y_center}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 Y{purge_y_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 Y{purge_y_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	
	{% endif %}
	
	RESTORE_GCODE_STATE NAME=Prepurge_State
	
	{% endif %}

[gcode_macro SMART_PARK]
description = Parks your printhead near the print area for pre-print hotend heating.
gcode = 
	
	{% set kamp_settings = printer["gcode_macro _KAMP_Settings"] %}
	{% set z_height = kamp_settings.smart_park_height | float %}
	{% set purge_margin = kamp_settings.purge_margin | float %}
	{% set verbose_enable = kamp_settings.verbose_enable | abs %}
	{% set center_x = printer.toolhead.axis_maximum.x / 2 | float %}
	{% set center_y = printer.toolhead.axis_maximum.y / 2 | float %}
	{% set axis_minimum_x = printer.toolhead.axis_minimum.x | float %}
	{% set axis_minimum_y = printer.toolhead.axis_minimum.y | float %}
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set x_min = all_points | map(attribute=0) | min | default(center_x) %}
	{% set y_min = all_points | map(attribute=1) | min | default(center_y) %}
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	
	{% if purge_margin > 0 and x_min != center_x and y_min != center_y %}
	{% set x_min = [ x_min - purge_margin , x_min ] | min %}
	{% set y_min = [ y_min - purge_margin , y_min ] | min %}
	{% set x_min = [ x_min , axis_minimum_x ] | max %}
	{% set y_min = [ y_min , axis_minimum_y ] | max %}
	{% endif %}
	
	
	{% if verbose_enable == True %}
	
	{ action_respond_info("Smart Park location: {},{}.".format(
	(x_min),
	(y_min),
	)) }
	
	{% endif %}
	
	{% if printer.toolhead.position.z < z_height %}
	G0 Z{z_height}
	{% endif %}
	G0 X{x_min} Y{y_min} F{travel_speed}
	G0 Z{z_height}

[gcode_macro _KAMP_Settings]
description = This macro contains all adjustable settings for KAMP
variable_verbose_enable = True
variable_mesh_margin = 0
variable_fuzz_amount = 0
variable_probe_dock_enable = False
variable_attach_macro = 'Attach_Probe'
variable_detach_macro = 'Dock_Probe'
variable_purge_height = 0.8
variable_tip_distance = 0
variable_purge_margin = 10
variable_purge_amount = 30
variable_flow_rate = 12
variable_smart_park_height = 10
gcode = 
	
	{action_respond_info(" Running the KAMP_Settings macro does nothing, it is only used for storing KAMP settings. ")}

[mcu]
serial = /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method = command
baud = 115200

[exclude_object]

[stepper_x]
step_pin = PB12
dir_pin = PB10
enable_pin = !PB1
microsteps = 32
rotation_distance = 80
full_steps_per_rotation = 400
endstop_pin = !PA13
position_endstop = 0
position_min = 0
position_max = 235
homing_speed = 40

[stepper_y]
step_pin = PB0
dir_pin = PC5
enable_pin = !PB1
microsteps = 32
rotation_distance = 80
full_steps_per_rotation = 400
endstop_pin = !PB9
position_endstop = 0
position_max = 235
homing_speed = 40

[stepper_z]
step_pin = PA1
dir_pin = !PA0
enable_pin = !PC4
microsteps = 32
rotation_distance = 16
full_steps_per_rotation = 400
endstop_pin = probe:z_virtual_endstop
position_max = 250
position_min = -10
homing_speed = 5

[extruder]
step_pin = !PC3
dir_pin = !PC2
enable_pin = !PB1
microsteps = 32
rotation_distance = 31.38
full_steps_per_rotation = 400
nozzle_diameter = 0.400
filament_diameter = 1.750
heater_pin = PC8
sensor_type = EPCOS 100K B57560G104F
sensor_pin = PC1
min_temp = 0
max_temp = 260
pressure_advance = 0
max_extrude_only_distance = 500.0
control = pid
pid_kp = 19.198
pid_ki = 0.556
pid_kd = 165.579

[heater_bed]
heater_pin = PC9
sensor_type = EPCOS 100K B57560G104F
sensor_pin = PC0
control = pid
pid_kp = 20.7074
pid_ki = 3.5872
pid_kd = 79.6889
min_temp = 5
max_temp = 100

[fan]
pin = PC6

[heater_fan hotend_fan]
pin = PC7
max_power = 1.0
fan_speed = 1
shutdown_speed = 0.0
kick_start_time = 0
heater = extruder
heater_temp = 50.0

[printer]
kinematics = cartesian
max_velocity = 180
max_accel = 2500
max_accel_to_decel = 1250
max_z_velocity = 12
max_z_accel = 50
square_corner_velocity = 2

[bed_mesh]
speed = 100
horizontal_move_z = 20
mesh_min = 30, 15
mesh_max = 200, 215
probe_count = 10, 10
mesh_pps = 2, 2
fade_start = 1
fade_end = 10
fade_target = 0
algorithm = bicubic
bicubic_tension = 0.2
move_check_distance = 3
split_delta_z = .025

[bed_screws]
screw1 = 17, 20
screw2 = 217, 20
screw3 = 17, 220
screw4 = 217, 220

[filament_switch_sensor my_sensor]
pause_on_runout = True
runout_gcode = [pause_resume]
event_delay = 3.0
pause_delay = 0.5
switch_pin = PC14

[firmware_retraction]
retract_length = 2.2
retract_speed = 60

[idle_timeout]
gcode = 
	TURN_OFF_HEATERS
	M84
timeout = 28800

[bltouch]
sensor_pin = !PC13
control_pin = PA8
x_offset = -42
y_offset = -5
pin_up_touch_mode_reports_triggered = False
stow_on_each_sample = False
pin_up_reports_not_triggered = False
probe_with_touch_mode = True
pin_move_time = 0.4
speed = 20
z_offset = 0.590

[safe_z_home]
home_xy_position = 115, 115
speed = 50
z_hop = 5
z_hop_speed = 5

[gcode_macro update_git]
gcode = 
	RUN_SHELL_COMMAND CMD=update_git_script

[gcode_shell_command update_git_script]
command = bash /home/admin/klipper-backup/script.sh
timeout = 90.0
verbose = True

[gcode_macro START_PRINT]
gcode = 
	{% set BED_TEMP = params.BED_TEMP|default(60)|float %}
	{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
	
	M140 S{BED_TEMP}
	
	G90
	
	SET_GCODE_OFFSET Z=0.0
	
	G28
	
	BED_MESH_CALIBRATE
	
	G1 Z5 F3000
	
	G1 Z0.15 F300
	
	M190 S{BED_TEMP}
	
	M109 S{EXTRUDER_TEMP}
	
	SMART_PARK
	
	LINE_PURGE

[gcode_macro END_PRINT]
gcode = 
	
	M140 S0
	M104 S0
	M106 S0
	
	G91
	G1 X-2 Y-2 E-3 F300
	
	G1 Z10 F3000
	G90
	
	M84

[gcode_macro M300]
gcode = 
	
	{% set S = params.S|default(1000)|int %}
	
	{% set P = params.P|default(100)|int %}
	SET_PIN PIN=BEEPER_pin VALUE=0.5 CYCLE_TIME={ 1.0/S if S > 0 else 1 }
	G4 P{P}
	SET_PIN PIN=BEEPER_pin VALUE=0

[gcode_macro M600]
gcode = 
	{% set X = params.X|default(50)|float %}
	{% set Y = params.Y|default(0)|float %}
	{% set Z = params.Z|default(10)|float %}
	SAVE_GCODE_STATE NAME=M600_state
	PAUSE
	G91
	G1 E-.8 F2700
	G1 Z{Z}
	G90
	G1 X{X} Y{Y} F3000
	G91
	G1 E-50 F1000
	RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro QUERY_BME280]
gcode = 
	{% set sensor = printer["bme280 my_sensor"] %}
	{action_respond_info(
	"Temperature: %.2f C\n"
	"Pressure: %.2f hPa\n"
	"Humidity: %.2f%%" % (
	sensor.temperature,
	sensor.pressure,
	sensor.humidity))}

[gcode_macro QUERY_HTU21D]
gcode = 
	{% set sensor = printer["htu21d my_sensor"] %}
	{action_respond_info(
	"Temperature: %.2f C\n"
	"Humidity: %.2f%%" % (
	sensor.temperature,
	sensor.humidity))}

[gcode_macro M117]
rename_existing = M117.1
gcode = 
	{% if rawparams %}
	{% set escaped_msg = rawparams.split(';', 1)[0].split('\x23', 1)[0]|replace('"', '\\"') %}
	SET_DISPLAY_TEXT MSG="{escaped_msg}"
	RESPOND TYPE=command MSG="{escaped_msg}"
	{% else %}
	SET_DISPLAY_TEXT
	{% endif %}

[sdcard_loop]

[gcode_macro M808]
gcode = 
	{% if params.K is not defined and params.L is defined %}SDCARD_LOOP_BEGIN COUNT={params.L|int}{% endif %}
	{% if params.K is not defined and params.L is not defined %}SDCARD_LOOP_END{% endif %}
	{% if params.K is defined and params.L is not defined %}SDCARD_LOOP_DESIST{% endif %}

[gcode_macro M486]
gcode = 
	
	
	
	
	
	
	
	
	
	
	
	{% if 'exclude_object' not in printer %}
	{action_raise_error("[exclude_object] is not enabled")}
	{% endif %}
	
	{% if 'T' in params %}
	EXCLUDE_OBJECT RESET=1
	
	{% for i in range(params.T | int) %}
	EXCLUDE_OBJECT_DEFINE NAME={i}
	{% endfor %}
	{% endif %}
	
	{% if 'C' in params %}
	EXCLUDE_OBJECT CURRENT=1
	{% endif %}
	
	{% if 'P' in params %}
	EXCLUDE_OBJECT NAME={params.P}
	{% endif %}
	
	{% if 'S' in params %}
	{% if params.S == '-1' %}
	{% if printer.exclude_object.current_object %}
	EXCLUDE_OBJECT_END NAME={printer.exclude_object.current_object}
	{% endif %}
	{% else %}
	EXCLUDE_OBJECT_START NAME={params.S}
	{% endif %}
	{% endif %}
	
	{% if 'U' in params %}
	EXCLUDE_OBJECT RESET=1 NAME={params.U}
	{% endif %}

[gcode_macro G130]
gcode = 
	M400
	{% if ('X' in params) and ('mcp4018 x_axis_pot' in printer.configfile.config) %}
	{% set x_value = params['X']|float %}
	{% set x_axis_pot_scale = printer.configfile.config["mcp4018 x_axis_pot"].scale|float %}
	SET_DIGIPOT DIGIPOT=x_axis_pot WIPER={ x_axis_pot_scale * (x_value / 127.0)}
	{% endif %}
	{% if ('Y' in params) and ('mcp4018 y_axis_pot' in printer.configfile.config) %}
	{% set y_value = params['Y']|float %}
	{% set y_axis_pot_scale = printer.configfile.config["mcp4018 y_axis_pot"].scale|float %}
	SET_DIGIPOT DIGIPOT=y_axis_pot WIPER={ y_axis_pot_scale * (y_value / 127.0)}
	{% endif %}
	{% if ('Z' in params) and ('mcp4018 z_axis_pot' in printer.configfile.config) %}
	{% set z_value = params['Z']|float %}
	{% set z_axis_pot_scale = printer.configfile.config["mcp4018 z_axis_pot"].scale|float %}
	SET_DIGIPOT DIGIPOT=z_axis_pot WIPER={ z_axis_pot_scale * (z_value / 127.0)}
	{% endif %}
	{% if ('A' in params) and ('mcp4018 a_axis_pot' in printer.configfile.config) %}
	{% set a_value = params['A']|float %}
	{% set a_axis_pot_scale = printer.configfile.config["mcp4018 a_axis_pot"].scale|float %}
	SET_DIGIPOT DIGIPOT=a_axis_pot WIPER={ a_axis_pot_scale * (a_value / 127.0)}
	{% endif %}
	{% if ('B' in params) and ('mcp4018 b_axis_pot' in printer.configfile.config) %}
	{% set b_value = params['B']|float %}
	{% set b_axis_pot_scale = printer.configfile.config["mcp4018 b_axis_pot"].scale|float %}
	SET_DIGIPOT DIGIPOT=b_axis_pot WIPER={ b_axis_pot_scale * (b_value / 127.0)}
	{% endif %}

[gcode_macro G29]
gcode = 
	BED_MESH_CLEAR
	BED_MESH_CALIBRATE
	BED_MESH_PROFILE SAVE=default
	BED_MESH_PROFILE LOAD=default

[bed_mesh default]
version = 1
points = 
	-0.002500, 0.013750, 0.021250
	0.013750, 0.022500, 0.025000
	0.012500, 0.022500, 0.028750
x_count = 3
y_count = 3
mesh_x_pps = 2
mesh_y_pps = 2
algo = lagrange
tension = 0.2
min_x = 102.69999999999999
max_x = 127.28
min_y = 102.7
max_y = 127.28
=======================
Extruder max_extrude_ratio=0.266081
mcu 'mcu': Starting serial connect
webhooks client 4127985328: New connection
webhooks client 4127985328: Client info {'program': 'Moonraker', 'version': 'v0.8.0-202-gdddd968'}
mcu 'mcu': got {'oid': 18, 'next_clock': 1045746944, 'value': 31283, '#name': 'analog_in_state', '#sent_time': 319934.97039890336, '#receive_time': 319934.98627586267}
mcu 'mcu': got {'oid': 10, 'next_clock': 1061586944, 'value': 31268, '#name': 'analog_in_state', '#sent_time': 319935.18811248237, '#receive_time': 319935.2060836337}
mcu 'mcu': got {'oid': 18, 'next_clock': 1067346944, 'value': 31308, '#name': 'analog_in_state', '#sent_time': 319935.2424699534, '#receive_time': 319935.2862341887}
Loaded MCU 'mcu' 107 commands (v0.11.0-257-ged66982b / gcc: (15:8-2019-q3-1+b1) 8.3.1 20190703 (release) [gcc-8-branch revision 273027] binutils: (2.35.2-2+14+b2) 2.35.2)
MCU 'mcu' config: ADC_MAX=4095 BUS_PINS_i2c1=PB6,PB7 BUS_PINS_i2c1a=PB8,PB9 BUS_PINS_i2c2=PB10,PB11 BUS_PINS_spi1=PA6,PA7,PA5 BUS_PINS_spi1a=PB4,PB5,PB3 BUS_PINS_spi2=PB14,PB15,PB13 BUS_PINS_spi3=PB4,PB5,PB3 CLOCK_FREQ=72000000 INITIAL_PINS=!PC6,!PD13 MCU=stm32f103xe PWM_MAX=255 RECEIVE_WINDOW=192 RESERVE_PINS_serial=PA10,PA9 SERIAL_BAUD=115200 STATS_SUMSQ_BASE=256 STEPPER_BOTH_EDGE=1
Configured MCU 'mcu' (1024 moves)
Starting heater checks for heater_bed
bed_mesh: generated points
Index |  Tool Adjusted  |   Probe
  0   | (72.0, 20.0)    | (30.0, 15.0)
  1   | (90.9, 20.0)    | (48.9, 15.0)
  2   | (109.8, 20.0)   | (67.8, 15.0)
  3   | (128.6, 20.0)   | (86.6, 15.0)
  4   | (147.5, 20.0)   | (105.5, 15.0)
  5   | (166.4, 20.0)   | (124.4, 15.0)
  6   | (185.3, 20.0)   | (143.3, 15.0)
  7   | (204.2, 20.0)   | (162.2, 15.0)
  8   | (223.0, 20.0)   | (181.0, 15.0)
  9   | (241.9, 20.0)   | (199.9, 15.0)
  10  | (241.9, 42.2)   | (199.9, 37.2)
  11  | (223.0, 42.2)   | (181.0, 37.2)
  12  | (204.2, 42.2)   | (162.2, 37.2)
  13  | (185.3, 42.2)   | (143.3, 37.2)
  14  | (166.4, 42.2)   | (124.4, 37.2)
  15  | (147.5, 42.2)   | (105.5, 37.2)
  16  | (128.6, 42.2)   | (86.6, 37.2)
  17  | (109.8, 42.2)   | (67.8, 37.2)
  18  | (90.9, 42.2)    | (48.9, 37.2)
  19  | (72.0, 42.2)    | (30.0, 37.2)
  20  | (72.0, 64.4)    | (30.0, 59.4)
  21  | (90.9, 64.4)    | (48.9, 59.4)
  22  | (109.8, 64.4)   | (67.8, 59.4)
  23  | (128.6, 64.4)   | (86.6, 59.4)
  24  | (147.5, 64.4)   | (105.5, 59.4)
  25  | (166.4, 64.4)   | (124.4, 59.4)
  26  | (185.3, 64.4)   | (143.3, 59.4)
  27  | (204.2, 64.4)   | (162.2, 59.4)
  28  | (223.0, 64.4)   | (181.0, 59.4)
  29  | (241.9, 64.4)   | (199.9, 59.4)
  30  | (241.9, 86.7)   | (199.9, 81.7)
  31  | (223.0, 86.7)   | (181.0, 81.7)
  32  | (204.2, 86.7)   | (162.2, 81.7)
  33  | (185.3, 86.7)   | (143.3, 81.7)
  34  | (166.4, 86.7)   | (124.4, 81.7)
  35  | (147.5, 86.7)   | (105.5, 81.7)
  36  | (128.6, 86.7)   | (86.6, 81.7)
  37  | (109.8, 86.7)   | (67.8, 81.7)
  38  | (90.9, 86.7)    | (48.9, 81.7)
  39  | (72.0, 86.7)    | (30.0, 81.7)
  40  | (72.0, 108.9)   | (30.0, 103.9)
  41  | (90.9, 108.9)   | (48.9, 103.9)
  42  | (109.8, 108.9)  | (67.8, 103.9)
  43  | (128.6, 108.9)  | (86.6, 103.9)
  44  | (147.5, 108.9)  | (105.5, 103.9)
  45  | (166.4, 108.9)  | (124.4, 103.9)
  46  | (185.3, 108.9)  | (143.3, 103.9)
  47  | (204.2, 108.9)  | (162.2, 103.9)
  48  | (223.0, 108.9)  | (181.0, 103.9)
  49  | (241.9, 108.9)  | (199.9, 103.9)
  50  | (241.9, 131.1)  | (199.9, 126.1)
  51  | (223.0, 131.1)  | (181.0, 126.1)
  52  | (204.2, 131.1)  | (162.2, 126.1)
  53  | (185.3, 131.1)  | (143.3, 126.1)
  54  | (166.4, 131.1)  | (124.4, 126.1)
  55  | (147.5, 131.1)  | (105.5, 126.1)
  56  | (128.6, 131.1)  | (86.6, 126.1)
  57  | (109.8, 131.1)  | (67.8, 126.1)
  58  | (90.9, 131.1)   | (48.9, 126.1)
  59  | (72.0, 131.1)   | (30.0, 126.1)
  60  | (72.0, 153.3)   | (30.0, 148.3)
  61  | (90.9, 153.3)   | (48.9, 148.3)
  62  | (109.8, 153.3)  | (67.8, 148.3)
  63  | (128.6, 153.3)  | (86.6, 148.3)
  64  | (147.5, 153.3)  | (105.5, 148.3)
  65  | (166.4, 153.3)  | (124.4, 148.3)
  66  | (185.3, 153.3)  | (143.3, 148.3)
  67  | (204.2, 153.3)  | (162.2, 148.3)
  68  | (223.0, 153.3)  | (181.0, 148.3)
  69  | (241.9, 153.3)  | (199.9, 148.3)
  70  | (241.9, 175.5)  | (199.9, 170.5)
  71  | (223.0, 175.5)  | (181.0, 170.5)
  72  | (204.2, 175.5)  | (162.2, 170.5)
  73  | (185.3, 175.5)  | (143.3, 170.5)
  74  | (166.4, 175.5)  | (124.4, 170.5)
  75  | (147.5, 175.5)  | (105.5, 170.5)
  76  | (128.6, 175.5)  | (86.6, 170.5)
  77  | (109.8, 175.5)  | (67.8, 170.5)
  78  | (90.9, 175.5)   | (48.9, 170.5)
  79  | (72.0, 175.5)   | (30.0, 170.5)
  80  | (72.0, 197.8)   | (30.0, 192.8)
  81  | (90.9, 197.8)   | (48.9, 192.8)
  82  | (109.8, 197.8)  | (67.8, 192.8)
  83  | (128.6, 197.8)  | (86.6, 192.8)
  84  | (147.5, 197.8)  | (105.5, 192.8)
  85  | (166.4, 197.8)  | (124.4, 192.8)
  86  | (185.3, 197.8)  | (143.3, 192.8)
  87  | (204.2, 197.8)  | (162.2, 192.8)
  88  | (223.0, 197.8)  | (181.0, 192.8)
  89  | (241.9, 197.8)  | (199.9, 192.8)
  90  | (241.9, 220.0)  | (199.9, 215.0)
  91  | (223.0, 220.0)  | (181.0, 215.0)
  92  | (204.2, 220.0)  | (162.2, 215.0)
  93  | (185.3, 220.0)  | (143.3, 215.0)
  94  | (166.4, 220.0)  | (124.4, 215.0)
  95  | (147.5, 220.0)  | (105.5, 215.0)
  96  | (128.6, 220.0)  | (86.6, 215.0)
  97  | (109.8, 220.0)  | (67.8, 215.0)
  98  | (90.9, 220.0)   | (48.9, 215.0)
  99  | (72.0, 220.0)   | (30.0, 215.0)
Starting heater checks for extruder
webhooks: registering remote method 'shutdown_machine' for connection id: 4127985328
webhooks: registering remote method 'reboot_machine' for connection id: 4127985328
webhooks: registering remote method 'pause_job_queue' for connection id: 4127985328
webhooks: registering remote method 'start_job_queue' for connection id: 4127985328
Starting Klippy...
Args: ['/home/admin/klipper/klippy/klippy.py', '/home/admin/printer_data/config/printer.cfg', '-I', '/home/admin/printer_data/comms/klippy.serial', '-l', '/home/admin/printer_data/logs/klippy.log', '-a', '/home/admin/printer_data/comms/klippy.sock']
Git version: 'v0.12.0-8-g187cc2f1-dirty'
Untracked files: klippy/extras/gcode_shell_command.py
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper
CPU: 2 core Intel(R) Atom(TM) CPU N450   @ 1.66GHz
Python: '3.9.2 (default, Feb 28 2021, 17:03:44) \n[GCC 10.2.1 20210110]'
Start printer at Tue Nov 21 13:23:53 2023 (1700583833.6 320008.5)
===== Config file =====
[gcode_shell_command hello_world]
command = echo hello world
timeout = 2.
verbose = True

[gcode_macro HELLO_WORLD]
gcode = 
	RUN_SHELL_COMMAND CMD=hello_world

[virtual_sdcard]
path = /home/admin/printer_data/gcodes
on_error_gcode = CANCEL_PRINT

[pause_resume]

[display_status]

[respond]

[gcode_macro CANCEL_PRINT]
description = Cancel the actual running print
rename_existing = CANCEL_PRINT_BASE
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set allow_park = client.park_at_cancel|default(false)|lower == 'true' %}
	{% set retract = client.cancel_retract|default(5.0)|abs %}
	
	{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)
	else "X=" ~ client.park_at_cancel_x %}
	{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)
	else "Y=" ~ client.park_at_cancel_y %}
	{% set custom_park = park_x|length > 0 or park_y|length > 0 %}
	
	
	{% if printer['gcode_macro RESUME'].restore_idle_timeout > 0 %}
	SET_IDLE_TIMEOUT TIMEOUT={printer['gcode_macro RESUME'].restore_idle_timeout}
	{% endif %}
	{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}
	_CLIENT_RETRACT LENGTH={retract}
	TURN_OFF_HEATERS
	M106 S0
	{client.user_cancel_macro|default("")}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False
	
	SET_PAUSE_NEXT_LAYER ENABLE=0
	SET_PAUSE_AT_LAYER ENABLE=0 LAYER=0
	CANCEL_PRINT_BASE

[gcode_macro PAUSE]
description = Pause the actual running print
rename_existing = PAUSE_BASE
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set idle_timeout = client.idle_timeout|default(0) %}
	{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != '' else 0 %}
	{% set restore = False if printer.toolhead.extruder == ''
	else True  if params.RESTORE|default(1)|int == 1 else False %}
	
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{'restore': restore, 'temp': temp}}"
	
	{% if idle_timeout > 0 %}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}
	SET_IDLE_TIMEOUT TIMEOUT={idle_timeout}
	{% endif %}
	PAUSE_BASE
	{client.user_pause_macro|default("")}
	_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}

[gcode_macro RESUME]
description = Resume the actual running print
rename_existing = RESUME_BASE
variable_last_extruder_temp = {'restore': False, 'temp': 0}
variable_restore_idle_timeout = 0
variable_idle_state = False
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
	{% set sp_move = client.speed_move|default(velocity) %}
	{% set runout_resume = True if client.runout_sensor|default("") == ""
	else True if not printer[client.runout_sensor].enabled
	else printer[client.runout_sensor].filament_detected %}
	{% set can_extrude = True if printer.toolhead.extruder == ''
	else printer[printer.toolhead.extruder].can_extrude %}
	{% set do_resume = False %}
	
	
	{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False
	{% if last_extruder_temp.restore %}
	
	RESPOND TYPE=echo MSG='{"Restoring \"%s\" temperature to %3.1f\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }'
	M109 S{last_extruder_temp.temp}
	{% set do_resume = True %}
	{% elif can_extrude %}
	{% set do_resume = True %}
	{% else %}
	RESPOND TYPE=error MSG='{"Resume aborted !!! \"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}'
	{% endif %}
	
	{% elif can_extrude %}
	{% set do_resume = True %}
	{% else %}
	RESPOND TYPE=error MSG='{"Resume aborted !!! \"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}'
	{% endif %}
	{% if runout_resume %}
	{% if do_resume %}
	{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}
	{client.user_resume_macro|default("")}
	_CLIENT_EXTRUDE
	RESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}
	{% endif %}
	{% else %}
	RESPOND TYPE=error MSG='{"Resume aborted !!! \"%s\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}'
	{% endif %}

[gcode_macro SET_PAUSE_NEXT_LAYER]
description = Enable a pause if the next layer is reached
gcode = 
	{% set pause_next_layer = printer['gcode_macro SET_PRINT_STATS_INFO'].pause_next_layer %}
	{% set ENABLE = params.ENABLE|default(1)|int != 0 %}
	{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}
	SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ 'enable': ENABLE, 'call': MACRO }}"

[gcode_macro SET_PAUSE_AT_LAYER]
description = Enable/disable a pause if a given layer number is reached
gcode = 
	{% set pause_at_layer = printer['gcode_macro SET_PRINT_STATS_INFO'].pause_at_layer %}
	{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined
	else params.LAYER is defined %}
	{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}
	{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}
	SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ 'enable': ENABLE, 'layer': LAYER, 'call': MACRO }}"

[gcode_macro SET_PRINT_STATS_INFO]
rename_existing = SET_PRINT_STATS_INFO_BASE
description = Overwrite, to get pause_next_layer and pause_at_layer feature
variable_pause_next_layer = { 'enable': False, 'call': "PAUSE" }
variable_pause_at_layer = { 'enable': False, 'layer': 0, 'call': "PAUSE" }
gcode = 
	{% if pause_next_layer.enable %}
	RESPOND TYPE=echo MSG='{"%s, forced by pause_next_layer" % pause_next_layer.call}'
	{pause_next_layer.call}
	SET_PAUSE_NEXT_LAYER ENABLE=0
	{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}
	RESPOND TYPE=echo MSG='{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}'
	{pause_at_layer.call}
	SET_PAUSE_AT_LAYER ENABLE=0
	{% endif %}
	SET_PRINT_STATS_INFO_BASE {rawparams}

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description = Helper: park toolhead used in PAUSE and CANCEL_PRINT
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
	{% set use_custom     = client.use_custom_pos|default(false)|lower == 'true' %}
	{% set custom_park_x  = client.custom_park_x|default(0.0) %}
	{% set custom_park_y  = client.custom_park_y|default(0.0) %}
	{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}
	{% set sp_hop         = client.speed_hop|default(15) * 60 %}
	{% set sp_move        = client.speed_move|default(velocity) * 60 %}
	
	{% set origin    = printer.gcode_move.homing_origin %}
	{% set act       = printer.gcode_move.gcode_position %}
	{% set max       = printer.toolhead.axis_maximum %}
	{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}
	{% set round_bed = True if printer.configfile.settings.printer.kinematics is in ['delta','polar','rotary_delta','winch']
	else False %}
	
	{% set z_min = params.Z_MIN|default(0)|float %}
	{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}
	{% set x_park = params.X       if params.X is defined
	else custom_park_x  if use_custom
	else 0.0            if round_bed
	else (max.x - 5.0) %}
	{% set y_park = params.Y       if params.Y is defined
	else custom_park_y  if use_custom
	else (max.y - 5.0)  if round_bed and z_park < cone
	else 0.0            if round_bed
	else (max.y - 5.0) %}
	
	_CLIENT_RETRACT
	{% if "xyz" in printer.toolhead.homed_axes %}
	G90
	G1 Z{z_park} F{sp_hop}
	G1 X{x_park} Y{y_park} F{sp_move}
	{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}
	{% else %}
	RESPOND TYPE=echo MSG='Printer not homed'
	{% endif %}

[gcode_macro _CLIENT_EXTRUDE]
description = Extrudes, if the extruder is hot enough
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == 'true') and (printer.firmware_retraction is defined) %}
	{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}
	{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}
	{% set absolute_extrude = printer.gcode_move.absolute_extrude %}
	
	{% if printer.toolhead.extruder != '' %}
	{% if printer[printer.toolhead.extruder].can_extrude %}
	{% if use_fw_retract %}
	{% if length < 0 %}
	G10
	{% else %}
	G11
	{% endif %}
	{% else %}
	M83
	G1 E{length} F{(speed|float|abs) * 60}
	{% if absolute_extrude %}
	M82
	{% endif %}
	{% endif %}
	{% else %}
	RESPOND TYPE=echo MSG='{"\"%s\" not hot enough" % printer.toolhead.extruder}'
	{% endif %}
	{% endif %}

[gcode_macro _CLIENT_RETRACT]
description = Retracts, if the extruder is hot enough
gcode = 
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}
	{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}
	
	_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}

[gcode_macro BED_MESH_CALIBRATE]
rename_existing = _BED_MESH_CALIBRATE
gcode = 
	
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set bed_mesh_min = printer.configfile.settings.bed_mesh.mesh_min %}
	{% set bed_mesh_max = printer.configfile.settings.bed_mesh.mesh_max %}
	{% set probe_count = printer.configfile.settings.bed_mesh.probe_count %}
	{% set kamp_settings = printer["gcode_macro _KAMP_Settings"] %}
	{% set verbose_enable = kamp_settings.verbose_enable | abs %}
	{% set probe_dock_enable = kamp_settings.probe_dock_enable | abs %}
	{% set attach_macro = kamp_settings.attach_macro | string %}
	{% set detach_macro = kamp_settings.detach_macro | string %}
	{% set mesh_margin = kamp_settings.mesh_margin | float %}
	{% set fuzz_amount = kamp_settings.fuzz_amount | float %}
	{% set probe_count = probe_count if probe_count|length > 1 else probe_count * 2  %}
	{% set max_probe_point_distance_x = ( bed_mesh_max[0] - bed_mesh_min[0] ) / (probe_count[0] - 1)  %}
	{% set max_probe_point_distance_y = ( bed_mesh_max[1] - bed_mesh_min[1] ) / (probe_count[1] - 1)  %}
	{% set x_min = all_points | map(attribute=0) | min | default(bed_mesh_min[0]) %}
	{% set y_min = all_points | map(attribute=1) | min | default(bed_mesh_min[1]) %}
	{% set x_max = all_points | map(attribute=0) | max | default(bed_mesh_max[0]) %}
	{% set y_max = all_points | map(attribute=1) | max | default(bed_mesh_max[1]) %}
	
	{% set fuzz_range = range((0) | int, (fuzz_amount * 100) | int + 1) %}
	{% set adapted_x_min = x_min - mesh_margin - (fuzz_range | random / 100.0) %}
	{% set adapted_y_min = y_min - mesh_margin - (fuzz_range | random / 100.0) %}
	{% set adapted_x_max = x_max + mesh_margin + (fuzz_range | random / 100.0) %}
	{% set adapted_y_max = y_max + mesh_margin + (fuzz_range | random / 100.0) %}
	
	{% set adapted_x_min = [adapted_x_min , bed_mesh_min[0]] | max %}
	{% set adapted_y_min = [adapted_y_min , bed_mesh_min[1]] | max %}
	{% set adapted_x_max = [adapted_x_max , bed_mesh_max[0]] | min %}
	{% set adapted_y_max = [adapted_y_max , bed_mesh_max[1]] | min %}
	
	{% set points_x = (((adapted_x_max - adapted_x_min) / max_probe_point_distance_x) | round(method='ceil') | int) + 1 %}
	{% set points_y = (((adapted_y_max - adapted_y_min) / max_probe_point_distance_y) | round(method='ceil') | int) + 1 %}
	
	{% if (([points_x, points_y]|max) > 6) %}
	{% set algorithm = "bicubic" %}
	{% set min_points = 4 %}
	{% else %}
	{% set algorithm = "lagrange" %}
	{% set min_points = 3 %}
	{% endif %}
	
	{% set points_x = [points_x , min_points]|max %}
	{% set points_y = [points_y , min_points]|max %}
	{% set points_x = [points_x , probe_count[0]]|min %}
	{% set points_y = [points_y , probe_count[1]]|min %}
	
	{% if verbose_enable == True %}
	{% if printer.exclude_object.objects != [] %}
	
	{ action_respond_info( "Algorithm: {}.".format(
	(algorithm),
	)) }
	
	{ action_respond_info("Default probe count: {},{}.".format(
	(probe_count[0]),
	(probe_count[1]),
	)) }
	
	{ action_respond_info("Adapted probe count: {},{}.".format(
	(points_x),
	(points_y),
	)) }
	
	{action_respond_info("Default mesh bounds: {}, {}.".format(
	(bed_mesh_min[0],bed_mesh_min[1]),
	(bed_mesh_max[0],bed_mesh_max[1]),
	)) }
	
	{% if mesh_margin > 0 %}
	{action_respond_info("Mesh margin is {}, mesh bounds extended by {}mm.".format(
	(mesh_margin),
	(mesh_margin),
	)) }
	{% else %}
	{action_respond_info("Mesh margin is 0, margin not increased.")}
	{% endif %}
	
	{% if fuzz_amount > 0 %}
	{action_respond_info("Mesh point fuzzing enabled, points fuzzed up to {}mm.".format(
	(fuzz_amount),
	)) }
	{% else %}
	{action_respond_info("Fuzz amount is 0, mesh points not fuzzed.")}
	{% endif %}
	
	{ action_respond_info("Adapted mesh bounds: {}, {}.".format(
	(adapted_x_min, adapted_y_min),
	(adapted_x_max, adapted_y_max),
	)) }
	
	{action_respond_info("KAMP adjustments successful. Happy KAMPing!")}
	
	{% else %}
	
	{action_respond_info("No objects detected! Check your gcode and make sure that EXCLUDE_OBJECT_DEFINE is happening before BED_MESH_CALIBRATE is called. Defaulting to regular meshing.")}
	G4 P5000
	{% endif %}
	
	{% endif %}
	
	{% if probe_dock_enable == True %}
	{attach_macro}
	{% endif %}
	
	_BED_MESH_CALIBRATE mesh_min={adapted_x_min},{adapted_y_min} mesh_max={adapted_x_max},{adapted_y_max} ALGORITHM={algorithm} PROBE_COUNT={points_x},{points_y}
	
	{% if probe_dock_enable == True %}
	{detach_macro}
	{% endif %}

[gcode_macro LINE_PURGE]
description = A purge macro that adapts to be near your actual printed objects
gcode = 
	
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	{% set cross_section = printer.configfile.settings.extruder.max_extrude_cross_section | float %}
	
	
	{% if printer.firmware_retraction is defined %}
	{% set RETRACT = G10 | string %}
	{% set UNRETRACT = G11 | string %}
	{% else %}
	{% set RETRACT = 'G1 E-.5 F2100' | string %}
	{% set UNRETRACT = 'G1 E.5 F2100' | string %}
	{% endif %}
	
	
	{% set verbose_enable = printer["gcode_macro _KAMP_Settings"].verbose_enable | abs %}
	{% set purge_height = printer["gcode_macro _KAMP_Settings"].purge_height | float %}
	{% set tip_distance = printer["gcode_macro _KAMP_Settings"].tip_distance | float %}
	{% set purge_margin = printer["gcode_macro _KAMP_Settings"].purge_margin | float %}
	{% set purge_amount = printer["gcode_macro _KAMP_Settings"].purge_amount | float %}
	{% set flow_rate = printer["gcode_macro _KAMP_Settings"].flow_rate | float %}
	
	
	
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set purge_x_min = (all_points | map(attribute=0) | min | default(0)) %}
	{% set purge_x_max = (all_points | map(attribute=0) | max | default(0)) %}
	{% set purge_y_min = (all_points | map(attribute=1) | min | default(0)) %}
	{% set purge_y_max = (all_points | map(attribute=1) | max | default(0)) %}
	
	{% set purge_x_center = ([((purge_x_max + purge_x_min) / 2) - (purge_amount / 2), 0] | max) %}
	{% set purge_y_center = ([((purge_y_max + purge_y_min) / 2) - (purge_amount / 2), 0] | max) %}
	
	{% set purge_x_origin = ([purge_x_min - purge_margin, 0] | max) %}
	{% set purge_y_origin = ([purge_y_min - purge_margin, 0] | max) %}
	
	
	{% set purge_move_speed = (flow_rate / 5.0) * 60 | float %}
	
	{% if cross_section < 5 %}
	
	{action_respond_info("[Extruder] max_extrude_cross_section is insufficient for purge, please set it to 5 or greater. Purge skipped.")}
	
	{% else %}
	
	{% if verbose_enable == True %}
	
	{action_respond_info("Moving filament tip {}mms".format(
	(tip_distance),
	)) }
	{% endif %}
	
	{% if printer.firmware_retraction is defined %}
	{action_respond_info("KAMP purge is using firmware retraction.")}
	{% else %}
	{action_respond_info("KAMP purge is not using firmware retraction, it is recommended to configure it.")}
	{% endif %}
	
	{% if purge_y_origin > 0 %}
	
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm/s3.".format(
	(purge_x_center),
	(purge_y_origin),
	(purge_amount),
	(flow_rate),
	)) }
	
	{% else %}
	
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm/s3.".format(
	(purge_x_origin),
	(purge_y_center),
	(purge_amount),
	(flow_rate),
	)) }
	
	{% endif %}
	
	SAVE_GCODE_STATE NAME=Prepurge_State
	
	{% if purge_y_origin > 0 %}
	
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_center} Y{purge_y_origin}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 X{purge_x_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 X{purge_x_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	
	{% else %}
	
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_origin} Y{purge_y_center}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 Y{purge_y_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 Y{purge_y_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	
	{% endif %}
	
	RESTORE_GCODE_STATE NAME=Prepurge_State
	
	{% endif %}

[gcode_macro SMART_PARK]
description = Parks your printhead near the print area for pre-print hotend heating.
gcode = 
	
	{% set kamp_settings = printer["gcode_macro _KAMP_Settings"] %}
	{% set z_height = kamp_settings.smart_park_height | float %}
	{% set purge_margin = kamp_settings.purge_margin | float %}
	{% set verbose_enable = kamp_settings.verbose_enable | abs %}
	{% set center_x = printer.toolhead.axis_maximum.x / 2 | float %}
	{% set center_y = printer.toolhead.axis_maximum.y / 2 | float %}
	{% set axis_minimum_x = printer.toolhead.axis_minimum.x | float %}
	{% set axis_minimum_y = printer.toolhead.axis_minimum.y | float %}
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set x_min = all_points | map(attribute=0) | min | default(center_x) %}
	{% set y_min = all_points | map(attribute=1) | min | default(center_y) %}
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	
	{% if purge_margin > 0 and x_min != center_x and y_min != center_y %}
	{% set x_min = [ x_min - purge_margin , x_min ] | min %}
	{% set y_min = [ y_min - purge_margin , y_min ] | min %}
	{% set x_min = [ x_min , axis_minimum_x ] | max %}
	{% set y_min = [ y_min , axis_minimum_y ] | max %}
	{% endif %}
	
	
	{% if verbose_enable == True %}
	
	{ action_respond_info("Smart Park location: {},{}.".format(
	(x_min),
	(y_min),
	)) }
	
	{% endif %}
	
	{% if printer.toolhead.position.z < z_height %}
	G0 Z{z_height}
	{% endif %}
	G0 X{x_min} Y{y_min} F{travel_speed}
	G0 Z{z_height}

[gcode_macro _KAMP_Settings]
description = This macro contains all adjustable settings for KAMP
variable_verbose_enable = True
variable_mesh_margin = 0
variable_fuzz_amount = 0
variable_probe_dock_enable = False
variable_attach_macro = 'Attach_Probe'
variable_detach_macro = 'Dock_Probe'
variable_purge_height = 0.8
variable_tip_distance = 0
variable_purge_margin = 10
variable_purge_amount = 30
variable_flow_rate = 12
variable_smart_park_height = 10
gcode = 
	
	{action_respond_info(" Running the KAMP_Settings macro does nothing, it is only used for storing KAMP settings. ")}

[mcu]
serial = /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method = command
baud = 115200

[exclude_object]

[stepper_x]
step_pin = PB12
dir_pin = PB10
enable_pin = !PB1
microsteps = 32
rotation_distance = 80
full_steps_per_rotation = 400
endstop_pin = !PA13
position_endstop = 0
position_min = 0
position_max = 235
homing_speed = 40

[stepper_y]
step_pin = PB0
dir_pin = PC5
enable_pin = !PB1
microsteps = 32
rotation_distance = 80
full_steps_per_rotation = 400
endstop_pin = !PB9
position_endstop = 0
position_max = 235
homing_speed = 40

[stepper_z]
step_pin = PA1
dir_pin = !PA0
enable_pin = !PC4
microsteps = 32
rotation_distance = 16
full_steps_per_rotation = 400
endstop_pin = probe:z_virtual_endstop
position_max = 250
position_min = -10
homing_speed = 5

[extruder]
step_pin = !PC3
dir_pin = !PC2
enable_pin = !PB1
microsteps = 32
rotation_distance = 31.38
full_steps_per_rotation = 400
nozzle_diameter = 0.400
filament_diameter = 1.750
heater_pin = PC8
sensor_type = EPCOS 100K B57560G104F
sensor_pin = PC1
min_temp = 0
max_temp = 260
pressure_advance = 0
max_extrude_only_distance = 500.0
control = pid
pid_kp = 19.198
pid_ki = 0.556
pid_kd = 165.579

[heater_bed]
heater_pin = PC9
sensor_type = EPCOS 100K B57560G104F
sensor_pin = PC0
control = pid
pid_kp = 20.7074
pid_ki = 3.5872
pid_kd = 79.6889
min_temp = 5
max_temp = 100

[fan]
pin = PC6

[heater_fan hotend_fan]
pin = PC7
max_power = 1.0
fan_speed = 1
shutdown_speed = 0.0
kick_start_time = 0
heater = extruder
heater_temp = 50.0

[printer]
kinematics = cartesian
max_velocity = 180
max_accel = 2500
max_accel_to_decel = 1250
max_z_velocity = 12
max_z_accel = 50
square_corner_velocity = 2

[bed_mesh]
speed = 100
horizontal_move_z = 20
mesh_min = 30, 15
mesh_max = 200, 215
probe_count = 10, 10
mesh_pps = 2, 2
fade_start = 1
fade_end = 10
fade_target = 0
algorithm = bicubic
bicubic_tension = 0.2
move_check_distance = 3
split_delta_z = .025

[bed_screws]
screw1 = 17, 20
screw2 = 217, 20
screw3 = 17, 220
screw4 = 217, 220

[filament_switch_sensor my_sensor]
pause_on_runout = True
runout_gcode = [pause_resume]
event_delay = 3.0
pause_delay = 0.5
switch_pin = PC14

[firmware_retraction]
retract_length = 2.2
retract_speed = 60

[idle_timeout]
gcode = 
	TURN_OFF_HEATERS
	M84
timeout = 28800

[bltouch]
sensor_pin = !PC13
control_pin = PA8
x_offset = -42
y_offset = -5
pin_up_touch_mode_reports_triggered = False
stow_on_each_sample = False
pin_up_reports_not_triggered = False
probe_with_touch_mode = True
pin_move_time = 0.4
speed = 20
z_offset = 0.590

[safe_z_home]
home_xy_position = 115, 115
speed = 50
z_hop = 5
z_hop_speed = 5

[gcode_macro update_git]
gcode = 
	RUN_SHELL_COMMAND CMD=update_git_script

[gcode_shell_command update_git_script]
command = bash /home/admin/klipper-backup/script.sh
timeout = 90.0
verbose = True

[gcode_macro START_PRINT]
gcode = 
	{% set BED_TEMP = params.BED_TEMP|default(60)|float %}
	{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
	
	M140 S{BED_TEMP}
	
	G90
	
	SET_GCODE_OFFSET Z=0.0
	
	G28
	
	BED_MESH_CALIBRATE
	
	G1 Z5 F3000
	
	G1 Z0.15 F300
	
	M190 S{BED_TEMP}
	
	M109 S{EXTRUDER_TEMP}
	
	SMART_PARK
	
	LINE_PURGE

[gcode_macro END_PRINT]
gcode = 
	
	M140 S0
	M104 S0
	M106 S0
	
	G91
	G1 X-2 Y-2 E-3 F300
	
	G1 Z10 F3000
	G90
	
	M84

[gcode_macro M300]
gcode = 
	
	{% set S = params.S|default(1000)|int %}
	
	{% set P = params.P|default(100)|int %}
	SET_PIN PIN=BEEPER_pin VALUE=0.5 CYCLE_TIME={ 1.0/S if S > 0 else 1 }
	G4 P{P}
	SET_PIN PIN=BEEPER_pin VALUE=0

[gcode_macro M600]
gcode = 
	{% set X = params.X|default(50)|float %}
	{% set Y = params.Y|default(0)|float %}
	{% set Z = params.Z|default(10)|float %}
	SAVE_GCODE_STATE NAME=M600_state
	PAUSE
	G91
	G1 E-.8 F2700
	G1 Z{Z}
	G90
	G1 X{X} Y{Y} F3000
	G91
	G1 E-50 F1000
	RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro QUERY_BME280]
gcode = 
	{% set sensor = printer["bme280 my_sensor"] %}
	{action_respond_info(
	"Temperature: %.2f C\n"
	"Pressure: %.2f hPa\n"
	"Humidity: %.2f%%" % (
	sensor.temperature,
	sensor.pressure,
	sensor.humidity))}

[gcode_macro QUERY_HTU21D]
gcode = 
	{% set sensor = printer["htu21d my_sensor"] %}
	{action_respond_info(
	"Temperature: %.2f C\n"
	"Humidity: %.2f%%" % (
	sensor.temperature,
	sensor.humidity))}

[gcode_macro M117]
rename_existing = M117.1
gcode = 
	{% if rawparams %}
	{% set escaped_msg = rawparams.split(';', 1)[0].split('\x23', 1)[0]|replace('"', '\\"') %}
	SET_DISPLAY_TEXT MSG="{escaped_msg}"
	RESPOND TYPE=command MSG="{escaped_msg}"
	{% else %}
	SET_DISPLAY_TEXT
	{% endif %}

[sdcard_loop]

[gcode_macro M808]
gcode = 
	{% if params.K is not defined and params.L is defined %}SDCARD_LOOP_BEGIN COUNT={params.L|int}{% endif %}
	{% if params.K is not defined and params.L is not defined %}SDCARD_LOOP_END{% endif %}
	{% if params.K is defined and params.L is not defined %}SDCARD_LOOP_DESIST{% endif %}

[gcode_macro M486]
gcode = 
	
	
	
	
	
	
	
	
	
	
	
	{% if 'exclude_object' not in printer %}
	{action_raise_error("[exclude_object] is not enabled")}
	{% endif %}
	
	{% if 'T' in params %}
	EXCLUDE_OBJECT RESET=1
	
	{% for i in range(params.T | int) %}
	EXCLUDE_OBJECT_DEFINE NAME={i}
	{% endfor %}
	{% endif %}
	
	{% if 'C' in params %}
	EXCLUDE_OBJECT CURRENT=1
	{% endif %}
	
	{% if 'P' in params %}
	EXCLUDE_OBJECT NAME={params.P}
	{% endif %}
	
	{% if 'S' in params %}
	{% if params.S == '-1' %}
	{% if printer.exclude_object.current_object %}
	EXCLUDE_OBJECT_END NAME={printer.exclude_object.current_object}
	{% endif %}
	{% else %}
	EXCLUDE_OBJECT_START NAME={params.S}
	{% endif %}
	{% endif %}
	
	{% if 'U' in params %}
	EXCLUDE_OBJECT RESET=1 NAME={params.U}
	{% endif %}

[gcode_macro G130]
gcode = 
	M400
	{% if ('X' in params) and ('mcp4018 x_axis_pot' in printer.configfile.config) %}
	{% set x_value = params['X']|float %}
	{% set x_axis_pot_scale = printer.configfile.config["mcp4018 x_axis_pot"].scale|float %}
	SET_DIGIPOT DIGIPOT=x_axis_pot WIPER={ x_axis_pot_scale * (x_value / 127.0)}
	{% endif %}
	{% if ('Y' in params) and ('mcp4018 y_axis_pot' in printer.configfile.config) %}
	{% set y_value = params['Y']|float %}
	{% set y_axis_pot_scale = printer.configfile.config["mcp4018 y_axis_pot"].scale|float %}
	SET_DIGIPOT DIGIPOT=y_axis_pot WIPER={ y_axis_pot_scale * (y_value / 127.0)}
	{% endif %}
	{% if ('Z' in params) and ('mcp4018 z_axis_pot' in printer.configfile.config) %}
	{% set z_value = params['Z']|float %}
	{% set z_axis_pot_scale = printer.configfile.config["mcp4018 z_axis_pot"].scale|float %}
	SET_DIGIPOT DIGIPOT=z_axis_pot WIPER={ z_axis_pot_scale * (z_value / 127.0)}
	{% endif %}
	{% if ('A' in params) and ('mcp4018 a_axis_pot' in printer.configfile.config) %}
	{% set a_value = params['A']|float %}
	{% set a_axis_pot_scale = printer.configfile.config["mcp4018 a_axis_pot"].scale|float %}
	SET_DIGIPOT DIGIPOT=a_axis_pot WIPER={ a_axis_pot_scale * (a_value / 127.0)}
	{% endif %}
	{% if ('B' in params) and ('mcp4018 b_axis_pot' in printer.configfile.config) %}
	{% set b_value = params['B']|float %}
	{% set b_axis_pot_scale = printer.configfile.config["mcp4018 b_axis_pot"].scale|float %}
	SET_DIGIPOT DIGIPOT=b_axis_pot WIPER={ b_axis_pot_scale * (b_value / 127.0)}
	{% endif %}

[gcode_macro G29]
gcode = 
	BED_MESH_CLEAR
	BED_MESH_CALIBRATE
	BED_MESH_PROFILE SAVE=default
	BED_MESH_PROFILE LOAD=default

[bed_mesh default]
version = 1
points = 
	-0.002500, 0.013750, 0.021250
	0.013750, 0.022500, 0.025000
	0.012500, 0.022500, 0.028750
x_count = 3
y_count = 3
mesh_x_pps = 2
mesh_y_pps = 2
algo = lagrange
tension = 0.2
min_x = 102.69999999999999
max_x = 127.28
min_y = 102.7
max_y = 127.28
=======================
Extruder max_extrude_ratio=0.266081
mcu 'mcu': Starting serial connect
webhooks client 4128587440: New connection
webhooks client 4128587440: Client info {'program': 'Moonraker', 'version': 'v0.8.0-202-gdddd968'}
mcu 'mcu': got {'oid': 10, 'next_clock': 2238619648, 'value': 31272, '#name': 'analog_in_state', '#sent_time': 320011.1633138704, '#receive_time': 320011.2011933487}
mcu 'mcu': got {'oid': 18, 'next_clock': 2244379648, 'value': 31308, '#name': 'analog_in_state', '#sent_time': 320011.27159279335, '#receive_time': 320011.2811002277}
Loaded MCU 'mcu' 107 commands (v0.11.0-257-ged66982b / gcc: (15:8-2019-q3-1+b1) 8.3.1 20190703 (release) [gcc-8-branch revision 273027] binutils: (2.35.2-2+14+b2) 2.35.2)
MCU 'mcu' config: ADC_MAX=4095 BUS_PINS_i2c1=PB6,PB7 BUS_PINS_i2c1a=PB8,PB9 BUS_PINS_i2c2=PB10,PB11 BUS_PINS_spi1=PA6,PA7,PA5 BUS_PINS_spi1a=PB4,PB5,PB3 BUS_PINS_spi2=PB14,PB15,PB13 BUS_PINS_spi3=PB4,PB5,PB3 CLOCK_FREQ=72000000 INITIAL_PINS=!PC6,!PD13 MCU=stm32f103xe PWM_MAX=255 RECEIVE_WINDOW=192 RESERVE_PINS_serial=PA10,PA9 SERIAL_BAUD=115200 STATS_SUMSQ_BASE=256 STEPPER_BOTH_EDGE=1
Configured MCU 'mcu' (1024 moves)
Starting heater checks for heater_bed
bed_mesh: generated points
Index |  Tool Adjusted  |   Probe
  0   | (72.0, 20.0)    | (30.0, 15.0)
  1   | (90.9, 20.0)    | (48.9, 15.0)
  2   | (109.8, 20.0)   | (67.8, 15.0)
  3   | (128.6, 20.0)   | (86.6, 15.0)
  4   | (147.5, 20.0)   | (105.5, 15.0)
  5   | (166.4, 20.0)   | (124.4, 15.0)
  6   | (185.3, 20.0)   | (143.3, 15.0)
  7   | (204.2, 20.0)   | (162.2, 15.0)
  8   | (223.0, 20.0)   | (181.0, 15.0)
  9   | (241.9, 20.0)   | (199.9, 15.0)
  10  | (241.9, 42.2)   | (199.9, 37.2)
  11  | (223.0, 42.2)   | (181.0, 37.2)
  12  | (204.2, 42.2)   | (162.2, 37.2)
  13  | (185.3, 42.2)   | (143.3, 37.2)
  14  | (166.4, 42.2)   | (124.4, 37.2)
  15  | (147.5, 42.2)   | (105.5, 37.2)
  16  | (128.6, 42.2)   | (86.6, 37.2)
  17  | (109.8, 42.2)   | (67.8, 37.2)
  18  | (90.9, 42.2)    | (48.9, 37.2)
  19  | (72.0, 42.2)    | (30.0, 37.2)
  20  | (72.0, 64.4)    | (30.0, 59.4)
  21  | (90.9, 64.4)    | (48.9, 59.4)
  22  | (109.8, 64.4)   | (67.8, 59.4)
  23  | (128.6, 64.4)   | (86.6, 59.4)
  24  | (147.5, 64.4)   | (105.5, 59.4)
  25  | (166.4, 64.4)   | (124.4, 59.4)
  26  | (185.3, 64.4)   | (143.3, 59.4)
  27  | (204.2, 64.4)   | (162.2, 59.4)
  28  | (223.0, 64.4)   | (181.0, 59.4)
  29  | (241.9, 64.4)   | (199.9, 59.4)
  30  | (241.9, 86.7)   | (199.9, 81.7)
  31  | (223.0, 86.7)   | (181.0, 81.7)
  32  | (204.2, 86.7)   | (162.2, 81.7)
  33  | (185.3, 86.7)   | (143.3, 81.7)
  34  | (166.4, 86.7)   | (124.4, 81.7)
  35  | (147.5, 86.7)   | (105.5, 81.7)
  36  | (128.6, 86.7)   | (86.6, 81.7)
  37  | (109.8, 86.7)   | (67.8, 81.7)
  38  | (90.9, 86.7)    | (48.9, 81.7)
  39  | (72.0, 86.7)    | (30.0, 81.7)
  40  | (72.0, 108.9)   | (30.0, 103.9)
  41  | (90.9, 108.9)   | (48.9, 103.9)
  42  | (109.8, 108.9)  | (67.8, 103.9)
  43  | (128.6, 108.9)  | (86.6, 103.9)
  44  | (147.5, 108.9)  | (105.5, 103.9)
  45  | (166.4, 108.9)  | (124.4, 103.9)
  46  | (185.3, 108.9)  | (143.3, 103.9)
  47  | (204.2, 108.9)  | (162.2, 103.9)
  48  | (223.0, 108.9)  | (181.0, 103.9)
  49  | (241.9, 108.9)  | (199.9, 103.9)
  50  | (241.9, 131.1)  | (199.9, 126.1)
  51  | (223.0, 131.1)  | (181.0, 126.1)
  52  | (204.2, 131.1)  | (162.2, 126.1)
  53  | (185.3, 131.1)  | (143.3, 126.1)
  54  | (166.4, 131.1)  | (124.4, 126.1)
  55  | (147.5, 131.1)  | (105.5, 126.1)
  56  | (128.6, 131.1)  | (86.6, 126.1)
  57  | (109.8, 131.1)  | (67.8, 126.1)
  58  | (90.9, 131.1)   | (48.9, 126.1)
  59  | (72.0, 131.1)   | (30.0, 126.1)
  60  | (72.0, 153.3)   | (30.0, 148.3)
  61  | (90.9, 153.3)   | (48.9, 148.3)
  62  | (109.8, 153.3)  | (67.8, 148.3)
  63  | (128.6, 153.3)  | (86.6, 148.3)
  64  | (147.5, 153.3)  | (105.5, 148.3)
  65  | (166.4, 153.3)  | (124.4, 148.3)
  66  | (185.3, 153.3)  | (143.3, 148.3)
  67  | (204.2, 153.3)  | (162.2, 148.3)
  68  | (223.0, 153.3)  | (181.0, 148.3)
  69  | (241.9, 153.3)  | (199.9, 148.3)
  70  | (241.9, 175.5)  | (199.9, 170.5)
  71  | (223.0, 175.5)  | (181.0, 170.5)
  72  | (204.2, 175.5)  | (162.2, 170.5)
  73  | (185.3, 175.5)  | (143.3, 170.5)
  74  | (166.4, 175.5)  | (124.4, 170.5)
  75  | (147.5, 175.5)  | (105.5, 170.5)
  76  | (128.6, 175.5)  | (86.6, 170.5)
  77  | (109.8, 175.5)  | (67.8, 170.5)
  78  | (90.9, 175.5)   | (48.9, 170.5)
  79  | (72.0, 175.5)   | (30.0, 170.5)
  80  | (72.0, 197.8)   | (30.0, 192.8)
  81  | (90.9, 197.8)   | (48.9, 192.8)
  82  | (109.8, 197.8)  | (67.8, 192.8)
  83  | (128.6, 197.8)  | (86.6, 192.8)
  84  | (147.5, 197.8)  | (105.5, 192.8)
  85  | (166.4, 197.8)  | (124.4, 192.8)
  86  | (185.3, 197.8)  | (143.3, 192.8)
  87  | (204.2, 197.8)  | (162.2, 192.8)
  88  | (223.0, 197.8)  | (181.0, 192.8)
  89  | (241.9, 197.8)  | (199.9, 192.8)
  90  | (241.9, 220.0)  | (199.9, 215.0)
  91  | (223.0, 220.0)  | (181.0, 215.0)
  92  | (204.2, 220.0)  | (162.2, 215.0)
  93  | (185.3, 220.0)  | (143.3, 215.0)
  94  | (166.4, 220.0)  | (124.4, 215.0)
  95  | (147.5, 220.0)  | (105.5, 215.0)
  96  | (128.6, 220.0)  | (86.6, 215.0)
  97  | (109.8, 220.0)  | (67.8, 215.0)
  98  | (90.9, 220.0)   | (48.9, 215.0)
  99  | (72.0, 220.0)   | (30.0, 215.0)
Starting heater checks for extruder
webhooks: registering remote method 'shutdown_machine' for connection id: 4128587440
webhooks: registering remote method 'reboot_machine' for connection id: 4128587440
webhooks: registering remote method 'pause_job_queue' for connection id: 4128587440
webhooks: registering remote method 'start_job_queue' for connection id: 4128587440
Starting Klippy...
Args: ['/home/admin/klipper/klippy/klippy.py', '/home/admin/printer_data/config/printer.cfg', '-I', '/home/admin/printer_data/comms/klippy.serial', '-l', '/home/admin/printer_data/logs/klippy.log', '-a', '/home/admin/printer_data/comms/klippy.sock']
Git version: 'v0.12.0-8-g187cc2f1-dirty'
Untracked files: klippy/extras/gcode_shell_command.py
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper
CPU: 2 core Intel(R) Atom(TM) CPU N450   @ 1.66GHz
Python: '3.9.2 (default, Feb 28 2021, 17:03:44) \n[GCC 10.2.1 20210110]'
Start printer at Tue Nov 21 13:29:10 2023 (1700584150.4 320325.3)
===== Config file =====
[gcode_shell_command hello_world]
command = echo hello world
timeout = 2.
verbose = True

[gcode_macro HELLO_WORLD]
gcode = 
	RUN_SHELL_COMMAND CMD=hello_world

[virtual_sdcard]
path = /home/admin/printer_data/gcodes
on_error_gcode = CANCEL_PRINT

[pause_resume]

[display_status]

[respond]

[gcode_macro CANCEL_PRINT]
description = Cancel the actual running print
rename_existing = CANCEL_PRINT_BASE
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set allow_park = client.park_at_cancel|default(false)|lower == 'true' %}
	{% set retract = client.cancel_retract|default(5.0)|abs %}
	
	{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)
	else "X=" ~ client.park_at_cancel_x %}
	{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)
	else "Y=" ~ client.park_at_cancel_y %}
	{% set custom_park = park_x|length > 0 or park_y|length > 0 %}
	
	
	{% if printer['gcode_macro RESUME'].restore_idle_timeout > 0 %}
	SET_IDLE_TIMEOUT TIMEOUT={printer['gcode_macro RESUME'].restore_idle_timeout}
	{% endif %}
	{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}
	_CLIENT_RETRACT LENGTH={retract}
	TURN_OFF_HEATERS
	M106 S0
	{client.user_cancel_macro|default("")}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False
	
	SET_PAUSE_NEXT_LAYER ENABLE=0
	SET_PAUSE_AT_LAYER ENABLE=0 LAYER=0
	CANCEL_PRINT_BASE

[gcode_macro PAUSE]
description = Pause the actual running print
rename_existing = PAUSE_BASE
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set idle_timeout = client.idle_timeout|default(0) %}
	{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != '' else 0 %}
	{% set restore = False if printer.toolhead.extruder == ''
	else True  if params.RESTORE|default(1)|int == 1 else False %}
	
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{'restore': restore, 'temp': temp}}"
	
	{% if idle_timeout > 0 %}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}
	SET_IDLE_TIMEOUT TIMEOUT={idle_timeout}
	{% endif %}
	PAUSE_BASE
	{client.user_pause_macro|default("")}
	_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}

[gcode_macro RESUME]
description = Resume the actual running print
rename_existing = RESUME_BASE
variable_last_extruder_temp = {'restore': False, 'temp': 0}
variable_restore_idle_timeout = 0
variable_idle_state = False
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
	{% set sp_move = client.speed_move|default(velocity) %}
	{% set runout_resume = True if client.runout_sensor|default("") == ""
	else True if not printer[client.runout_sensor].enabled
	else printer[client.runout_sensor].filament_detected %}
	{% set can_extrude = True if printer.toolhead.extruder == ''
	else printer[printer.toolhead.extruder].can_extrude %}
	{% set do_resume = False %}
	
	
	{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False
	{% if last_extruder_temp.restore %}
	
	RESPOND TYPE=echo MSG='{"Restoring \"%s\" temperature to %3.1f\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }'
	M109 S{last_extruder_temp.temp}
	{% set do_resume = True %}
	{% elif can_extrude %}
	{% set do_resume = True %}
	{% else %}
	RESPOND TYPE=error MSG='{"Resume aborted !!! \"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}'
	{% endif %}
	
	{% elif can_extrude %}
	{% set do_resume = True %}
	{% else %}
	RESPOND TYPE=error MSG='{"Resume aborted !!! \"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}'
	{% endif %}
	{% if runout_resume %}
	{% if do_resume %}
	{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}
	{client.user_resume_macro|default("")}
	_CLIENT_EXTRUDE
	RESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}
	{% endif %}
	{% else %}
	RESPOND TYPE=error MSG='{"Resume aborted !!! \"%s\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}'
	{% endif %}

[gcode_macro SET_PAUSE_NEXT_LAYER]
description = Enable a pause if the next layer is reached
gcode = 
	{% set pause_next_layer = printer['gcode_macro SET_PRINT_STATS_INFO'].pause_next_layer %}
	{% set ENABLE = params.ENABLE|default(1)|int != 0 %}
	{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}
	SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ 'enable': ENABLE, 'call': MACRO }}"

[gcode_macro SET_PAUSE_AT_LAYER]
description = Enable/disable a pause if a given layer number is reached
gcode = 
	{% set pause_at_layer = printer['gcode_macro SET_PRINT_STATS_INFO'].pause_at_layer %}
	{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined
	else params.LAYER is defined %}
	{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}
	{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}
	SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ 'enable': ENABLE, 'layer': LAYER, 'call': MACRO }}"

[gcode_macro SET_PRINT_STATS_INFO]
rename_existing = SET_PRINT_STATS_INFO_BASE
description = Overwrite, to get pause_next_layer and pause_at_layer feature
variable_pause_next_layer = { 'enable': False, 'call': "PAUSE" }
variable_pause_at_layer = { 'enable': False, 'layer': 0, 'call': "PAUSE" }
gcode = 
	{% if pause_next_layer.enable %}
	RESPOND TYPE=echo MSG='{"%s, forced by pause_next_layer" % pause_next_layer.call}'
	{pause_next_layer.call}
	SET_PAUSE_NEXT_LAYER ENABLE=0
	{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}
	RESPOND TYPE=echo MSG='{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}'
	{pause_at_layer.call}
	SET_PAUSE_AT_LAYER ENABLE=0
	{% endif %}
	SET_PRINT_STATS_INFO_BASE {rawparams}

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description = Helper: park toolhead used in PAUSE and CANCEL_PRINT
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
	{% set use_custom     = client.use_custom_pos|default(false)|lower == 'true' %}
	{% set custom_park_x  = client.custom_park_x|default(0.0) %}
	{% set custom_park_y  = client.custom_park_y|default(0.0) %}
	{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}
	{% set sp_hop         = client.speed_hop|default(15) * 60 %}
	{% set sp_move        = client.speed_move|default(velocity) * 60 %}
	
	{% set origin    = printer.gcode_move.homing_origin %}
	{% set act       = printer.gcode_move.gcode_position %}
	{% set max       = printer.toolhead.axis_maximum %}
	{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}
	{% set round_bed = True if printer.configfile.settings.printer.kinematics is in ['delta','polar','rotary_delta','winch']
	else False %}
	
	{% set z_min = params.Z_MIN|default(0)|float %}
	{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}
	{% set x_park = params.X       if params.X is defined
	else custom_park_x  if use_custom
	else 0.0            if round_bed
	else (max.x - 5.0) %}
	{% set y_park = params.Y       if params.Y is defined
	else custom_park_y  if use_custom
	else (max.y - 5.0)  if round_bed and z_park < cone
	else 0.0            if round_bed
	else (max.y - 5.0) %}
	
	_CLIENT_RETRACT
	{% if "xyz" in printer.toolhead.homed_axes %}
	G90
	G1 Z{z_park} F{sp_hop}
	G1 X{x_park} Y{y_park} F{sp_move}
	{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}
	{% else %}
	RESPOND TYPE=echo MSG='Printer not homed'
	{% endif %}

[gcode_macro _CLIENT_EXTRUDE]
description = Extrudes, if the extruder is hot enough
gcode = 
	
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == 'true') and (printer.firmware_retraction is defined) %}
	{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}
	{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}
	{% set absolute_extrude = printer.gcode_move.absolute_extrude %}
	
	{% if printer.toolhead.extruder != '' %}
	{% if printer[printer.toolhead.extruder].can_extrude %}
	{% if use_fw_retract %}
	{% if length < 0 %}
	G10
	{% else %}
	G11
	{% endif %}
	{% else %}
	M83
	G1 E{length} F{(speed|float|abs) * 60}
	{% if absolute_extrude %}
	M82
	{% endif %}
	{% endif %}
	{% else %}
	RESPOND TYPE=echo MSG='{"\"%s\" not hot enough" % printer.toolhead.extruder}'
	{% endif %}
	{% endif %}

[gcode_macro _CLIENT_RETRACT]
description = Retracts, if the extruder is hot enough
gcode = 
	{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
	{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}
	{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}
	
	_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}

[gcode_macro BED_MESH_CALIBRATE]
rename_existing = _BED_MESH_CALIBRATE
gcode = 
	
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set bed_mesh_min = printer.configfile.settings.bed_mesh.mesh_min %}
	{% set bed_mesh_max = printer.configfile.settings.bed_mesh.mesh_max %}
	{% set probe_count = printer.configfile.settings.bed_mesh.probe_count %}
	{% set kamp_settings = printer["gcode_macro _KAMP_Settings"] %}
	{% set verbose_enable = kamp_settings.verbose_enable | abs %}
	{% set probe_dock_enable = kamp_settings.probe_dock_enable | abs %}
	{% set attach_macro = kamp_settings.attach_macro | string %}
	{% set detach_macro = kamp_settings.detach_macro | string %}
	{% set mesh_margin = kamp_settings.mesh_margin | float %}
	{% set fuzz_amount = kamp_settings.fuzz_amount | float %}
	{% set probe_count = probe_count if probe_count|length > 1 else probe_count * 2  %}
	{% set max_probe_point_distance_x = ( bed_mesh_max[0] - bed_mesh_min[0] ) / (probe_count[0] - 1)  %}
	{% set max_probe_point_distance_y = ( bed_mesh_max[1] - bed_mesh_min[1] ) / (probe_count[1] - 1)  %}
	{% set x_min = all_points | map(attribute=0) | min | default(bed_mesh_min[0]) %}
	{% set y_min = all_points | map(attribute=1) | min | default(bed_mesh_min[1]) %}
	{% set x_max = all_points | map(attribute=0) | max | default(bed_mesh_max[0]) %}
	{% set y_max = all_points | map(attribute=1) | max | default(bed_mesh_max[1]) %}
	
	{% set fuzz_range = range((0) | int, (fuzz_amount * 100) | int + 1) %}
	{% set adapted_x_min = x_min - mesh_margin - (fuzz_range | random / 100.0) %}
	{% set adapted_y_min = y_min - mesh_margin - (fuzz_range | random / 100.0) %}
	{% set adapted_x_max = x_max + mesh_margin + (fuzz_range | random / 100.0) %}
	{% set adapted_y_max = y_max + mesh_margin + (fuzz_range | random / 100.0) %}
	
	{% set adapted_x_min = [adapted_x_min , bed_mesh_min[0]] | max %}
	{% set adapted_y_min = [adapted_y_min , bed_mesh_min[1]] | max %}
	{% set adapted_x_max = [adapted_x_max , bed_mesh_max[0]] | min %}
	{% set adapted_y_max = [adapted_y_max , bed_mesh_max[1]] | min %}
	
	{% set points_x = (((adapted_x_max - adapted_x_min) / max_probe_point_distance_x) | round(method='ceil') | int) + 1 %}
	{% set points_y = (((adapted_y_max - adapted_y_min) / max_probe_point_distance_y) | round(method='ceil') | int) + 1 %}
	
	{% if (([points_x, points_y]|max) > 6) %}
	{% set algorithm = "bicubic" %}
	{% set min_points = 4 %}
	{% else %}
	{% set algorithm = "lagrange" %}
	{% set min_points = 3 %}
	{% endif %}
	
	{% set points_x = [points_x , min_points]|max %}
	{% set points_y = [points_y , min_points]|max %}
	{% set points_x = [points_x , probe_count[0]]|min %}
	{% set points_y = [points_y , probe_count[1]]|min %}
	
	{% if verbose_enable == True %}
	{% if printer.exclude_object.objects != [] %}
	
	{ action_respond_info( "Algorithm: {}.".format(
	(algorithm),
	)) }
	
	{ action_respond_info("Default probe count: {},{}.".format(
	(probe_count[0]),
	(probe_count[1]),
	)) }
	
	{ action_respond_info("Adapted probe count: {},{}.".format(
	(points_x),
	(points_y),
	)) }
	
	{action_respond_info("Default mesh bounds: {}, {}.".format(
	(bed_mesh_min[0],bed_mesh_min[1]),
	(bed_mesh_max[0],bed_mesh_max[1]),
	)) }
	
	{% if mesh_margin > 0 %}
	{action_respond_info("Mesh margin is {}, mesh bounds extended by {}mm.".format(
	(mesh_margin),
	(mesh_margin),
	)) }
	{% else %}
	{action_respond_info("Mesh margin is 0, margin not increased.")}
	{% endif %}
	
	{% if fuzz_amount > 0 %}
	{action_respond_info("Mesh point fuzzing enabled, points fuzzed up to {}mm.".format(
	(fuzz_amount),
	)) }
	{% else %}
	{action_respond_info("Fuzz amount is 0, mesh points not fuzzed.")}
	{% endif %}
	
	{ action_respond_info("Adapted mesh bounds: {}, {}.".format(
	(adapted_x_min, adapted_y_min),
	(adapted_x_max, adapted_y_max),
	)) }
	
	{action_respond_info("KAMP adjustments successful. Happy KAMPing!")}
	
	{% else %}
	
	{action_respond_info("No objects detected! Check your gcode and make sure that EXCLUDE_OBJECT_DEFINE is happening before BED_MESH_CALIBRATE is called. Defaulting to regular meshing.")}
	G4 P5000
	{% endif %}
	
	{% endif %}
	
	{% if probe_dock_enable == True %}
	{attach_macro}
	{% endif %}
	
	_BED_MESH_CALIBRATE mesh_min={adapted_x_min},{adapted_y_min} mesh_max={adapted_x_max},{adapted_y_max} ALGORITHM={algorithm} PROBE_COUNT={points_x},{points_y}
	
	{% if probe_dock_enable == True %}
	{detach_macro}
	{% endif %}

[gcode_macro LINE_PURGE]
description = A purge macro that adapts to be near your actual printed objects
gcode = 
	
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	{% set cross_section = printer.configfile.settings.extruder.max_extrude_cross_section | float %}
	
	
	{% if printer.firmware_retraction is defined %}
	{% set RETRACT = G10 | string %}
	{% set UNRETRACT = G11 | string %}
	{% else %}
	{% set RETRACT = 'G1 E-.5 F2100' | string %}
	{% set UNRETRACT = 'G1 E.5 F2100' | string %}
	{% endif %}
	
	
	{% set verbose_enable = printer["gcode_macro _KAMP_Settings"].verbose_enable | abs %}
	{% set purge_height = printer["gcode_macro _KAMP_Settings"].purge_height | float %}
	{% set tip_distance = printer["gcode_macro _KAMP_Settings"].tip_distance | float %}
	{% set purge_margin = printer["gcode_macro _KAMP_Settings"].purge_margin | float %}
	{% set purge_amount = printer["gcode_macro _KAMP_Settings"].purge_amount | float %}
	{% set flow_rate = printer["gcode_macro _KAMP_Settings"].flow_rate | float %}
	
	
	
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set purge_x_min = (all_points | map(attribute=0) | min | default(0)) %}
	{% set purge_x_max = (all_points | map(attribute=0) | max | default(0)) %}
	{% set purge_y_min = (all_points | map(attribute=1) | min | default(0)) %}
	{% set purge_y_max = (all_points | map(attribute=1) | max | default(0)) %}
	
	{% set purge_x_center = ([((purge_x_max + purge_x_min) / 2) - (purge_amount / 2), 0] | max) %}
	{% set purge_y_center = ([((purge_y_max + purge_y_min) / 2) - (purge_amount / 2), 0] | max) %}
	
	{% set purge_x_origin = ([purge_x_min - purge_margin, 0] | max) %}
	{% set purge_y_origin = ([purge_y_min - purge_margin, 0] | max) %}
	
	
	{% set purge_move_speed = (flow_rate / 5.0) * 60 | float %}
	
	{% if cross_section < 5 %}
	
	{action_respond_info("[Extruder] max_extrude_cross_section is insufficient for purge, please set it to 5 or greater. Purge skipped.")}
	
	{% else %}
	
	{% if verbose_enable == True %}
	
	{action_respond_info("Moving filament tip {}mms".format(
	(tip_distance),
	)) }
	{% endif %}
	
	{% if printer.firmware_retraction is defined %}
	{action_respond_info("KAMP purge is using firmware retraction.")}
	{% else %}
	{action_respond_info("KAMP purge is not using firmware retraction, it is recommended to configure it.")}
	{% endif %}
	
	{% if purge_y_origin > 0 %}
	
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm/s3.".format(
	(purge_x_center),
	(purge_y_origin),
	(purge_amount),
	(flow_rate),
	)) }
	
	{% else %}
	
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm/s3.".format(
	(purge_x_origin),
	(purge_y_center),
	(purge_amount),
	(flow_rate),
	)) }
	
	{% endif %}
	
	SAVE_GCODE_STATE NAME=Prepurge_State
	
	{% if purge_y_origin > 0 %}
	
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_center} Y{purge_y_origin}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 X{purge_x_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 X{purge_x_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	
	{% else %}
	
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_origin} Y{purge_y_center}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 Y{purge_y_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 Y{purge_y_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	
	{% endif %}
	
	RESTORE_GCODE_STATE NAME=Prepurge_State
	
	{% endif %}

[gcode_macro SMART_PARK]
description = Parks your printhead near the print area for pre-print hotend heating.
gcode = 
	
	{% set kamp_settings = printer["gcode_macro _KAMP_Settings"] %}
	{% set z_height = kamp_settings.smart_park_height | float %}
	{% set purge_margin = kamp_settings.purge_margin | float %}
	{% set verbose_enable = kamp_settings.verbose_enable | abs %}
	{% set center_x = printer.toolhead.axis_maximum.x / 2 | float %}
	{% set center_y = printer.toolhead.axis_maximum.y / 2 | float %}
	{% set axis_minimum_x = printer.toolhead.axis_minimum.x | float %}
	{% set axis_minimum_y = printer.toolhead.axis_minimum.y | float %}
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set x_min = all_points | map(attribute=0) | min | default(center_x) %}
	{% set y_min = all_points | map(attribute=1) | min | default(center_y) %}
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	
	{% if purge_margin > 0 and x_min != center_x and y_min != center_y %}
	{% set x_min = [ x_min - purge_margin , x_min ] | min %}
	{% set y_min = [ y_min - purge_margin , y_min ] | min %}
	{% set x_min = [ x_min , axis_minimum_x ] | max %}
	{% set y_min = [ y_min , axis_minimum_y ] | max %}
	{% endif %}
	
	
	{% if verbose_enable == True %}
	
	{ action_respond_info("Smart Park location: {},{}.".format(
	(x_min),
	(y_min),
	)) }
	
	{% endif %}
	
	{% if printer.toolhead.position.z < z_height %}
	G0 Z{z_height}
	{% endif %}
	G0 X{x_min} Y{y_min} F{travel_speed}
	G0 Z{z_height}

[gcode_macro _KAMP_Settings]
description = This macro contains all adjustable settings for KAMP
variable_verbose_enable = True
variable_mesh_margin = 0
variable_fuzz_amount = 0
variable_probe_dock_enable = False
variable_attach_macro = 'Attach_Probe'
variable_detach_macro = 'Dock_Probe'
variable_purge_height = 0.8
variable_tip_distance = 0
variable_purge_margin = 10
variable_purge_amount = 30
variable_flow_rate = 12
variable_smart_park_height = 10
gcode = 
	
	{action_respond_info(" Running the KAMP_Settings macro does nothing, it is only used for storing KAMP settings. ")}

[mcu]
serial = /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method = command
baud = 115200

[exclude_object]

[stepper_x]
step_pin = PB12
dir_pin = PB10
enable_pin = !PB1
microsteps = 32
rotation_distance = 80
full_steps_per_rotation = 400
endstop_pin = !PA13
position_endstop = 0
position_min = 0
position_max = 235
homing_speed = 40

[stepper_y]
step_pin = PB0
dir_pin = PC5
enable_pin = !PB1
microsteps = 32
rotation_distance = 80
full_steps_per_rotation = 400
endstop_pin = !PB9
position_endstop = 0
position_max = 235
homing_speed = 40

[stepper_z]
step_pin = PA1
dir_pin = !PA0
enable_pin = !PC4
microsteps = 32
rotation_distance = 16
full_steps_per_rotation = 400
endstop_pin = probe:z_virtual_endstop
position_max = 250
position_min = -10
homing_speed = 5

[extruder]
step_pin = !PC3
dir_pin = !PC2
enable_pin = !PB1
microsteps = 32
rotation_distance = 31.38
full_steps_per_rotation = 400
nozzle_diameter = 0.400
filament_diameter = 1.750
heater_pin = PC8
sensor_type = EPCOS 100K B57560G104F
sensor_pin = PC1
min_temp = 0
max_temp = 260
pressure_advance = 0
max_extrude_only_distance = 500.0
control = pid
pid_kp = 19.198
pid_ki = 0.556
pid_kd = 165.579

[heater_bed]
heater_pin = PC9
sensor_type = EPCOS 100K B57560G104F
sensor_pin = PC0
control = pid
pid_kp = 20.7074
pid_ki = 3.5872
pid_kd = 79.6889
min_temp = 5
max_temp = 100

[fan]
pin = PC6

[heater_fan hotend_fan]
pin = PC7
max_power = 1.0
fan_speed = 1
shutdown_speed = 0.0
kick_start_time = 0
heater = extruder
heater_temp = 50.0

[printer]
kinematics = cartesian
max_velocity = 180
max_accel = 2500
max_accel_to_decel = 1250
max_z_velocity = 12
max_z_accel = 50
square_corner_velocity = 2

[bed_mesh]
speed = 100
horizontal_move_z = 20
mesh_min = 30, 15
mesh_max = 200, 215
probe_count = 10, 10
mesh_pps = 2, 2
fade_start = 1
fade_end = 10
fade_target = 0
algorithm = bicubic
bicubic_tension = 0.2
move_check_distance = 3
split_delta_z = .025

[bed_screws]
screw1 = 17, 20
screw2 = 217, 20
screw3 = 17, 220
screw4 = 217, 220

[filament_switch_sensor my_sensor]
pause_on_runout = True
runout_gcode = [pause_resume]
event_delay = 3.0
pause_delay = 0.5
switch_pin = PC14

[firmware_retraction]
retract_length = 2.2
retract_speed = 60

[idle_timeout]
gcode = 
	TURN_OFF_HEATERS
	M84
timeout = 28800

[bltouch]
sensor_pin = !PC13
control_pin = PA8
x_offset = -42
y_offset = -5
pin_up_touch_mode_reports_triggered = False
stow_on_each_sample = False
pin_up_reports_not_triggered = False
probe_with_touch_mode = True
pin_move_time = 0.4
speed = 20
z_offset = 0.590

[safe_z_home]
home_xy_position = 115, 115
speed = 50
z_hop = 5
z_hop_speed = 5

[gcode_macro update_git]
gcode = 
	RUN_SHELL_COMMAND CMD=update_git_script

[gcode_shell_command update_git_script]
command = bash /home/admin/klipper-backup/script.sh
timeout = 90.0
verbose = True

[gcode_macro START_PRINT]
gcode = 
	{% set BED_TEMP = params.BED_TEMP|default(60)|float %}
	{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
	
	M140 S{BED_TEMP}
	
	G90
	
	SET_GCODE_OFFSET Z=0.0
	
	G28
	
	BED_MESH_CALIBRATE
	
	G1 Z5 F3000
	
	G1 Z0.15 F300
	
	M190 S{BED_TEMP}
	
	M109 S{EXTRUDER_TEMP}
	
	SMART_PARK
	
	LINE_PURGE

[gcode_macro END_PRINT]
gcode = 
	
	M140 S0
	M104 S0
	M106 S0
	
	G91
	G1 X-2 Y-2 E-3 F300
	
	G1 Z10 F3000
	G90
	
	M84

[gcode_macro M300]
gcode = 
	
	{% set S = params.S|default(1000)|int %}
	
	{% set P = params.P|default(100)|int %}
	SET_PIN PIN=BEEPER_pin VALUE=0.5 CYCLE_TIME={ 1.0/S if S > 0 else 1 }
	G4 P{P}
	SET_PIN PIN=BEEPER_pin VALUE=0

[gcode_macro M600]
gcode = 
	{% set X = params.X|default(50)|float %}
	{% set Y = params.Y|default(0)|float %}
	{% set Z = params.Z|default(10)|float %}
	SAVE_GCODE_STATE NAME=M600_state
	PAUSE
	G91
	G1 E-.8 F2700
	G1 Z{Z}
	G90
	G1 X{X} Y{Y} F3000
	G91
	G1 E-50 F1000
	RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro QUERY_BME280]
gcode = 
	{% set sensor = printer["bme280 my_sensor"] %}
	{action_respond_info(
	"Temperature: %.2f C\n"
	"Pressure: %.2f hPa\n"
	"Humidity: %.2f%%" % (
	sensor.temperature,
	sensor.pressure,
	sensor.humidity))}

[gcode_macro QUERY_HTU21D]
gcode = 
	{% set sensor = printer["htu21d my_sensor"] %}
	{action_respond_info(
	"Temperature: %.2f C\n"
	"Humidity: %.2f%%" % (
	sensor.temperature,
	sensor.humidity))}

[gcode_macro M117]
rename_existing = M117.1
gcode = 
	{% if rawparams %}
	{% set escaped_msg = rawparams.split(';', 1)[0].split('\x23', 1)[0]|replace('"', '\\"') %}
	SET_DISPLAY_TEXT MSG="{escaped_msg}"
	RESPOND TYPE=command MSG="{escaped_msg}"
	{% else %}
	SET_DISPLAY_TEXT
	{% endif %}

[sdcard_loop]

[gcode_macro M808]
gcode = 
	{% if params.K is not defined and params.L is defined %}SDCARD_LOOP_BEGIN COUNT={params.L|int}{% endif %}
	{% if params.K is not defined and params.L is not defined %}SDCARD_LOOP_END{% endif %}
	{% if params.K is defined and params.L is not defined %}SDCARD_LOOP_DESIST{% endif %}

[gcode_macro M486]
gcode = 
	
	
	
	
	
	
	
	
	
	
	
	{% if 'exclude_object' not in printer %}
	{action_raise_error("[exclude_object] is not enabled")}
	{% endif %}
	
	{% if 'T' in params %}
	EXCLUDE_OBJECT RESET=1
	
	{% for i in range(params.T | int) %}
	EXCLUDE_OBJECT_DEFINE NAME={i}
	{% endfor %}
	{% endif %}
	
	{% if 'C' in params %}
	EXCLUDE_OBJECT CURRENT=1
	{% endif %}
	
	{% if 'P' in params %}
	EXCLUDE_OBJECT NAME={params.P}
	{% endif %}
	
	{% if 'S' in params %}
	{% if params.S == '-1' %}
	{% if printer.exclude_object.current_object %}
	EXCLUDE_OBJECT_END NAME={printer.exclude_object.current_object}
	{% endif %}
	{% else %}
	EXCLUDE_OBJECT_START NAME={params.S}
	{% endif %}
	{% endif %}
	
	{% if 'U' in params %}
	EXCLUDE_OBJECT RESET=1 NAME={params.U}
	{% endif %}

[gcode_macro G130]
gcode = 
	M400
	{% if ('X' in params) and ('mcp4018 x_axis_pot' in printer.configfile.config) %}
	{% set x_value = params['X']|float %}
	{% set x_axis_pot_scale = printer.configfile.config["mcp4018 x_axis_pot"].scale|float %}
	SET_DIGIPOT DIGIPOT=x_axis_pot WIPER={ x_axis_pot_scale * (x_value / 127.0)}
	{% endif %}
	{% if ('Y' in params) and ('mcp4018 y_axis_pot' in printer.configfile.config) %}
	{% set y_value = params['Y']|float %}
	{% set y_axis_pot_scale = printer.configfile.config["mcp4018 y_axis_pot"].scale|float %}
	SET_DIGIPOT DIGIPOT=y_axis_pot WIPER={ y_axis_pot_scale * (y_value / 127.0)}
	{% endif %}
	{% if ('Z' in params) and ('mcp4018 z_axis_pot' in printer.configfile.config) %}
	{% set z_value = params['Z']|float %}
	{% set z_axis_pot_scale = printer.configfile.config["mcp4018 z_axis_pot"].scale|float %}
	SET_DIGIPOT DIGIPOT=z_axis_pot WIPER={ z_axis_pot_scale * (z_value / 127.0)}
	{% endif %}
	{% if ('A' in params) and ('mcp4018 a_axis_pot' in printer.configfile.config) %}
	{% set a_value = params['A']|float %}
	{% set a_axis_pot_scale = printer.configfile.config["mcp4018 a_axis_pot"].scale|float %}
	SET_DIGIPOT DIGIPOT=a_axis_pot WIPER={ a_axis_pot_scale * (a_value / 127.0)}
	{% endif %}
	{% if ('B' in params) and ('mcp4018 b_axis_pot' in printer.configfile.config) %}
	{% set b_value = params['B']|float %}
	{% set b_axis_pot_scale = printer.configfile.config["mcp4018 b_axis_pot"].scale|float %}
	SET_DIGIPOT DIGIPOT=b_axis_pot WIPER={ b_axis_pot_scale * (b_value / 127.0)}
	{% endif %}

[gcode_macro G29]
gcode = 
	BED_MESH_CLEAR
	BED_MESH_CALIBRATE
	BED_MESH_PROFILE SAVE=default
	BED_MESH_PROFILE LOAD=default

[bed_mesh default]
version = 1
points = 
	-0.002500, 0.013750, 0.021250
	0.013750, 0.022500, 0.025000
	0.012500, 0.022500, 0.028750
x_count = 3
y_count = 3
mesh_x_pps = 2
mesh_y_pps = 2
algo = lagrange
tension = 0.2
min_x = 102.69999999999999
max_x = 127.28
min_y = 102.7
max_y = 127.28
=======================
Extruder max_extrude_ratio=0.266081
mcu 'mcu': Starting serial connect
webhooks client 4128579248: New connection
webhooks client 4128579248: Client info {'program': 'Moonraker', 'version': 'v0.8.0-202-gdddd968'}
mcu 'mcu': got {'oid': 18, 'next_clock': 3564743168, 'value': 31310, '#name': 'analog_in_state', '#sent_time': 320327.81698142935, '#receive_time': 320327.86124279466}
mcu 'mcu': got {'oid': 10, 'next_clock': 3580583168, 'value': 31292, '#name': 'analog_in_state', '#sent_time': 320328.03431632934, '#receive_time': 320328.08122405066}
mcu 'mcu': got {'oid': 18, 'next_clock': 3586343168, 'value': 31294, '#name': 'analog_in_state', '#sent_time': 320328.1423121854, '#receive_time': 320328.16124965966}
Loaded MCU 'mcu' 107 commands (v0.11.0-257-ged66982b / gcc: (15:8-2019-q3-1+b1) 8.3.1 20190703 (release) [gcc-8-branch revision 273027] binutils: (2.35.2-2+14+b2) 2.35.2)
MCU 'mcu' config: ADC_MAX=4095 BUS_PINS_i2c1=PB6,PB7 BUS_PINS_i2c1a=PB8,PB9 BUS_PINS_i2c2=PB10,PB11 BUS_PINS_spi1=PA6,PA7,PA5 BUS_PINS_spi1a=PB4,PB5,PB3 BUS_PINS_spi2=PB14,PB15,PB13 BUS_PINS_spi3=PB4,PB5,PB3 CLOCK_FREQ=72000000 INITIAL_PINS=!PC6,!PD13 MCU=stm32f103xe PWM_MAX=255 RECEIVE_WINDOW=192 RESERVE_PINS_serial=PA10,PA9 SERIAL_BAUD=115200 STATS_SUMSQ_BASE=256 STEPPER_BOTH_EDGE=1
Configured MCU 'mcu' (1024 moves)
Starting heater checks for heater_bed
bed_mesh: generated points
Index |  Tool Adjusted  |   Probe
  0   | (72.0, 20.0)    | (30.0, 15.0)
  1   | (90.9, 20.0)    | (48.9, 15.0)
  2   | (109.8, 20.0)   | (67.8, 15.0)
  3   | (128.6, 20.0)   | (86.6, 15.0)
  4   | (147.5, 20.0)   | (105.5, 15.0)
  5   | (166.4, 20.0)   | (124.4, 15.0)
  6   | (185.3, 20.0)   | (143.3, 15.0)
  7   | (204.2, 20.0)   | (162.2, 15.0)
  8   | (223.0, 20.0)   | (181.0, 15.0)
  9   | (241.9, 20.0)   | (199.9, 15.0)
  10  | (241.9, 42.2)   | (199.9, 37.2)
  11  | (223.0, 42.2)   | (181.0, 37.2)
  12  | (204.2, 42.2)   | (162.2, 37.2)
  13  | (185.3, 42.2)   | (143.3, 37.2)
  14  | (166.4, 42.2)   | (124.4, 37.2)
  15  | (147.5, 42.2)   | (105.5, 37.2)
  16  | (128.6, 42.2)   | (86.6, 37.2)
  17  | (109.8, 42.2)   | (67.8, 37.2)
  18  | (90.9, 42.2)    | (48.9, 37.2)
  19  | (72.0, 42.2)    | (30.0, 37.2)
  20  | (72.0, 64.4)    | (30.0, 59.4)
  21  | (90.9, 64.4)    | (48.9, 59.4)
  22  | (109.8, 64.4)   | (67.8, 59.4)
  23  | (128.6, 64.4)   | (86.6, 59.4)
  24  | (147.5, 64.4)   | (105.5, 59.4)
  25  | (166.4, 64.4)   | (124.4, 59.4)
  26  | (185.3, 64.4)   | (143.3, 59.4)
  27  | (204.2, 64.4)   | (162.2, 59.4)
  28  | (223.0, 64.4)   | (181.0, 59.4)
  29  | (241.9, 64.4)   | (199.9, 59.4)
  30  | (241.9, 86.7)   | (199.9, 81.7)
  31  | (223.0, 86.7)   | (181.0, 81.7)
  32  | (204.2, 86.7)   | (162.2, 81.7)
  33  | (185.3, 86.7)   | (143.3, 81.7)
  34  | (166.4, 86.7)   | (124.4, 81.7)
  35  | (147.5, 86.7)   | (105.5, 81.7)
  36  | (128.6, 86.7)   | (86.6, 81.7)
  37  | (109.8, 86.7)   | (67.8, 81.7)
  38  | (90.9, 86.7)    | (48.9, 81.7)
  39  | (72.0, 86.7)    | (30.0, 81.7)
  40  | (72.0, 108.9)   | (30.0, 103.9)
  41  | (90.9, 108.9)   | (48.9, 103.9)
  42  | (109.8, 108.9)  | (67.8, 103.9)
  43  | (128.6, 108.9)  | (86.6, 103.9)
  44  | (147.5, 108.9)  | (105.5, 103.9)
  45  | (166.4, 108.9)  | (124.4, 103.9)
  46  | (185.3, 108.9)  | (143.3, 103.9)
  47  | (204.2, 108.9)  | (162.2, 103.9)
  48  | (223.0, 108.9)  | (181.0, 103.9)
  49  | (241.9, 108.9)  | (199.9, 103.9)
  50  | (241.9, 131.1)  | (199.9, 126.1)
  51  | (223.0, 131.1)  | (181.0, 126.1)
  52  | (204.2, 131.1)  | (162.2, 126.1)
  53  | (185.3, 131.1)  | (143.3, 126.1)
  54  | (166.4, 131.1)  | (124.4, 126.1)
  55  | (147.5, 131.1)  | (105.5, 126.1)
  56  | (128.6, 131.1)  | (86.6, 126.1)
  57  | (109.8, 131.1)  | (67.8, 126.1)
  58  | (90.9, 131.1)   | (48.9, 126.1)
  59  | (72.0, 131.1)   | (30.0, 126.1)
  60  | (72.0, 153.3)   | (30.0, 148.3)
  61  | (90.9, 153.3)   | (48.9, 148.3)
  62  | (109.8, 153.3)  | (67.8, 148.3)
  63  | (128.6, 153.3)  | (86.6, 148.3)
  64  | (147.5, 153.3)  | (105.5, 148.3)
  65  | (166.4, 153.3)  | (124.4, 148.3)
  66  | (185.3, 153.3)  | (143.3, 148.3)
  67  | (204.2, 153.3)  | (162.2, 148.3)
  68  | (223.0, 153.3)  | (181.0, 148.3)
  69  | (241.9, 153.3)  | (199.9, 148.3)
  70  | (241.9, 175.5)  | (199.9, 170.5)
  71  | (223.0, 175.5)  | (181.0, 170.5)
  72  | (204.2, 175.5)  | (162.2, 170.5)
  73  | (185.3, 175.5)  | (143.3, 170.5)
  74  | (166.4, 175.5)  | (124.4, 170.5)
  75  | (147.5, 175.5)  | (105.5, 170.5)
  76  | (128.6, 175.5)  | (86.6, 170.5)
  77  | (109.8, 175.5)  | (67.8, 170.5)
  78  | (90.9, 175.5)   | (48.9, 170.5)
  79  | (72.0, 175.5)   | (30.0, 170.5)
  80  | (72.0, 197.8)   | (30.0, 192.8)
  81  | (90.9, 197.8)   | (48.9, 192.8)
  82  | (109.8, 197.8)  | (67.8, 192.8)
  83  | (128.6, 197.8)  | (86.6, 192.8)
  84  | (147.5, 197.8)  | (105.5, 192.8)
  85  | (166.4, 197.8)  | (124.4, 192.8)
  86  | (185.3, 197.8)  | (143.3, 192.8)
  87  | (204.2, 197.8)  | (162.2, 192.8)
  88  | (223.0, 197.8)  | (181.0, 192.8)
  89  | (241.9, 197.8)  | (199.9, 192.8)
  90  | (241.9, 220.0)  | (199.9, 215.0)
  91  | (223.0, 220.0)  | (181.0, 215.0)
  92  | (204.2, 220.0)  | (162.2, 215.0)
  93  | (185.3, 220.0)  | (143.3, 215.0)
  94  | (166.4, 220.0)  | (124.4, 215.0)
  95  | (147.5, 220.0)  | (105.5, 215.0)
  96  | (128.6, 220.0)  | (86.6, 215.0)
  97  | (109.8, 220.0)  | (67.8, 215.0)
  98  | (90.9, 220.0)   | (48.9, 215.0)
  99  | (72.0, 220.0)   | (30.0, 215.0)
Starting heater checks for extruder
webhooks: registering remote method 'shutdown_machine' for connection id: 4128579248
webhooks: registering remote method 'reboot_machine' for connection id: 4128579248
webhooks: registering remote method 'pause_job_queue' for connection id: 4128579248
webhooks: registering remote method 'start_job_queue' for connection id: 4128579248
webhooks client 4128579248: Disconnected
webhooks client 4134304904: New connection
webhooks client 4134304904: Client info {'program': 'Moonraker', 'version': 'v0.8.0-202-gdddd968'}
webhooks: registering remote method 'shutdown_machine' for connection id: 4134304904
webhooks: registering remote method 'reboot_machine' for connection id: 4134304904
webhooks: registering remote method 'pause_job_queue' for connection id: 4134304904
webhooks: registering remote method 'start_job_queue' for connection id: 4134304904
Must home axis first: 0.000 0.000 1.000 [0.000]
Stats 321130.0: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000008 bytes_write=6192 bytes_read=99072 bytes_retransmit=9 bytes_invalid=0 send_seq=929 receive_seq=929 retransmit_seq=5 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004717  heater_bed: target=0 temp=24.9 pwm=0.000 sysload=1.01 cputime=12.538 memavail=1450180 print_time=71957.432 buffer_time=0.000 print_stall=0 extruder: target=0 temp=25.1 pwm=0.000
Stats 321131.0: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000008 bytes_write=6480 bytes_read=99357 bytes_retransmit=9 bytes_invalid=0 send_seq=949 receive_seq=949 retransmit_seq=5 srtt=0.001 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004716  heater_bed: target=0 temp=24.9 pwm=0.000 sysload=1.01 cputime=12.573 memavail=1450084 print_time=71958.132 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.9 pwm=0.000
Stats 321132.0: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000008 bytes_write=6841 bytes_read=99763 bytes_retransmit=9 bytes_invalid=0 send_seq=979 receive_seq=979 retransmit_seq=5 srtt=0.001 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004719  heater_bed: target=0 temp=25.3 pwm=0.000 sysload=1.25 cputime=12.612 memavail=1450084 print_time=71959.132 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.8 pwm=0.000
Stats 321133.0: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000008 bytes_write=7192 bytes_read=100159 bytes_retransmit=9 bytes_invalid=0 send_seq=1007 receive_seq=1007 retransmit_seq=5 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004718  heater_bed: target=0 temp=26.4 pwm=0.000 sysload=1.25 cputime=12.652 memavail=1449876 print_time=71960.132 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.6 pwm=0.000
Stats 321134.0: gcodein=0  mcu: mcu_awake=0.004 mcu_task_avg=0.000017 mcu_task_stddev=0.000010 bytes_write=7676 bytes_read=100567 bytes_retransmit=9 bytes_invalid=0 send_seq=1037 receive_seq=1037 retransmit_seq=5 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004717  heater_bed: target=0 temp=25.1 pwm=0.000 sysload=1.25 cputime=12.698 memavail=1449976 print_time=71961.128 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.9 pwm=0.000
Stats 321135.0: gcodein=0  mcu: mcu_awake=0.004 mcu_task_avg=0.000017 mcu_task_stddev=0.000010 bytes_write=8135 bytes_read=101023 bytes_retransmit=9 bytes_invalid=0 send_seq=1071 receive_seq=1071 retransmit_seq=5 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004716  heater_bed: target=0 temp=24.9 pwm=0.000 sysload=1.25 cputime=12.746 memavail=1449976 print_time=71962.150 buffer_time=0.000 print_stall=0 extruder: target=0 temp=25.0 pwm=0.000
Stats 321136.0: gcodein=0  mcu: mcu_awake=0.004 mcu_task_avg=0.000017 mcu_task_stddev=0.000010 bytes_write=8496 bytes_read=101429 bytes_retransmit=9 bytes_invalid=0 send_seq=1101 receive_seq=1101 retransmit_seq=5 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004716  heater_bed: target=0 temp=24.9 pwm=0.000 sysload=1.25 cputime=12.783 memavail=1450008 print_time=71963.150 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.9 pwm=0.000
Stats 321137.0: gcodein=0  mcu: mcu_awake=0.004 mcu_task_avg=0.000017 mcu_task_stddev=0.000010 bytes_write=8862 bytes_read=101825 bytes_retransmit=9 bytes_invalid=0 send_seq=1132 receive_seq=1132 retransmit_seq=5 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004715  heater_bed: target=0 temp=24.9 pwm=0.000 sysload=1.15 cputime=12.820 memavail=1450008 print_time=71964.150 buffer_time=0.000 print_stall=0 extruder: target=0 temp=25.0 pwm=0.000
Stats 321138.0: gcodein=0  mcu: mcu_awake=0.004 mcu_task_avg=0.000017 mcu_task_stddev=0.000010 bytes_write=9635 bytes_read=102288 bytes_retransmit=9 bytes_invalid=0 send_seq=1167 receive_seq=1167 retransmit_seq=5 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=36 upcoming_bytes=26 freq=72004721  heater_bed: target=0 temp=25.2 pwm=0.000 sysload=1.15 cputime=12.887 memavail=1449916 print_time=71968.940 buffer_time=3.963 print_stall=0 extruder: target=0 temp=24.9 pwm=0.000
Stats 321139.0: gcodein=0  mcu: mcu_awake=0.005 mcu_task_avg=0.000018 mcu_task_stddev=0.000010 bytes_write=9677 bytes_read=102424 bytes_retransmit=9 bytes_invalid=0 send_seq=1168 receive_seq=1168 retransmit_seq=5 srtt=0.002 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=26 freq=72004721  heater_bed: target=0 temp=25.3 pwm=0.000 sysload=1.15 cputime=12.903 memavail=1450012 print_time=71968.940 buffer_time=2.962 print_stall=0 extruder: target=0 temp=24.4 pwm=0.000
Stats 321140.0: gcodein=0  mcu: mcu_awake=0.005 mcu_task_avg=0.000018 mcu_task_stddev=0.000010 bytes_write=9683 bytes_read=102530 bytes_retransmit=9 bytes_invalid=0 send_seq=1169 receive_seq=1169 retransmit_seq=5 srtt=0.002 rttvar=0.001 rto=0.025 ready_bytes=38 upcoming_bytes=26 freq=72004720  heater_bed: target=0 temp=25.3 pwm=0.000 sysload=1.15 cputime=12.921 memavail=1449244 print_time=71968.942 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.7 pwm=0.000
Stats 321141.0: gcodein=0  mcu: mcu_awake=0.005 mcu_task_avg=0.000018 mcu_task_stddev=0.000010 bytes_write=9727 bytes_read=102651 bytes_retransmit=9 bytes_invalid=0 send_seq=1170 receive_seq=1170 retransmit_seq=5 srtt=0.002 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=26 freq=72004719  heater_bed: target=0 temp=25.1 pwm=0.000 sysload=1.15 cputime=12.937 memavail=1449236 print_time=71968.942 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.9 pwm=0.000
Stats 321142.0: gcodein=0  mcu: mcu_awake=0.005 mcu_task_avg=0.000018 mcu_task_stddev=0.000010 bytes_write=9909 bytes_read=102826 bytes_retransmit=9 bytes_invalid=0 send_seq=1179 receive_seq=1179 retransmit_seq=5 srtt=0.002 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004718  heater_bed: target=0 temp=25.2 pwm=0.000 sysload=1.30 cputime=12.957 memavail=1449140 print_time=71969.142 buffer_time=0.000 print_stall=0 extruder: target=0 temp=25.1 pwm=0.000
Stats 321143.0: gcodein=0  mcu: mcu_awake=0.005 mcu_task_avg=0.000018 mcu_task_stddev=0.000010 bytes_write=10285 bytes_read=103212 bytes_retransmit=9 bytes_invalid=0 send_seq=1208 receive_seq=1208 retransmit_seq=5 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004718  heater_bed: target=0 temp=25.1 pwm=0.000 sysload=1.30 cputime=12.997 memavail=1449100 print_time=71970.142 buffer_time=0.000 print_stall=0 extruder: target=0 temp=25.1 pwm=0.000
Stats 321144.0: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000015 mcu_task_stddev=0.000009 bytes_write=10920 bytes_read=103710 bytes_retransmit=9 bytes_invalid=0 send_seq=1245 receive_seq=1245 retransmit_seq=5 srtt=0.002 rttvar=0.001 rto=0.025 ready_bytes=23 upcoming_bytes=0 freq=72004717  heater_bed: target=0 temp=25.1 pwm=0.000 sysload=1.30 cputime=13.055 memavail=1449604 print_time=71972.243 buffer_time=0.000 print_stall=0 extruder: target=0 temp=25.0 pwm=0.000
Stats 321145.0: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000015 mcu_task_stddev=0.000009 bytes_write=10949 bytes_read=103831 bytes_retransmit=9 bytes_invalid=0 send_seq=1246 receive_seq=1246 retransmit_seq=5 srtt=0.002 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004717  heater_bed: target=0 temp=25.2 pwm=0.000 sysload=1.30 cputime=13.071 memavail=1447556 print_time=71972.243 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.8 pwm=0.000
Stats 321146.0: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000015 mcu_task_stddev=0.000009 bytes_write=11315 bytes_read=104164 bytes_retransmit=9 bytes_invalid=0 send_seq=1270 receive_seq=1270 retransmit_seq=5 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004716  heater_bed: target=0 temp=25.4 pwm=0.000 sysload=1.30 cputime=13.105 memavail=1447676 print_time=71973.143 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.7 pwm=0.000
Stats 321147.0: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000015 mcu_task_stddev=0.000009 bytes_write=11696 bytes_read=104570 bytes_retransmit=9 bytes_invalid=0 send_seq=1300 receive_seq=1300 retransmit_seq=5 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004715  heater_bed: target=0 temp=25.1 pwm=0.000 sysload=1.27 cputime=13.142 memavail=1447796 print_time=71974.143 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.9 pwm=0.000
Stats 321148.0: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000015 mcu_task_stddev=0.000009 bytes_write=12145 bytes_read=104900 bytes_retransmit=9 bytes_invalid=0 send_seq=1323 receive_seq=1323 retransmit_seq=5 srtt=0.002 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004720  heater_bed: target=0 temp=24.9 pwm=0.000 sysload=1.27 cputime=13.186 memavail=1447708 print_time=71976.125 buffer_time=1.137 print_stall=0 extruder: target=0 temp=25.1 pwm=0.000
Stats 321149.0: gcodein=0  mcu: mcu_awake=0.003 mcu_task_avg=0.000016 mcu_task_stddev=0.000010 bytes_write=12151 bytes_read=105020 bytes_retransmit=9 bytes_invalid=0 send_seq=1324 receive_seq=1324 retransmit_seq=5 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004723  heater_bed: target=0 temp=24.9 pwm=0.000 sysload=1.27 cputime=13.202 memavail=1447612 print_time=71976.125 buffer_time=0.135 print_stall=0 extruder: target=0 temp=24.8 pwm=0.000
Stats 321150.0: gcodein=0  mcu: mcu_awake=0.003 mcu_task_avg=0.000016 mcu_task_stddev=0.000010 bytes_write=12157 bytes_read=105156 bytes_retransmit=9 bytes_invalid=0 send_seq=1325 receive_seq=1325 retransmit_seq=5 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004722  heater_bed: target=0 temp=25.3 pwm=0.000 sysload=1.27 cputime=13.220 memavail=1447864 print_time=71976.125 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.9 pwm=0.000
Stats 321151.0: gcodein=0  mcu: mcu_awake=0.003 mcu_task_avg=0.000016 mcu_task_stddev=0.000010 bytes_write=12163 bytes_read=105262 bytes_retransmit=9 bytes_invalid=0 send_seq=1326 receive_seq=1326 retransmit_seq=5 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004722  heater_bed: target=0 temp=25.2 pwm=0.000 sysload=1.27 cputime=13.233 memavail=1447864 print_time=71976.125 buffer_time=0.000 print_stall=0 extruder: target=0 temp=25.0 pwm=0.000
Stats 321152.0: gcodein=0  mcu: mcu_awake=0.003 mcu_task_avg=0.000016 mcu_task_stddev=0.000010 bytes_write=12169 bytes_read=105368 bytes_retransmit=9 bytes_invalid=0 send_seq=1327 receive_seq=1327 retransmit_seq=5 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004721  heater_bed: target=0 temp=25.3 pwm=0.000 sysload=1.25 cputime=13.248 memavail=1447864 print_time=71976.125 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.8 pwm=0.000
Stats 321153.0: gcodein=0  mcu: mcu_awake=0.003 mcu_task_avg=0.000016 mcu_task_stddev=0.000010 bytes_write=12412 bytes_read=105519 bytes_retransmit=9 bytes_invalid=0 send_seq=1331 receive_seq=1331 retransmit_seq=5 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004722  heater_bed: target=0 temp=25.1 pwm=0.000 sysload=1.25 cputime=13.267 memavail=1447396 print_time=71980.000 buffer_time=0.006 print_stall=0 extruder: target=0 temp=24.7 pwm=0.000
Stats 321154.0: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000012 mcu_task_stddev=0.000011 bytes_write=12418 bytes_read=105638 bytes_retransmit=9 bytes_invalid=0 send_seq=1332 receive_seq=1332 retransmit_seq=5 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004721  heater_bed: target=0 temp=25.0 pwm=0.000 sysload=1.25 cputime=13.281 memavail=1447076 print_time=71980.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.7 pwm=0.000
Stats 321155.0: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000012 mcu_task_stddev=0.000011 bytes_write=12424 bytes_read=105744 bytes_retransmit=9 bytes_invalid=0 send_seq=1333 receive_seq=1333 retransmit_seq=5 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004724  heater_bed: target=0 temp=25.1 pwm=0.000 sysload=1.25 cputime=13.299 memavail=1446812 print_time=71980.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.8 pwm=0.000
Stats 321156.0: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000012 mcu_task_stddev=0.000011 bytes_write=12430 bytes_read=105880 bytes_retransmit=9 bytes_invalid=0 send_seq=1334 receive_seq=1334 retransmit_seq=5 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004723  heater_bed: target=0 temp=25.3 pwm=0.000 sysload=1.25 cputime=13.315 memavail=1446700 print_time=71980.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=25.1 pwm=0.000
Stats 321157.0: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000012 mcu_task_stddev=0.000011 bytes_write=12436 bytes_read=105986 bytes_retransmit=9 bytes_invalid=0 send_seq=1335 receive_seq=1335 retransmit_seq=5 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004722  heater_bed: target=0 temp=25.3 pwm=0.000 sysload=1.15 cputime=13.328 memavail=1445292 print_time=71980.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=25.1 pwm=0.000
Stats 321158.0: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000012 mcu_task_stddev=0.000011 bytes_write=12442 bytes_read=106092 bytes_retransmit=9 bytes_invalid=0 send_seq=1336 receive_seq=1336 retransmit_seq=5 srtt=0.002 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004722  heater_bed: target=0 temp=25.4 pwm=0.000 sysload=1.15 cputime=13.342 memavail=1445276 print_time=71980.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=25.1 pwm=0.000
Stats 321159.0: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000007 bytes_write=12448 bytes_read=106241 bytes_retransmit=9 bytes_invalid=0 send_seq=1337 receive_seq=1337 retransmit_seq=5 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004721  heater_bed: target=0 temp=25.1 pwm=0.000 sysload=1.15 cputime=13.358 memavail=1445404 print_time=71980.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.7 pwm=0.000
Stats 321160.0: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000007 bytes_write=12454 bytes_read=106347 bytes_retransmit=9 bytes_invalid=0 send_seq=1338 receive_seq=1338 retransmit_seq=5 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004720  heater_bed: target=0 temp=25.0 pwm=0.000 sysload=1.15 cputime=13.371 memavail=1445436 print_time=71980.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.7 pwm=0.000
Stats 321161.0: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000007 bytes_write=12460 bytes_read=106453 bytes_retransmit=9 bytes_invalid=0 send_seq=1339 receive_seq=1339 retransmit_seq=5 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004720  heater_bed: target=0 temp=25.0 pwm=0.000 sysload=1.15 cputime=13.387 memavail=1445404 print_time=71980.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.6 pwm=0.000
Stats 321162.0: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000007 bytes_write=12466 bytes_read=106589 bytes_retransmit=9 bytes_invalid=0 send_seq=1340 receive_seq=1340 retransmit_seq=5 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004720  heater_bed: target=0 temp=25.3 pwm=0.000 sysload=1.06 cputime=13.403 memavail=1445340 print_time=71980.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=25.0 pwm=0.000
Stats 321163.0: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000007 bytes_write=12472 bytes_read=106695 bytes_retransmit=9 bytes_invalid=0 send_seq=1341 receive_seq=1341 retransmit_seq=5 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004720  heater_bed: target=0 temp=25.3 pwm=0.000 sysload=1.06 cputime=13.418 memavail=1445192 print_time=71980.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.9 pwm=0.000
Stats 321164.0: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000008 bytes_write=12478 bytes_read=106814 bytes_retransmit=9 bytes_invalid=0 send_seq=1342 receive_seq=1342 retransmit_seq=5 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004719  heater_bed: target=0 temp=25.1 pwm=0.000 sysload=1.06 cputime=13.431 memavail=1445128 print_time=71980.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.9 pwm=0.000
Stats 321165.0: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000008 bytes_write=12484 bytes_read=106950 bytes_retransmit=9 bytes_invalid=0 send_seq=1343 receive_seq=1343 retransmit_seq=5 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004719  heater_bed: target=0 temp=25.1 pwm=0.000 sysload=1.06 cputime=13.446 memavail=1445152 print_time=71980.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.5 pwm=0.000
Stats 321166.0: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000008 bytes_write=12490 bytes_read=107056 bytes_retransmit=9 bytes_invalid=0 send_seq=1344 receive_seq=1344 retransmit_seq=5 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004718  heater_bed: target=0 temp=25.0 pwm=0.000 sysload=1.06 cputime=13.459 memavail=1445152 print_time=71980.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.7 pwm=0.000
Stats 321167.0: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000008 bytes_write=12496 bytes_read=107162 bytes_retransmit=9 bytes_invalid=0 send_seq=1345 receive_seq=1345 retransmit_seq=5 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004717  heater_bed: target=0 temp=25.1 pwm=0.000 sysload=0.97 cputime=13.473 memavail=1445152 print_time=71980.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.7 pwm=0.000
Stats 321168.0: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000008 bytes_write=12502 bytes_read=107298 bytes_retransmit=9 bytes_invalid=0 send_seq=1346 receive_seq=1346 retransmit_seq=5 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004716  heater_bed: target=0 temp=25.2 pwm=0.000 sysload=0.97 cputime=13.491 memavail=1445188 print_time=71980.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=25.0 pwm=0.000
Stats 321169.0: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000008 bytes_write=12508 bytes_read=107404 bytes_retransmit=9 bytes_invalid=0 send_seq=1347 receive_seq=1347 retransmit_seq=5 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004717  heater_bed: target=0 temp=25.2 pwm=0.000 sysload=0.97 cputime=13.510 memavail=1445188 print_time=71980.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=25.2 pwm=0.000
Stats 321170.0: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000008 bytes_write=12514 bytes_read=107538 bytes_retransmit=9 bytes_invalid=0 send_seq=1348 receive_seq=1348 retransmit_seq=5 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004717  heater_bed: target=0 temp=24.9 pwm=0.000 sysload=0.97 cputime=13.531 memavail=1445196 print_time=71980.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.6 pwm=0.000
Stats 321171.0: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000008 bytes_write=12520 bytes_read=107659 bytes_retransmit=9 bytes_invalid=0 send_seq=1349 receive_seq=1349 retransmit_seq=5 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004718  heater_bed: target=0 temp=25.2 pwm=0.000 sysload=0.97 cputime=13.551 memavail=1445196 print_time=71980.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.7 pwm=0.000
Stats 321172.0: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000008 bytes_write=12526 bytes_read=107765 bytes_retransmit=9 bytes_invalid=0 send_seq=1350 receive_seq=1350 retransmit_seq=5 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004720  heater_bed: target=0 temp=25.1 pwm=0.000 sysload=0.90 cputime=13.569 memavail=1445196 print_time=71980.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.9 pwm=0.000
Stats 321173.0: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000008 bytes_write=12532 bytes_read=107880 bytes_retransmit=9 bytes_invalid=0 send_seq=1351 receive_seq=1351 retransmit_seq=5 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004720  heater_bed: target=0 temp=25.3 pwm=0.000 sysload=0.90 cputime=13.585 memavail=1444948 print_time=71980.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=25.2 pwm=0.000
Stats 321174.0: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000008 bytes_write=12538 bytes_read=107993 bytes_retransmit=9 bytes_invalid=0 send_seq=1352 receive_seq=1352 retransmit_seq=5 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004719  heater_bed: target=0 temp=25.3 pwm=0.000 sysload=0.90 cputime=13.601 memavail=1444948 print_time=71980.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=25.0 pwm=0.000
Stats 321175.0: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000007 bytes_write=12544 bytes_read=108105 bytes_retransmit=9 bytes_invalid=0 send_seq=1353 receive_seq=1353 retransmit_seq=5 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004719  heater_bed: target=0 temp=25.4 pwm=0.000 sysload=0.90 cputime=13.614 memavail=1444920 print_time=71980.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.7 pwm=0.000
Stats 321176.0: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000007 bytes_write=12550 bytes_read=108219 bytes_retransmit=9 bytes_invalid=0 send_seq=1354 receive_seq=1354 retransmit_seq=5 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004724  heater_bed: target=0 temp=25.0 pwm=0.000 sysload=0.90 cputime=13.627 memavail=1444952 print_time=71980.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.5 pwm=0.000
Stats 321177.0: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000007 bytes_write=12556 bytes_read=108339 bytes_retransmit=9 bytes_invalid=0 send_seq=1355 receive_seq=1355 retransmit_seq=5 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004724  heater_bed: target=0 temp=24.8 pwm=0.000 sysload=0.82 cputime=13.641 memavail=1444952 print_time=71980.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.6 pwm=0.000
Stats 321178.0: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000007 bytes_write=12562 bytes_read=108445 bytes_retransmit=9 bytes_invalid=0 send_seq=1356 receive_seq=1356 retransmit_seq=5 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004723  heater_bed: target=0 temp=24.9 pwm=0.000 sysload=0.82 cputime=13.658 memavail=1444952 print_time=71980.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.8 pwm=0.000
Stats 321179.0: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000007 bytes_write=12568 bytes_read=108566 bytes_retransmit=9 bytes_invalid=0 send_seq=1357 receive_seq=1357 retransmit_seq=5 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004724  heater_bed: target=0 temp=25.3 pwm=0.000 sysload=0.82 cputime=13.676 memavail=1444952 print_time=71980.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=25.0 pwm=0.000
Stats 321180.0: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000007 bytes_write=12574 bytes_read=108700 bytes_retransmit=9 bytes_invalid=0 send_seq=1358 receive_seq=1358 retransmit_seq=5 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004724  heater_bed: target=0 temp=25.3 pwm=0.000 sysload=0.82 cputime=13.692 memavail=1444960 print_time=71980.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=25.0 pwm=0.000
Stats 321181.0: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000007 bytes_write=12580 bytes_read=108806 bytes_retransmit=9 bytes_invalid=0 send_seq=1359 receive_seq=1359 retransmit_seq=5 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004722  heater_bed: target=0 temp=25.3 pwm=0.000 sysload=0.82 cputime=13.706 memavail=1444960 print_time=71980.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.7 pwm=0.000
Stats 321182.0: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000007 bytes_write=12586 bytes_read=108927 bytes_retransmit=9 bytes_invalid=0 send_seq=1360 receive_seq=1360 retransmit_seq=5 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004721  heater_bed: target=0 temp=25.0 pwm=0.000 sysload=0.76 cputime=13.720 memavail=1444960 print_time=71980.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.9 pwm=0.000
Stats 321183.0: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000007 bytes_write=12598 bytes_read=109064 bytes_retransmit=9 bytes_invalid=0 send_seq=1362 receive_seq=1362 retransmit_seq=5 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004720  heater_bed: target=0 temp=25.0 pwm=0.000 sysload=0.76 cputime=13.734 memavail=1445216 print_time=71980.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.7 pwm=0.000
Stats 321184.0: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000007 bytes_write=12604 bytes_read=109170 bytes_retransmit=9 bytes_invalid=0 send_seq=1363 receive_seq=1363 retransmit_seq=5 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004718  heater_bed: target=0 temp=25.0 pwm=0.000 sysload=0.76 cputime=13.746 memavail=1445216 print_time=71980.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=25.0 pwm=0.000
Stats 321185.0: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000007 bytes_write=12610 bytes_read=109304 bytes_retransmit=9 bytes_invalid=0 send_seq=1364 receive_seq=1364 retransmit_seq=5 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004719  heater_bed: target=0 temp=25.3 pwm=0.000 sysload=0.76 cputime=13.765 memavail=1445248 print_time=71980.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=25.0 pwm=0.000
Stats 321186.0: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000007 bytes_write=12616 bytes_read=109425 bytes_retransmit=9 bytes_invalid=0 send_seq=1365 receive_seq=1365 retransmit_seq=5 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004719  heater_bed: target=0 temp=25.1 pwm=0.000 sysload=0.76 cputime=13.784 memavail=1445248 print_time=71980.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=25.1 pwm=0.000
Stats 321187.0: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000007 bytes_write=12622 bytes_read=109531 bytes_retransmit=9 bytes_invalid=0 send_seq=1366 receive_seq=1366 retransmit_seq=5 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004720  heater_bed: target=0 temp=25.3 pwm=0.000 sysload=0.70 cputime=13.802 memavail=1445248 print_time=71980.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.9 pwm=0.000
Stats 321188.0: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000007 bytes_write=12628 bytes_read=109652 bytes_retransmit=9 bytes_invalid=0 send_seq=1367 receive_seq=1367 retransmit_seq=5 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004725  heater_bed: target=0 temp=25.3 pwm=0.000 sysload=0.70 cputime=13.821 memavail=1445288 print_time=71980.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.9 pwm=0.000
Stats 321189.0: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000007 bytes_write=12634 bytes_read=109773 bytes_retransmit=9 bytes_invalid=0 send_seq=1368 receive_seq=1368 retransmit_seq=5 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004724  heater_bed: target=0 temp=25.2 pwm=0.000 sysload=0.70 cputime=13.840 memavail=1445256 print_time=71980.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.8 pwm=0.000
Stats 321190.0: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000007 bytes_write=12640 bytes_read=109892 bytes_retransmit=9 bytes_invalid=0 send_seq=1369 receive_seq=1369 retransmit_seq=5 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004724  heater_bed: target=0 temp=25.0 pwm=0.000 sysload=0.70 cputime=13.858 memavail=1445256 print_time=71980.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=25.0 pwm=0.000
Stats 321191.0: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000007 bytes_write=12646 bytes_read=110013 bytes_retransmit=9 bytes_invalid=0 send_seq=1370 receive_seq=1370 retransmit_seq=5 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004729  heater_bed: target=0 temp=25.2 pwm=0.000 sysload=0.70 cputime=13.878 memavail=1445192 print_time=71980.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.9 pwm=0.000
Stats 321192.0: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000007 bytes_write=12652 bytes_read=110134 bytes_retransmit=9 bytes_invalid=0 send_seq=1371 receive_seq=1371 retransmit_seq=5 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004728  heater_bed: target=0 temp=25.2 pwm=0.000 sysload=0.80 cputime=13.898 memavail=1445232 print_time=71980.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.7 pwm=0.000
Stats 321193.0: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000007 bytes_write=12658 bytes_read=110240 bytes_retransmit=9 bytes_invalid=0 send_seq=1372 receive_seq=1372 retransmit_seq=5 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004728  heater_bed: target=0 temp=25.2 pwm=0.000 sysload=0.80 cputime=13.916 memavail=1445740 print_time=71980.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.7 pwm=0.000
Stats 321194.0: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000007 bytes_write=12664 bytes_read=110361 bytes_retransmit=9 bytes_invalid=0 send_seq=1373 receive_seq=1373 retransmit_seq=5 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004728  heater_bed: target=0 temp=25.1 pwm=0.000 sysload=0.80 cputime=13.935 memavail=1445740 print_time=71980.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.7 pwm=0.000
Stats 321195.1: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000007 bytes_write=12670 bytes_read=110495 bytes_retransmit=9 bytes_invalid=0 send_seq=1374 receive_seq=1374 retransmit_seq=5 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004731  heater_bed: target=0 temp=25.1 pwm=0.000 sysload=0.80 cputime=13.956 memavail=1445708 print_time=71980.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.5 pwm=0.000
Stats 321196.1: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000007 bytes_write=12676 bytes_read=110601 bytes_retransmit=9 bytes_invalid=0 send_seq=1375 receive_seq=1375 retransmit_seq=5 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004731  heater_bed: target=0 temp=25.0 pwm=0.000 sysload=0.80 cputime=13.976 memavail=1445676 print_time=71980.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.8 pwm=0.000
Stats 321197.1: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000007 bytes_write=12682 bytes_read=110722 bytes_retransmit=9 bytes_invalid=0 send_seq=1376 receive_seq=1376 retransmit_seq=5 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004730  heater_bed: target=0 temp=25.1 pwm=0.000 sysload=0.74 cputime=13.995 memavail=1445676 print_time=71980.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=25.0 pwm=0.000
Stats 321198.1: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000007 bytes_write=12688 bytes_read=110843 bytes_retransmit=9 bytes_invalid=0 send_seq=1377 receive_seq=1377 retransmit_seq=5 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004730  heater_bed: target=0 temp=25.4 pwm=0.000 sysload=0.74 cputime=14.014 memavail=1445620 print_time=71980.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.8 pwm=0.000
Stats 321199.1: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000007 bytes_write=12694 bytes_read=110949 bytes_retransmit=9 bytes_invalid=0 send_seq=1378 receive_seq=1378 retransmit_seq=5 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004729  heater_bed: target=0 temp=25.2 pwm=0.000 sysload=0.74 cputime=14.035 memavail=1445588 print_time=71980.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.8 pwm=0.000
Stats 321200.1: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000007 bytes_write=12700 bytes_read=111083 bytes_retransmit=9 bytes_invalid=0 send_seq=1379 receive_seq=1379 retransmit_seq=5 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004728  heater_bed: target=0 temp=25.0 pwm=0.000 sysload=0.74 cputime=14.055 memavail=1445584 print_time=71980.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.7 pwm=0.000
Stats 321201.1: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000007 bytes_write=12706 bytes_read=111204 bytes_retransmit=9 bytes_invalid=0 send_seq=1380 receive_seq=1380 retransmit_seq=5 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004726  heater_bed: target=0 temp=25.0 pwm=0.000 sysload=0.74 cputime=14.072 memavail=1445616 print_time=71980.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.5 pwm=0.000
Stats 321202.1: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000007 bytes_write=12712 bytes_read=111310 bytes_retransmit=9 bytes_invalid=0 send_seq=1381 receive_seq=1381 retransmit_seq=5 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004725  heater_bed: target=0 temp=25.1 pwm=0.000 sysload=0.68 cputime=14.085 memavail=1445632 print_time=71980.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.8 pwm=0.000
Stats 321203.1: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000007 bytes_write=12718 bytes_read=111431 bytes_retransmit=9 bytes_invalid=0 send_seq=1382 receive_seq=1382 retransmit_seq=5 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004723  heater_bed: target=0 temp=25.4 pwm=0.000 sysload=0.68 cputime=14.100 memavail=1445408 print_time=71980.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=25.1 pwm=0.000
Stats 321204.1: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000007 bytes_write=12724 bytes_read=111552 bytes_retransmit=9 bytes_invalid=0 send_seq=1383 receive_seq=1383 retransmit_seq=5 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004721  heater_bed: target=0 temp=25.3 pwm=0.000 sysload=0.68 cputime=14.113 memavail=1445372 print_time=71980.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=25.2 pwm=0.000
Stats 321205.1: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000007 bytes_write=12730 bytes_read=111671 bytes_retransmit=9 bytes_invalid=0 send_seq=1384 receive_seq=1384 retransmit_seq=5 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004719  heater_bed: target=0 temp=25.4 pwm=0.000 sysload=0.68 cputime=14.126 memavail=1445404 print_time=71980.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=25.0 pwm=0.000
Stats 321206.1: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000007 bytes_write=12736 bytes_read=111792 bytes_retransmit=9 bytes_invalid=0 send_seq=1385 receive_seq=1385 retransmit_seq=5 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004721  heater_bed: target=0 temp=25.0 pwm=0.000 sysload=0.68 cputime=14.143 memavail=1445108 print_time=71980.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.7 pwm=0.000
Stats 321207.1: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000007 bytes_write=12742 bytes_read=111913 bytes_retransmit=9 bytes_invalid=0 send_seq=1386 receive_seq=1386 retransmit_seq=5 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004721  heater_bed: target=0 temp=25.0 pwm=0.000 sysload=0.62 cputime=14.163 memavail=1445140 print_time=71980.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.6 pwm=0.000
Stats 321208.1: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000007 bytes_write=12748 bytes_read=112019 bytes_retransmit=9 bytes_invalid=0 send_seq=1387 receive_seq=1387 retransmit_seq=5 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004721  heater_bed: target=0 temp=25.1 pwm=0.000 sysload=0.62 cputime=14.183 memavail=1445140 print_time=71980.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.7 pwm=0.000
Stats 321209.1: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000007 bytes_write=12754 bytes_read=112140 bytes_retransmit=9 bytes_invalid=0 send_seq=1388 receive_seq=1388 retransmit_seq=5 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004721  heater_bed: target=0 temp=25.2 pwm=0.000 sysload=0.62 cputime=14.205 memavail=1444408 print_time=71980.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.7 pwm=0.000
Stats 321210.1: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000007 bytes_write=12760 bytes_read=112274 bytes_retransmit=9 bytes_invalid=0 send_seq=1389 receive_seq=1389 retransmit_seq=5 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004719  heater_bed: target=0 temp=25.2 pwm=0.000 sysload=0.62 cputime=14.221 memavail=1444492 print_time=71980.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=25.0 pwm=0.000
Stats 321211.1: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000007 bytes_write=12766 bytes_read=112380 bytes_retransmit=9 bytes_invalid=0 send_seq=1390 receive_seq=1390 retransmit_seq=5 srtt=0.002 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004718  heater_bed: target=0 temp=25.2 pwm=0.000 sysload=0.62 cputime=14.234 memavail=1444428 print_time=71980.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.7 pwm=0.000
Stats 321212.1: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000007 bytes_write=12772 bytes_read=112501 bytes_retransmit=9 bytes_invalid=0 send_seq=1391 receive_seq=1391 retransmit_seq=5 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004716  heater_bed: target=0 temp=25.0 pwm=0.000 sysload=0.57 cputime=14.250 memavail=1441852 print_time=71980.000 buffer_time=0.000 print_stall=0 extruder: target=0 temp=24.7 pwm=0.000
Running Command {update_git_script}...:
